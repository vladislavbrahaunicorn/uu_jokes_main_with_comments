"use strict";

/**
 * The identity of a client application.
 */
class ClientIdentity {
  /**
   * Creates new instance of client application identity.
   * @param {String} uuIdentity Unique identifier of the client application
   * @param {Object} data Additional identity data.
   * @param {String} data.uri Registered URI of client application
   * @param {String} data.product Client application product
   * @param {String} data.vendor Client application vendor
   * @param {String} data.app Client application name
   * @param {String} data.subApp Client application subapp
   * @param {String} data.asid Client application asid
   * @param {String} data.awid Client application awid
   * @private
   */
  constructor(uuIdentity, data = {}) {
    this._uuIdentity = uuIdentity;
    if (data) {
      this._uri = data.uri;
      this._product = data.product;
      this._vendor = data.vendor;
      this._app = data.app;
      this._subApp = data.subApp;
      this._asid = data.asid;
      this._awid = data.awid;
    }
  }

  /**
   * Returns unique identifier of the client application.
   * @returns {String|null} Unique identifier of the client application
   */
  getUuIdentity() {
    return this._uuIdentity;
  }

  /**
   * Returns registered URI of client application.
   * @returns {String|null} Registered URI of client application
   */
  getUri() {
    return this._uri;
  }

  /**
   * Returns client application product.
   * @returns {String|null} Client application product
   */
  getProduct() {
    return this._product;
  }

  /**
   * Returns client application vendor.
   * @returns {String|null} Client application vendor
   */
  getVendor() {
    return this._vendor;
  }

  /**
   * Returns client application name.
   * @returns {String|null} Client application name
   */
  getApp() {
    return this._app;
  }

  /**
   * Returns client application subapp.
   * @returns {String|null} Client application subapp
   */
  getSubApp() {
    return this._subApp;
  }

  /**
   * Returns client application asid.
   * @returns {String|null} Client application asid
   */
  getAsid() {
    return this._asid;
  }

  /**
   * Returns client application awid.
   * @returns {String|null} Client application awid
   */
  getAwid() {
    return this._awid;
  }
}

module.exports = ClientIdentity;
