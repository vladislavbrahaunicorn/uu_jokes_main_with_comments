import React from "react";
import * as UU5 from "uu5g04";
import "uu5g04-bricks";
import Cfg from "../config/config.js";
import Css from "./css.js";

const classNames = {
  main: () => Cfg.CSS + "menu-panel-context-menu",
  switch: props => Css.css`
    ${props.disabled ? "pointer-events: none" : ""};
  `,
  contentWrapper: Css.css`
    flex-grow: 1;
  `
};

const getSwitch = itemProps => {
  const onClick = ({ component, event, switchedOn }) => {
    if (typeof itemProps.onClick === "function") {
      itemProps.onClick({ event, content: itemProps.content, id: component.getId(), value: switchedOn });
    }

    component.toggle();
  };

  return (
    <UU5.Bricks.Switch
      size="s"
      colorSchema="blue-rich"
      // eslint-disable-next-line react/jsx-no-bind
      onChange={onClick}
      disabled={itemProps.disabled}
      className={classNames.switch(itemProps)}
    />
  );
};

const getContent = itemProps => {
  return (
    <>
      <UU5.Bricks.Span content={itemProps.content} className={classNames.contentWrapper} />
      {itemProps.type === "checkbox" ? getSwitch(itemProps) : null}
    </>
  );
};

const getItems = props => {
  return Array.isArray(props.items)
    ? props.items.map((item, index) => {
        const onClick = ({ component, event }) => {
          component.close();

          if (typeof item.onClick === "function") {
            item.onClick({ event, content: item.content, id: component.getId() });
          }
        };

        let subItems = getItems(item);
        return (
          <UU5.Bricks.ContextMenu.Item
            id={item.id}
            icon={item.icon}
            // eslint-disable-next-line react/jsx-no-bind
            onClick={onClick}
            disabled={item.disabled}
            label={getContent(item)}
            key={index}
          >
            {subItems}
          </UU5.Bricks.ContextMenu.Item>
        );
      })
    : null;
};

const getProps = props => {
  let propsToPass = { ...props };

  propsToPass.className += (propsToPass.className ? " " : "") + classNames.main();

  return propsToPass;
};

export const MenuPanelContextMenu = React.forwardRef((props, ref) => {
  return (
    <UU5.Bricks.ContextMenu {...getProps(props)} ref={ref}>
      {getItems(props)}
    </UU5.Bricks.ContextMenu>
  );
});

MenuPanelContextMenu.tagname = Cfg.TAG + "MenuPanelContextMenu";
MenuPanelContextMenu.propTypes = {
  items: UU5.PropTypes.arrayOf(
    UU5.PropTypes.shape({
      icon: UU5.PropTypes.string,
      type: UU5.PropTypes.oneOf(["text", "checkbox"]),
      onClick: UU5.PropTypes.func,
      items: UU5.PropTypes.arrayOf(UU5.PropTypes.object),
      content: UU5.PropTypes.any
    })
  )
};
MenuPanelContextMenu.defaultProps = {
  items: undefined
};
MenuPanelContextMenu.isStateless = true;

export default MenuPanelContextMenu;
