import React from "react";
import createReactClass from "create-react-class";
import * as UU5 from "uu5g04";
import * as Plus4U5 from "uu_plus4u5g01";

import Cfg from "../config/config.js";
import "./authors-editable-modal-form.less";
import TextLanguage from "./text-language.js";

export const AuthorsEditableModalForm = createReactClass({
  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: Cfg.TAG + "AuthorsEditableModalForm",
    classNames: {
      main: Cfg.CSS + " " + Cfg.CSS + "authors-editable-modal-form"
    },
    lsi: () => Plus4U5.Environment.Lsi.App.authors
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {},
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {};
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:reactLifeCycle
  //@@viewOff:reactLifeCycle

  //@@viewOn:interface
  getAuthors() {
    return this.props.authorList;
  },
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:private
  _onSave(values) {
    this.props.onSave(
      {
        id: this.props.author.id,
        uuId: this.props.author.uuId,
        code: this.props.author.code,
        name: values.name,
        role: values.role,
        content: this._desc.getValue(),
        photo: values.photo
      },
      this._controls
    );
  },
  _onCancel() {
    let { onCancel } = this.props;
    if (typeof onCancel === "function") onCancel();
  },

  _getChild() {
    return (
      <UU5.Forms.Form
        {...this.getMainPropsToPass()}
        onSave={({ values }) => {
          this._onSave(values);
        }}
        onCancel={this._onCancel}
      >
        <UU5.Forms.Text
          value={this.props.author.name}
          name="name"
          label={this.getLsiComponent("addAuthorName")}
          labelColWidth="xs12 s12 m4 l4 xl4"
          inputColWidth="xs12 s12 m7 l7 xl7"
          inputAttrs={{ autoComplete: "off" }}
          required
          pattern="^.{0,4000}$"
          patternMessage={this.getLsiComponent("textTooLong4000")}
        />

        <UU5.Forms.Text
          name="uuId"
          value={this.props.author.uuId}
          label={this.getLsiComponent("addAuthorUuId")}
          labelColWidth="xs12 s12 m4 l4 xl4"
          inputColWidth="xs12 s12 m7 l7 xl7"
          readOnly={true}
          inputAttrs={{ autoComplete: "off" }}
        />

        <UU5.Forms.Text
          value={this.props.author.role}
          name="role"
          label={this.getLsiComponent("addAuthorRole")}
          labelColWidth="xs12 s12 m4 l4 xl4"
          inputColWidth="xs12 s12 m7 l7 xl7"
          inputAttrs={{ autoComplete: "off" }}
          pattern="^.{0,4000}$"
          patternMessage={this.getLsiComponent("textTooLong4000")}
        />

        <TextLanguage
          ref_={r => (this._desc = r)}
          textArea
          label={this.getLsiComponent("addAuthorDesc")}
          value={this.props.author.content}
          languages={this.props.languages}
        />

        <UU5.Forms.File
          value={this.props.author.photo}
          name="photo"
          label={this.getLsiComponent("addAuthorPhoto")}
          labelColWidth="xs12 s12 m4 l4 xl4"
          inputColWidth="xs12 s12 m7 l7 xl7"
          onChange={opt => {
            if (opt.value && (!opt.value.type || !opt.value.type.match(/image\//))) {
              opt.component.setFeedback("warning", this.getLsiComponent("authorsEditableInvalidImage"));
            } else {
              opt.component.onChangeDefault(opt);
            }
          }}
        />
        <UU5.Forms.Controls
          ref_={r => (this._controls = r)}
          buttonCancelProps={{
            content: this.getLsiComponent("buttonCancel")
          }}
          buttonSubmitProps={{
            content: this.getLsiComponent("buttonSave")
          }}
        />
      </UU5.Forms.Form>
    );
  },
  //@@viewOff:private

  //@@viewOn:render
  render() {
    return this._getChild();
  }
  //@@viewOff:render
});

export default AuthorsEditableModalForm;
