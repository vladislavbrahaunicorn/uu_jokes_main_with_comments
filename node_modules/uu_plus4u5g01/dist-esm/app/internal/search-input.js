//@@viewOn:imports
import * as UU5 from "uu5g04";
import "uu5g04-bricks";
import Config from "../config/config.js";
import Lsi from "../app-lsi.js";
import Css from "./css.js";
//@@viewOff:imports

export const SearchInput = UU5.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: Config.TAG + "SearchInput",
    classNames: {
      main: props => {
        let classNames = [Config.CSS + "search-input"];

        classNames.push(Css.css`
          display: inline-flex;
        `);

        if (props.isOpen) {
          classNames.push(Css.css`
            width: ${UU5.Common.Tools.fillUnit(props.maxWidth)};
          `);
        }

        return classNames.join(" ");
      },
      input: () => Css.css`
        && {
          flex-grow: 1;
          margin-top: 0;
          margin-bottom: 0;
        }
      `,
      button: () => Css.css`
        &&& {
          background-color: transparent;
        }
      `
    },
    lsi: Lsi.search
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    onSearch: UU5.PropTypes.func,
    isLoading: UU5.PropTypes.bool,
    isOpen: UU5.PropTypes.bool,
    maxWidth: UU5.PropTypes.oneOfType([UU5.PropTypes.string, UU5.PropTypes.number]),
    onButtonClick: UU5.PropTypes.func,
    colorSchema: UU5.PropTypes.string,
    value: UU5.PropTypes.string
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      onSearch: undefined,
      isLoading: false,
      isOpen: false,
      maxWidth: 232,
      onButtonClick: undefined,
      colorSchema: undefined,
      value: undefined
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:reactLifeCycle
  getInitialState() {
    this._executeOnChange = true;
    this._debouncedOnChange = UU5.Common.Tools.debounce(value => {
      if (this._executeOnChange) {
        // make sure that the component is mounted
        this._onSearch(value);
      }
    }, 500);

    return {
      value: this.props.value || ""
    };
  },

  componentWillUnmount() {
    this._executeOnChange = false;
  },
  //@@viewOff:reactLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overriding
  //@@viewOff:overriding

  //@@viewOn:private
  _onSearch(value) {
    this.props.onSearch({ value });
  },

  _onChange({ value }) {
    this.setState({ value });

    if (value) {
      this._debouncedOnChange(value);
    }
  },

  _onIconClick() {
    this.setState({ value: "" });
  },

  _getButton() {
    return (
      <UU5.Bricks.Button
        bgStyle="transparent"
        onClick={this.props.onButtonClick}
        className={this.getClassName("button")}
        colorSchema={this.props.colorSchema}
      >
        <UU5.Bricks.Icon icon="mdi-magnify" />
      </UU5.Bricks.Button>
    );
  },

  _getInput() {
    return (
      <UU5.Forms.TextIcon
        icon="mdi-close"
        bgStyle="underline"
        placeholder={this.getLsiValue("inputPlaceholder")}
        value={this.state.value}
        onChange={this._onChange}
        onClick={this._onIconClick}
        className={this.getClassName("input")}
        colorSchema={this.props.colorSchema}
      />
    );
  },
  //@@viewOff:private

  //@@viewOn:render
  render() {
    return (
      <div {...this.getMainAttrs()}>
        {this.props.isOpen ? (
          <>
            {this._getButton()}
            {this._getInput()}
          </>
        ) : (
          this._getButton()
        )}
      </div>
    );
  }
  //@@viewOff:render
});

export default SearchInput;
