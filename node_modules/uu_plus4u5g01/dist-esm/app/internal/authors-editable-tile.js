import React from "react";
import createReactClass from "create-react-class";

import * as UU5 from "uu5g04";
import * as Plus4U5 from "uu_plus4u5g01";

import Cfg from "../config/config.js";
import Css from "./css.js";
import AuthorsEditableTileDndHoc from "./authors-editable-tile-dnd-hoc.js";

import "./authors-editable-tile.less";

const IconTile = createReactClass({
  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    tagName: Cfg.TAG + "AuthorsEditableIconTile"
  },
  //@@viewOff:statics
  //@@viewOn:render
  render() {
    let { elevation, elevationHover, onClick, icon, cardClassName } = this.props;

    let cardExtraClassName = Css.css`
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
    `;
    let iconClassName = Css.css`font-size: 96px; color: ${UU5.Environment.colors.common.darkIcon};`;
    return (
      <UU5.Bricks.Card
        className={Cfg.CSS + "authors-editable-tile " + cardExtraClassName + " " + (cardClassName || "")}
        elevation={elevation}
        elevationHover={elevationHover}
        mainAttrs={{ onClick: onClick }}
      >
        <UU5.Bricks.Icon icon={icon} className={iconClassName} />
      </UU5.Bricks.Card>
    );
  }
  //@@viewOff:render
});
export const AuthorsEditableIconTile = AuthorsEditableTileDndHoc(
  IconTile,
  "Plus4U5.App.AuthorsTile",
  false,
  true,
  true
);

const Tile = createReactClass({
  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: Cfg.TAG + "AuthorsEditableTile",
    classNames: {
      main: Cfg.CSS + "authors-editable-tile",
      handle: Cfg.CSS + "authors-editable-tile-handle",
      portrait: Cfg.CSS + "authors-editable-tile-portrait",
      mainLabel: Cfg.CSS + "authors-editable-tile-main-label",
      secondaryLabel: Cfg.CSS + "authors-editable-tile-secondary-label",
      controls: Cfg.CSS + "authors-editable-tile-controls"
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  //@@viewOff:getDefaultProps

  //@@viewOn:reactLifeCycle
  //@@viewOff:reactLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:private
  _onEditClick() {
    this.props.editAuthor(this.props.data);
  },
  _onDeleteClick() {
    this.props.deleteAuthor(this.props.data);
  },
  //@@viewOff:private

  //@@viewOn:render
  render() {
    let elevationHover = this.props.elevationHover === null ? this.props.elevation : this.props.elevationHover;
    let { _connectDragSource } = this.props;

    return (
      <UU5.Bricks.Card {...this.getMainPropsToPass()} elevation={this.props.elevation} elevationHover={elevationHover}>
        {_connectDragSource(
          // NOTE Native <div> (<span>) is required by react-dnd.
          <div className={this.getClassName("handle")}>
            <UU5.Bricks.Icon icon="mdi-drag-vertical" />
          </div>
        )}
        <UU5.Bricks.Div>
          <UU5.Bricks.Div className={this.getClassName("controls")}>
            <UU5.Bricks.Button colorSchema="primary" onClick={this._onEditClick}>
              <UU5.Bricks.Icon icon={"mdi-pencil"} />
            </UU5.Bricks.Button>
            <UU5.Bricks.Button colorSchema="danger" onClick={this._onDeleteClick}>
              <UU5.Bricks.Icon icon={"mdi-delete"} />
            </UU5.Bricks.Button>
          </UU5.Bricks.Div>
          <UU5.Bricks.Div className={this.getClassName("portrait")}>
            <Plus4U5.Bricks.UserPhoto
              type="circle"
              width={this.props.small ? 80 : 100}
              src={this.props.src}
              uuIdentity={this.props.uuIdentity || (!this.props.src ? "0-0" : null)}
            />
          </UU5.Bricks.Div>
          <UU5.Bricks.Div>
            <UU5.Bricks.Div className={this.getClassName("mainLabel")}>
              <UU5.Bricks.Strong>{this.props.name}</UU5.Bricks.Strong>
            </UU5.Bricks.Div>
            <UU5.Bricks.Div className={this.getClassName("secondaryLabel")} content={this.props.role} />
            <UU5.Bricks.Div className={this.getClassName("secondaryLabel")} content={this.props.content} />
          </UU5.Bricks.Div>
        </UU5.Bricks.Div>
      </UU5.Bricks.Card>
    );
  }
  //@@viewOff:render
});

export const AuthorsEditableTile = AuthorsEditableTileDndHoc(Tile, "Plus4U5.App.AuthorsTile");
export default AuthorsEditableTile;
