import * as UU5 from "uu5g04";
import "uu5g04-bricks";
import * as Plus4U5 from "uu_plus4u5g01";

import "./licence.less";

export const Licence = UU5.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin, UU5.Common.SectionMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: "Plus4U5.App.Licence",
    classNames: {
      main: "plus4u5-app-licence",
      header: "plus4u5-app-licence-header",
      row: "plus4u5-app-licence-row",
      rowTitle: "plus4u5-app-licence-row-title",
      rowContent: "plus4u5-app-licence-row-content",
      alignLeft: "plus4u5-app-licence-align-left",
      alignCenter: "plus4u5-app-licence-align-center"
    },
    lsi: () => Plus4U5.Environment.Lsi.App.licence,
    opt: {
      dummyLevel: true
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    organisation: UU5.PropTypes.shape({
      name: UU5.PropTypes.string,
      uri: UU5.PropTypes.string
    }),
    authorities: UU5.PropTypes.arrayOf(
      UU5.PropTypes.shape({
        name: UU5.PropTypes.string,
        uri: UU5.PropTypes.string
      })
    ),
    awid: UU5.PropTypes.any,
    textAlign: UU5.PropTypes.oneOf(["left", "center"])
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      organisation: null,
      authorities: [],
      awid: undefined,
      textAlign: "center"
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getLinks(links) {
    if (!links) return;

    if (Array.isArray(links)) {
      const retArr = [];
      links.forEach((link, i) => {
        retArr.push(<UU5.Bricks.Link key={i} href={link.uri} content={link.name} target="_blank" />);
        if (i < links.length - 1) retArr.push(<span>,&nbsp;</span>);
      });
      return retArr;
    } else {
      return <UU5.Bricks.Link href={links.uri} content={links.name} target="_blank" />;
    }
  },

  _getRow(title, content, type) {
    let contentRowContent;
    if (type === "link") {
      contentRowContent = this._getLinks(content);
    } else {
      contentRowContent = content;
    }

    return (
      <UU5.Bricks.Div className={this.getClassName().row}>
        <UU5.Bricks.Span className={this.getClassName().rowTitle} content={title} />
        <UU5.Bricks.Span className={this.getClassName().rowContent} content={contentRowContent} />
      </UU5.Bricks.Div>
    );
  },

  _getMainPropsToPass() {
    let props = this.getMainPropsToPass();

    if (this.props.textAlign === "left") {
      props.className += " " + this.getClassName("alignLeft");
    } else if (this.props.textAlign === "center") {
      props.className += " " + this.getClassName("alignCenter");
    }

    return props;
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render() {
    const header = this.props.header || this.getLsiComponent("header");

    return (
      <UU5.Bricks.Section {...this._getMainPropsToPass()} content={null} header={header} level={this.props.level || 4}>
        {this._getRow(this.getLsiComponent("organisation"), this.props.organisation, "link")}
        {this._getRow(this.getLsiComponent("authorities"), this.props.authorities, "link")}
        {this._getRow(this.getLsiComponent("awid"), this.props.awid, "awid")}
      </UU5.Bricks.Section>
    );
  }
  //@@viewOff:render
});

export default Licence;
