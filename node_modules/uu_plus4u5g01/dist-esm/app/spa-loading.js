import * as UU5 from "uu5g04";
import "uu5g04-bricks";

import "./spa-loading.less";

export const SpaLoading = UU5.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin, UU5.Common.ContentMixin, UU5.Common.ColorSchemaMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: "Plus4U5.App.SpaLoading",
    classNames: {
      main: "plus4u5-app-spa-loading uu5-noindex",
      spinner: "plus4u5-app-spa-loading-spinner",
      content: "plus4u5-app-spa-loading-content",
      bgTransparent: "plus4u5-app-spa-loading-bg-style-transparent",
      bgFilled: "plus4u5-app-spa-loading-bg-style-filled"
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    bgStyle: UU5.PropTypes.oneOf(["filled", "transparent"])
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      bgStyle: "filled"
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render() {
    let content = this.getContent() || this.props.children || <UU5.Bricks.Icon icon="plus4u5-plus4u" />;
    let mainProps = this.getMainPropsToPass();
    if (this.props.bgStyle === "transparent") {
      mainProps.className += " " + this.getClassName("bgTransparent");
    } else {
      mainProps.className += " " + this.getClassName("bgFilled");
    }
    return (
      <UU5.Bricks.Loading {...mainProps} content={null}>
        <UU5.Bricks.Div className={this.getClassName().spinner}>
          <UU5.Bricks.Div className="first" />
          <UU5.Bricks.Div className="second" />
          <UU5.Bricks.Div className="third" />
        </UU5.Bricks.Div>
        <UU5.Bricks.Div className={this.getClassName().content} content={content} />
      </UU5.Bricks.Loading>
    );
  }
  //@@viewOff:render
});

export default SpaLoading;
