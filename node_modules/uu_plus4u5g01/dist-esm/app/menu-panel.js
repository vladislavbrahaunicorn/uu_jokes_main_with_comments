import * as UU5 from "uu5g04";
import "uu5g04-bricks";
import Cfg from "./config/config.js";
import Css from "./internal/css.js";
import MenuPanelContextMenu from "./internal/menu-panel-context-menu.js";

const itemPropTypes = {
  icon: UU5.PropTypes.string,
  type: UU5.PropTypes.oneOf(["text", "checkbox"]),
  onClick: UU5.PropTypes.func,
  items: UU5.PropTypes.arrayOf(UU5.PropTypes.object),
  content: UU5.PropTypes.any,
  disabled: UU5.PropTypes.bool
};

export const MenuPanel = UU5.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ContentMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: Cfg.TAG + "MenuPanel",
    classNames: {
      main: props => {
        let classNames = [Cfg.CSS + "menu-panel"];

        classNames.push(
          Css.css`
            &&&& > .uu5-bricks-panel-header {
              font-size: 12px;
              color: #757575;
              letter-spacing: 1px;
              line-height: 16px;
              background-color: transparent;
              padding: 5px 20px 7px 20px;
              text-transform: uppercase;

              & > .uu5-bricks-panel-header-icon {
                font-size: 16px;
              }

              & > .uu5-bricks-panel-header-content {
                display: flex;
                align-items: center;
                width: 100%;
                justify-content: space-between;
                font-size: 12px;
              }
            }

            & > .uu5-bricks-panel-body > .uu5-bricks-panel-body-body {
              padding: 0;

              & > .plus4u5-app-menu-panel-list, & > .plus4u5-app-menu-panel-tree {
                padding-top: 0;
              }
            }
          `
        );

        if (props.borderBottom) {
          classNames.push(Css.css`border-bottom: solid 1px #E0E0E0`);
        }

        if (
          props.backgroundColorSchema &&
          props.backgroundColorSchema !== "default" &&
          props.backgroundColorSchema !== "custom"
        ) {
          let bgColorSchema = props.backgroundColorSchema;
          let color = UU5.Environment.colorSchemaMap[bgColorSchema].color;
          color = color.replace(/-rich$/, "");

          classNames.push(
            Css.css`
              background-color: ${UU5.Environment.colors[color].c100};
            `
          );
        }

        return classNames.join(" ");
      },
      headerContentWrapper: Css.css`
        padding-right: 8px;
      `,
      settingsCtxMenu: Css.css`
        & > .uu5-bricks-popover-body {
          align-items: stretch;
        }
      `,
      settingsMenuButton: Css.css`
        && > .uu5-bricks-icon {
          font-size: 16px;
        }
      `
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    header: UU5.PropTypes.any,
    settings: UU5.PropTypes.arrayOf(UU5.PropTypes.shape(itemPropTypes)),
    backgroundColorSchema: UU5.PropTypes.string,
    expanded: UU5.PropTypes.bool,
    borderRadius: UU5.PropTypes.string,
    elevation: UU5.PropTypes.oneOf(["0", "1", "2", "3", "4", "5", 0, 1, 2, 3, 4, 5]),
    borderBottom: UU5.PropTypes.bool,
    iconCollapsed: UU5.PropTypes.string,
    iconExpanded: UU5.PropTypes.string
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      header: undefined,
      settings: undefined,
      backgroundColorSchema: undefined,
      expanded: false,
      borderRadius: undefined,
      elevation: undefined,
      borderBottom: false,
      iconCollapsed: "mdi-chevron-double-down",
      iconExpanded: "mdi-chevron-double-up"
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:reactLifeCycle
  //@@viewOff:reactLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:private
  _registerCtxMenu(ref) {
    this._ctxMenu = ref;
  },

  _onClickDropdown(component, event) {
    event.stopPropagation();
    event.preventDefault();

    let openSettings = {
      aroundElement: component,
      position: "bottom-right"
    };

    this._ctxMenu.isOpen() ? this._ctxMenu.close() : this._ctxMenu.open(openSettings);
  },

  _getContextMenu() {
    return <MenuPanelContextMenu ref_={this._registerCtxMenu} items={this.props.settings} />;
  },

  _getHeader() {
    let result = [
      <div key="headerContent" className={this.getClassName("headerContentWrapper")}>
        {this.props.header}
      </div>
    ];

    if (this.props.settings) {
      result.push(
        <UU5.Bricks.Button
          className={this.getClassName("settingsMenuButton")}
          onClick={this._onClickDropdown}
          bgStyle="transparent"
          colorSchema="default"
          size="s"
        >
          <UU5.Bricks.Icon icon="mdi-dots-vertical" />
        </UU5.Bricks.Button>
      );
    }

    return result;
  },
  //@@viewOff:private

  //@@viewOn:render
  render() {
    return (
      <>
        <UU5.Bricks.Panel
          {...this.getMainPropsToPass()}
          expanded={this.props.expanded}
          header={this._getHeader()}
          content={this.getChildren()}
          iconCollapsed={this.props.iconCollapsed}
          iconExpanded={this.props.iconExpanded}
          elevation={this.props.elevation}
          borderRadius={this.props.borderRadius}
        />
        {this.props.settings ? this._getContextMenu() : null}
      </>
    );
  }
  //@@viewOff:render
});

export default MenuPanel;
