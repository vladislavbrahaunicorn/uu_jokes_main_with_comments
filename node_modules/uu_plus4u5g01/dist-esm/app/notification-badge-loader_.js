import * as UU5 from "uu5g04";
import "uu5g04-bricks";
import Calls from "./calls.js";

const DTO_OUT_WHEN_ERROR = { totalSize: 0 };

const NotificationBadgeLoader = UU5.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [
    UU5.Common.BaseMixin,
    UU5.Common.ElementaryMixin,
    UU5.Common.PureRenderMixin,
    UU5.Common.NestingLevelMixin,
    UU5.Common.LoadMixin
  ],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: "Plus4U5.App.NotificationBadgeLoader",
    nestingLevel: "smallBox",
    classNames: {
      main: "plus4u5-app-notification-badge-loader"
    },
    calls: {
      onLoad: "loadActivities",
      onReload: "loadActivities"
    },
    opt: {
      nestingLevelWrapper: true,
      reloadInterval: 5 * 60 * 1000
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  componentWillMount() {
    this.setCalls(Calls);
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  getOnLoadData_(props) {
    return {
      uuIdentity: props.uuIdentity
    };
  },

  onLoadError_(errorDtoOut) {
    let dtoOut = DTO_OUT_WHEN_ERROR;
    this.onLoadSuccessDefault(dtoOut);
  },

  onLoadSuccess_(dtoOut) {
    // TODO: why? it should be some event when reload is called
    UU5.Environment.uu5DataMap["Plus4U5.App.NotificationBadge"] = {
      timeStamp: Date.now(),
      data: dtoOut
    };
    this.onLoadSuccess(dtoOut);
  },
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render() {
    let child = null;

    if (this.isReady()) {
      let count = 0;
      let dtoOut = this.getDtoOut();
      if (dtoOut && dtoOut.pageEntries && (count = dtoOut.pageEntries.length)) {
        child = <UU5.Bricks.Badge {...this.getMainPropsToPass()} colorSchema="danger" content={count} />;
      }
    }

    return child;
  }
  //@@viewOff:render
});

export default NotificationBadgeLoader;
