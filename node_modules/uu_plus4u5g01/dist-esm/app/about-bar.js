//@@viewOn:imports
import * as UU5 from "uu5g04";
import * as Plus4U5 from "uu_plus4u5g01";
import "uu5g04-bricks";
import Config from "./config/config.js";
import Lsi from "./app-lsi.js";
import Css from "./internal/css.js";
//@@viewOff:imports

const preventEvent = event => {
  event => event.preventDefault();
};

export const AboutBar = UU5.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: Config.TAG + "AboutBar",
    classNames: {
      main:
        Config.TAG +
        "about-bar " +
        Css.css`
        padding: 4px 12px;
      `,
      link: Css.css`
        && {
          font-family: ClearSans-Bold;
          color: #757575;
          line-height: 20px;
          text-decoration: none;
        }
      `
    },
    lsi: () => Lsi.about
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    about: UU5.PropTypes.arrayOf(
      UU5.PropTypes.shape({
        content: UU5.PropTypes.node,
        page: UU5.PropTypes.string
      })
    )
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      about: undefined
    };
  },

  //@@viewOff:getDefaultProps

  //@@viewOn:reactLifeCycle
  //@@viewOff:reactLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overriding
  //@@viewOff:overriding

  //@@viewOn:private
  _getButton() {
    let data = this.props.about[0];

    return (
      <UU5.Bricks.Button bgStyle="transparent">
        <UU5.Bricks.Link href={data.page} content={data.content} className={this.getClassName("link")} />
      </UU5.Bricks.Button>
    );
  },

  _getDropdown() {
    return (
      <UU5.Bricks.Dropdown
        label={this.getLsiComponent("label")}
        iconOpen="mdi-menu-up"
        iconClosed="mdi-menu-down"
        bgStyle="transparent"
      >
        {this.props.about.map((item, index) => (
          <UU5.Bricks.Dropdown.Item key={index} href={item.page} onClick={preventEvent} label={item.content} />
        ))}
      </UU5.Bricks.Dropdown>
    );
  },

  _getContent() {
    if (!Array.isArray(this.props.about)) {
      return null;
    }

    if (this.props.about.length === 1) {
      return this._getButton();
    } else if (this.props.about.length > 1) {
      return this._getDropdown();
    } else {
      return null;
    }
  },
  //@@viewOff:private

  //@@viewOn:render
  render() {
    return <div {...this.getMainAttrs()}>{this._getContent()}</div>;
  }
  //@@viewOff:render
});

export default AboutBar;
