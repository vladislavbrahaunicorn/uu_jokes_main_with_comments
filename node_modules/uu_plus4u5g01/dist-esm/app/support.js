//@@viewOn:imports
import * as UU5 from "uu5g04";
import "uu5g04-bricks";
import Config from "./config/config.js";
import * as Plus4U5 from "uu_plus4u5g01";
import LoginButton from "./login-button";

import "./support.less";
//@@viewOff:imports

export const Support = UU5.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: Config.TAG + "Support",
    classNames: {
      main: Config.CSS + "support",
      description: Config.CSS + "support-description",
      buttons: Config.CSS + "support-buttons",
      productPortal: Config.CSS + "support-product-portal",
      button: Config.CSS + "support-button",
      buttonLabel: Config.CSS + "support-button-label",
      buttonContent: Config.CSS + "support-button-content"
    },
    lsi: () => Plus4U5.Environment.Lsi.App.support
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    uuFlsUri: UU5.PropTypes.string.isRequired,
    description: UU5.PropTypes.any,
    //uuSlsUri: UU5.PropTypes.string,
    productCode: UU5.PropTypes.string,
    productPortalUri: UU5.PropTypes.string
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      uuFlsUri: undefined,
      description: undefined,
      //uuSlsUri: undefined,
      productCode: undefined,
      productPortalUri: undefined
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:reactLifeCycle
  //@@viewOff:reactLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overriding
  //@@viewOff:overriding

  //@@viewOn:private
  //description
  _getDescription() {
    const { description } = this.props;

    let desc = null;

    if (description !== null) {
      return (
        <UU5.Common.Identity>
          {({ identity }) => (
            <UU5.Bricks.Span
              className={this.getClassName("description")}
              nestingLevel="inline"
              content={description || (identity ? this.getLsiComponent("description") : this.getLsiComponent("descriptionLogin"))}
            />
          )}
        </UU5.Common.Identity>
      );
    }

    return desc;
  },

  _getFlsButton() {
    return (
      <div className={this.getClassName("button")}>
        <UU5.Common.Identity>
          {({ identity }) => identity ? (
            <>
              <div className={this.getClassName("buttonLabel")}>
                {this.getLsiComponent("flsButton")}
              </div>
              <div className={this.getClassName("buttonContent")}>
                {UU5.Common.Tools.findComponent("UuFls.Bricks.CreateIssueButton", {
                  flsBaseUri: this.props.uuFlsUri,
                  productCode: this.props.productCode,
                  colorSchema: "blue-rich"
                })}
              </div>
            </>
          ) : (
            <LoginButton />
          )}
        </UU5.Common.Identity>
      </div>
    );
  },

  //buttons
  _getButtons() {
    return <div className={this.getClassName("buttons")}>{this._getFlsButton()}</div>;
  },

  //portalUri
  _getProductPortalUri() {
    let { productPortalUri } = this.props;

    let uri = null;
    if (productPortalUri) {
      productPortalUri = productPortalUri.startsWith("http")
        ? productPortalUri
        : Plus4U5.Common.Tools.getLegacyUrl(productPortalUri);

      uri = (
        <div className={this.getClassName("productPortal")}>
          <UU5.Bricks.Link href={productPortalUri} target="_blank" content={this.getLsiComponent("productPortal")} />
        </div>
      );
    }

    return uri;
  },
  //@@viewOff:private

  //@@viewOn:render
  render() {
    return (
      <UU5.Bricks.Div {...this.getMainPropsToPass()}>
        {this._getDescription()}
        {this._getButtons()}
        {this._getProductPortalUri()}
      </UU5.Bricks.Div>
    );
  }
  //@@viewOff:render
});

export default Support;
