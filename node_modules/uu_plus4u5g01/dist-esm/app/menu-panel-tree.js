import * as UU5 from "uu5g04";
import "uu5g04-bricks";
import Cfg from "./config/config.js";
import Css from "./internal/css.js";
import TreeMenuItem from "./internal/tree-menu-item.js";

const ClassNames = UU5.Common.ClassNames;

const itemPropTypes = {
  icon: UU5.PropTypes.string,
  type: UU5.PropTypes.oneOf(["text", "checkbox"]),
  onClick: UU5.PropTypes.func,
  items: UU5.PropTypes.arrayOf(UU5.PropTypes.object),
  content: UU5.PropTypes.any,
  disabled: UU5.PropTypes.bool
};

export const MenuPanelTree = UU5.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ContentMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: Cfg.TAG + "MenuPanelTree",
    classNames: {
      main: props => {
        let classNames = [Cfg.CSS + "menu-panel-tree"];

        classNames.push(Css.css`
          & & {
            margin-left: 16px;
          }
        `);

        if (props.items) {
          classNames.push(
            Css.css`
              list-style-type: none;
              padding: 8px;
              margin: 0;
            `
          );
        }

        if (props.borderBottom) {
          classNames.push(Css.css`border-bottom: solid 1px #E0E0E0`);
        }

        if (props.borderRadius) {
          classNames.push(Css.css`border-radius: ${UU5.Common.Tools.fillUnit(props.borderRadius)}`);
        }

        return classNames.join(" ");
      }
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    items: UU5.PropTypes.arrayOf(UU5.PropTypes.shape(itemPropTypes)),
    borderBottom: UU5.PropTypes.bool,
    borderRadius: UU5.PropTypes.oneOfType([UU5.PropTypes.bool, UU5.PropTypes.string]),
    elevation: UU5.PropTypes.oneOf(["0", "1", "2", "3", "4", "5", 0, 1, 2, 3, 4, 5])
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      items: undefined,
      borderBottom: false,
      borderRadius: undefined,
      elevation: undefined
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:reactLifeCycle
  //@@viewOff:reactLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:private
  _renderItems() {
    return this.props.items.map((itemProps, index) => (
      <TreeMenuItem {...itemProps} key={index} onClick={itemProps.onClick} />
    ));
  },

  _getMainAttrs() {
    let mainAttrs = this.getMainAttrs();

    if (this.props.elevation) {
      mainAttrs.className += ` ${ClassNames.elevation}${this.props.elevation}`;
    }

    return mainAttrs;
  },
  //@@viewOff:private

  //@@viewOn:render
  render() {
    if (this.props.items) {
      return <ul {...this._getMainAttrs()}>{this._renderItems()}</ul>;
    } else {
      return null;
    }
  }
  //@@viewOff:render
});

export default MenuPanelTree;
