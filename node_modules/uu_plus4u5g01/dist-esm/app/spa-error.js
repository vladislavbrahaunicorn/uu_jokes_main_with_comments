import * as UU5 from "uu5g04";
import "uu5g04-bricks";
import * as Plus4U5 from "uu_plus4u5g01";
import "uu_plus4u5g01-bricks";
import Button from "./button.js";

import "./spa-error.less";

export const SpaError = UU5.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin, UU5.Common.ContentMixin, UU5.Common.ColorSchemaMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: "Plus4U5.App.SpaError",
    classNames: {
      main: "plus4u5-app-spaerror uu5-noindex",
      error: "plus4u5-app-spaerror-error",
      bgTransparent: "plus4u5-app-spaerror-bg-style-transparent",
      bgFilled: "plus4u5-app-spaerror-bg-style-filled",
      errorIcon: "plus4u5-app-spaerror-error-icon",
      textError: "plus4u5-app-spaerror-text-error",
      buttonError: "plus4u5-app-spaerror-button-error",
      errorTextWrapper: "plus4u5-app-spaerror-error-remark-text-wrapper"
    },
    lsi: () => Plus4U5.Environment.Lsi.App.spaError
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    errorData: UU5.PropTypes.object,
    error: UU5.PropTypes.shape({
      stack: UU5.PropTypes.string,
      name: UU5.PropTypes.string,
      message: UU5.PropTypes.string
    }),
    languageSelectorProps: UU5.PropTypes.object,
    bgStyle: UU5.PropTypes.oneOf(["filled", "transparent"]),
    icon: UU5.PropTypes.string
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      errorData: undefined,
      error: undefined,
      bgStyle: "filled",
      icon: "mdi-close-network"
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelper

  _getMainPropsToPass() {
    let mainProps = this.getMainPropsToPass();
    if (this.props.bgStyle === "transparent") {
      mainProps.className += " " + this.getClassName("bgTransparent");
    } else {
      mainProps.className += " " + this.getClassName("bgFilled");
    }
    return mainProps;
  },

  _getColor() {
    let color;
    if (this.props.bgStyle === "filled" && this.props.colorSchema === "black") {
      color = "white";
    } else if (this.props.bgStyle === "filled" && this.props.colorSchema === "white") {
      color = "black";
    } else if (this.props.colorSchema === "black") {
      color = "black";
    } else {
      color = "white";
    }
    return color;
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render() {
    return (
      <UU5.Bricks.Div {...this._getMainPropsToPass()} content={null}>
        <Button id={this.getId() + "-login"} />
        <div className={this.getClassName("errorTextWrapper")}>
          <UU5.Bricks.Icon className={this.getClassName("errorIcon")} icon={this.props.icon} />
          <UU5.Bricks.Text colorSchema={this._getColor()} className={this.getClassName("textError")}>
            {this.getChildren() || this.getLsiComponent("textError")}
          </UU5.Bricks.Text>
          <UU5.Bricks.Button
            onClick={() => (location.href = UU5.Environment.getAppBasePath() || "/")}
            size="xl"
            bgStyle="outline"
            colorSchema={this._getColor()}
            className={this.getClassName("buttonError")}
          >
            {this.getLsiComponent("continue")}
          </UU5.Bricks.Button>
        </div>
        <Plus4U5.Bricks.Error
          id={this.getId() + "-error"}
          className={this.getClassName("error")}
          content={this.props.content || this.props.children}
          errorData={this.props.errorData}
          error={this.props.error}
        />
        <UU5.Bricks.LanguageSelector
          className="plus4u5-app-spaerror-earth-icon"
          bgStyle="filled"
          headerMode="label"
          bodyMode="label-code"
          displayedLanguages={["cs", "en"]}
          {...this.props.languageSelectorProps}
          colorSchema="custom"
        />
      </UU5.Bricks.Div>
    );
  }
  //@@viewOff:render
});

export default SpaError;
