//@@viewOn:imports
import * as UU5 from "uu5g04";

import "uu5g04-bricks";
import Cfg from "./config/config.js";
import Css from "./internal/css.js";

//@@viewOff:imports

export const Logo = UU5.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: Cfg.TAG + "Logo",
    classNames: {
      main: props => {
        let colorSchema = props.colorSchema || "blue";
        if (colorSchema === "default") colorSchema = "blue";
        let color = UU5.Environment.colorSchemaMap[colorSchema].color;
        color = color.replace(/-rich$/, "");
        let bgColorFrom = UU5.Environment.colors[color].c500;
        let bgColorTo = UU5.Environment.colors[color].c900;
        let textColor = UU5.Environment.colors[color].inverse;

        if (props.backgroundColor) {
          bgColorFrom = props.backgroundColor;
        }

        if (props.backgroundColorTo) {
          bgColorTo = props.backgroundColorTo;
        }

        if (props.textColor) {
          textColor = props.textColor;
        }

        return (
          Cfg.CSS +
          "logo" +
          " " +
          Css.css`
            display: inline-flex;
            flex-direction: column;
            position: relative;
            overflow: hidden;
            background-image: linear-gradient(to bottom right, ${bgColorFrom} 0%, ${bgColorTo} 100%);
            color: ${textColor};
            width: ${UU5.Common.Tools.fillUnit(props.width)};
            height: ${UU5.Common.Tools.fillUnit(props.height)};
            z-index: 1;
          `
        );
      },
      subTitle: Css.css`
        font-size: 14px;
        font-weight: 300;
        letter-spacing: 0.15px;
        margin-bottom: 6px;
      `,
      title: Css.css`
        font-size: 23px;
        font-weight: 700;
        letter-spacing: -0.07px;
        margin-bottom: 3px;
      `,
      generation: Css.css`
        font-size: 14px;
        font-weight: 700;
        letter-spacing: -0.05px;
        margin-bottom: 3px;
        flex-grow: 1;
      `,
      companyLogo: props => Css.css`
        width: ${UU5.Common.Tools.fillUnit(props.companyLogoWidth)};
        margin-left: ${props.companyLogoLeft > 0 ? UU5.Common.Tools.fillUnit(props.companyLogoLeft) : 0};
        margin-bottom: ${props.companyLogoBottom > 0 ? UU5.Common.Tools.fillUnit(props.companyLogoBottom) : 0};
      `,
      logo: props => Css.css`
        position: absolute;
        right: 0;
        bottom: 0;
        z-index: -1;
        width: ${UU5.Common.Tools.fillUnit(props.logoWidth)};
        margin-right: ${props.logoRight > 0 ? UU5.Common.Tools.fillUnit(props.logoRight) : 0};
        margin-bottom: ${props.logoBottom > 0 ? UU5.Common.Tools.fillUnit(props.logoBottom) : 0};
      `,
      backgroundImage: Css.css`
        width: 100%;
        object-fit: cover;
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
      `,
      contentWrapper: Css.css`
        padding: 16px;
        display: inline-flex;
        flex-direction: column;
        position: absolute;
        left: 0;
        right: 0;
        bottom: 0;
        top: 0;
      `
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    colorSchema: UU5.PropTypes.string,
    textColor: UU5.PropTypes.string,
    backgroundColor: UU5.PropTypes.string,
    backgroundColorTo: UU5.PropTypes.string,
    src: UU5.PropTypes.string,
    title: UU5.PropTypes.string,
    subTitle: UU5.PropTypes.string,
    generation: UU5.PropTypes.oneOfType([UU5.PropTypes.string, UU5.PropTypes.number]),
    companyLogo: UU5.PropTypes.string,
    companyLogoWidth: UU5.PropTypes.oneOfType([UU5.PropTypes.string, UU5.PropTypes.number]),
    companyLogoRight: UU5.PropTypes.oneOfType([UU5.PropTypes.string, UU5.PropTypes.number]),
    companyLogoBottom: UU5.PropTypes.oneOfType([UU5.PropTypes.string, UU5.PropTypes.number]),
    logo: UU5.PropTypes.string,
    logoWidth: UU5.PropTypes.oneOfType([UU5.PropTypes.string, UU5.PropTypes.number]),
    logoRight: UU5.PropTypes.oneOfType([UU5.PropTypes.string, UU5.PropTypes.number]),
    logoBottom: UU5.PropTypes.oneOfType([UU5.PropTypes.string, UU5.PropTypes.number]),
    width: UU5.PropTypes.oneOfType([UU5.PropTypes.string, UU5.PropTypes.number]),
    height: UU5.PropTypes.oneOfType([UU5.PropTypes.string, UU5.PropTypes.number])
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      colorSchema: undefined,
      textColor: undefined,
      backgroundColor: undefined,
      backgroundColorTo: undefined,
      src: undefined,
      title: undefined,
      subTitle: undefined,
      generation: undefined,
      companyLogo: undefined,
      companyLogoWidth: 64,
      companyLogoRight: 0,
      companyLogoBottom: 0,
      logo: undefined,
      logoWidth: 107,
      logoRight: 0,
      logoBottom: 0,
      width: 256,
      height: 144
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:reactLifeCycle
  //@@viewOff:reactLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overriding
  //@@viewOff:overriding

  //@@viewOn:private
  _getCompanyLogo() {
    if (this.props.companyLogo) {
      return (
        <UU5.Bricks.Image
          key="companyLogo"
          src={this.props.companyLogo}
          className={this.getClassName("companyLogo")}
          authenticate
        />
      );
    } else {
      return null;
    }
  },

  _getLogo() {
    if (this.props.logo) {
      return <UU5.Bricks.Image key="image" src={this.props.logo} className={this.getClassName("logo")} authenticate />;
    } else {
      return null;
    }
  },

  _getSubTitle() {
    if (this.props.subTitle) {
      return (
        <div key="subTitle" className={this.getClassName("subTitle")}>
          {this.props.subTitle}
        </div>
      );
    } else {
      return null;
    }
  },

  _getTitle() {
    if (this.props.title) {
      return (
        <div key="title" className={this.getClassName("title")}>
          {this.props.title}
        </div>
      );
    } else {
      return null;
    }
  },

  _getGeneration() {
    if (this.props.generation || typeof this.props.generation === "number") {
      return (
        <div key="generation" className={this.getClassName("generation")}>{`(g${UU5.Common.Tools.rjust(
          this.props.generation + "",
          2,
          "0"
        )})`}</div>
      );
    } else {
      return null;
    }
  },

  _getContent() {
    return (
      <div className={this.getClassName("contentWrapper")}>
        {this._getSubTitle()}
        {this._getTitle()}
        {this._getGeneration()}
        {this._getCompanyLogo()}
        {this._getLogo()}
      </div>
    );
  },
  //@@viewOff:private

  //@@viewOn:render
  render() {
    return (
      <div {...this.getMainAttrs()}>
        {this.props.src ? (
          <>
            <UU5.Bricks.Image src={this.props.src} className={this.getClassName("backgroundImage")} authenticate />
            {this._getContent()}
          </>
        ) : (
          this._getContent()
        )}
      </div>
    );
  }
  //@@viewOff:render
});

export default Logo;
