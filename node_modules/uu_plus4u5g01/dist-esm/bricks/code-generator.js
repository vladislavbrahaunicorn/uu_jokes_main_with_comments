import * as UU5 from "uu5g04";
import "uu5g04-bricks";

import "./code-generator.less";

export const CodeGenerator = UU5.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin, UU5.Common.ContentMixin, UU5.Common.ColorSchemaMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: "Plus4U5.Bricks.CodeGenerator",
    classNames: {
      main: "plus4u5-bricks-code-generator"
    },
    defaults: {
      content: "Generate code"
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    tagName: UU5.PropTypes.string,
    awid: UU5.PropTypes.string,
    hex: UU5.PropTypes.number,
    size: UU5.PropTypes.string,
    displayBlock: UU5.PropTypes.bool,
    bgStyle: UU5.PropTypes.string,
    pressed: UU5.PropTypes.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function() {
    return {
      tagName: null,
      awid: null,
      hex: 64,
      size: "m",
      displayBlock: false,
      pressed: false
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _copy() {
    const code = UU5.Common.Tools.generateUUID(this.props.hex);
    let result = code;

    if (this.props.tagName) {
      result = `<${this.props.tagName}`;
      this.props.awid && (result += ` awid='${this.props.awid}'`);
      result += ` code='${code}'`;
      result += `/>`;
    }
    UU5.Common.Tools.copyToClipboard(result);

    return this;
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function() {
    let content = this.getContent();
    !content && !this.props.children && (content = this.props.tagName || this.getDefault().content);

    return (
      <UU5.Bricks.Button
        {...this.getMainPropsToPass()}
        onClick={this._copy}
        content={content}
        colorSchema={this.props.colorSchema}
        size={this.props.size}
        displayBlock={this.props.displayBlock}
        bgStyle={this.props.bgStyle}
        pressed={this.props.pressed}
      >
        {this.props.children}
      </UU5.Bricks.Button>
    );
  }
  //@@viewOff:render
});

export default CodeGenerator;
