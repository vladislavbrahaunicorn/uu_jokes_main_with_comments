import * as UU5 from "uu5g04";
import "uu5g04-bricks";
import Calls from "./calls";

import "./iframe.less";

export const Iframe = UU5.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin, UU5.Common.LoadMixin, UU5.Common.IdentityMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: "Plus4U5.Bricks.Iframe",
    classNames: {
      main: "plus4u5-bricks-iframe"
    },
    calls: {
      onLoad: "getData"
    },
    lsi: () => Plus4U5.Environment.Lsi.Bricks.iframe
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    src: UU5.PropTypes.string,
    resize: UU5.PropTypes.bool,
    height: UU5.PropTypes.string,
    syncTimeout: UU5.PropTypes.number,
    inline: UU5.PropTypes.bool,
    iframeAttrs: UU5.PropTypes.object
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      src: null,
      resize: undefined, // same as UU5.Bricks.Iframe
      height: undefined, // same as UU5.Bricks.Iframe
      syncTimeout: undefined, // same as UU5.Bricks.Iframe
      inline: undefined, // same as UU5.Bricks.Iframe
      iframeAttrs: undefined // same as UU5.Bricks.Iframe
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  componentWillMount() {
    this.setCalls(Calls);
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  getOnLoadData_(props) {
    return {
      src: props.src
    };
  },
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render() {
    let child;
    switch (this.getLoadFeedback()) {
      case "loading":
        child = <UU5.Bricks.Loading {...this.getMainPropsToPass()} />;
        break;
      case "ready":
        child = (
          <UU5.Bricks.Iframe
            {...this.getMainAttrs()}
            src={this.getDtoOut()}
            resize={this.props.resize}
            height={this.props.height}
            syncTimeout={this.props.syncTimeout}
            inline={this.props.inline}
            iframeAttrs={this.props.iframeAttrs}
          />
        );
        break;
      default:
        child = <UU5.Bricks.Error {...this.getMainPropsToPass()}>{this.getLsiComponent("notFound")}</UU5.Bricks.Error>;
    }
    return child;
  }
  //@@viewOff:render
});

export default Iframe;
