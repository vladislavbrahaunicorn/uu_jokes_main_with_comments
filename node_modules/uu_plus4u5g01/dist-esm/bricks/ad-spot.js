//@@viewOn:imports
import UU5, { createVisualComponent } from "uu5g04";
import AdSpotView from "./internal/ad-spot-view";
//@@viewOff:imports

//@@viewOn:statics
const STATICS = {
  displayName: "Plus4U5.Bricks.AdSpot",
  nestingLevel: ["box", "inline"]
};
//@@viewOff:statics

export const AdSpot = createVisualComponent({
  ...STATICS,

  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin, UU5.Common.NestingLevelMixin],
  //@@viewOff:mixins

  //@@viewOn:propTypes
  propTypes: {
    baseUri: UU5.PropTypes.string,
    code: UU5.PropTypes.string.isRequired,
    ...AdSpotView.propTypes
  },
  //@@viewOff:propTypes

  //@@viewOn:defaultProps
  defaultProps: {
    baseUri: "https://uuapp.plus4u.net/uu-webkit-maing02/5bd939fe19944e6ab54f19fc84207632/",
    code: undefined
  },
  //@@viewOff:defaultProps

  //@@viewOn:reactLifeCycle
  //@@viewOff:reactLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:private
  _renderAd({ data: response }) {
    let data = response ? response.data : undefined;
    if (data && typeof data === "string") {
      try {
        data = JSON.parse(data);
      } catch (e) {
        // ignore error (continue with original data)
      }
    }

    let result = null;
    if (data) {
      let currentNestingLevel = UU5.Utils.NestingLevel.getNestingLevel(this.props, STATICS);
      let { src, ...restProps } = this.props;
      if (typeof data === "object") {
        result = (
          <UU5.Bricks.Lsi>
            {({ language }) => {
              let dataLsiItem = UU5.Common.Tools.getLsiItemByLanguage(
                data,
                undefined,
                UU5.Common.Tools.getLanguages(language)
              );
              return <AdSpotView {...restProps} data={dataLsiItem} nestingLevel={currentNestingLevel} />;
            }}
          </UU5.Bricks.Lsi>
        );
      } else if (Array.isArray(data)) {
        result = <AdSpotView {...restProps} data={data} nestingLevel={currentNestingLevel} />;
      }
    }
    return result;
  },
  //@@viewOff:private

  //@@viewOn:render
  render() {
    let { baseUri = "", code = "" } = this.props;
    let uri = (baseUri ? baseUri.replace(/\/+$/, "") + "/" : "") + "ad" + (code ? "-" + code.replace(/^\/+/, "") : "");

    return <UU5.Common.Loader uri={uri}>{this._renderAd}</UU5.Common.Loader>;
  }
  //@@viewOff:render
});
export default AdSpot;
