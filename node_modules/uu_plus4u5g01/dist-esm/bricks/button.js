import * as UU5 from "uu5g04";
import "uu5g04-bricks";
import * as Plus4U5 from "uu_plus4u5g01";

// import './button.less';

export const Button = UU5.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: "Plus4U5.Bricks.Button",
    classNames: {
      main: "plus4u5-bricks-button"
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    href: UU5.PropTypes.string,
    uri: UU5.PropTypes.string,
    target: UU5.PropTypes.oneOf(["_blank", "_parent", "_top", "_self"]),
    size: UU5.PropTypes.oneOf(["s", "m", "l", "xl"]),
    displayBlock: UU5.PropTypes.bool,
    pressed: UU5.PropTypes.bool,
    bgStyle: UU5.PropTypes.oneOf(["filled", "outline", "transparent", "underline", "link"]),
    smoothScroll: UU5.PropTypes.number,
    offset: UU5.PropTypes.number,
    onClick: UU5.PropTypes.func,
    borderRadius: UU5.PropTypes.string,
    elevation: UU5.PropTypes.oneOf(["-1", "0", "1", "2", "3", "4", "5", -1, 0, 1, 2, 3, 4, 5]),
    elevationHover: UU5.PropTypes.oneOf(["-1", "0", "1", "2", "3", "4", "5", -1, 0, 1, 2, 3, 4, 5]),
    baseline: UU5.PropTypes.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState() {
    return {
      authenticatedUrl: undefined
    };
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getAuthenticatedUrl(url, session) {
    let result = "";
    if (this._authenticatedUrl === url) result = this.state.authenticatedUrl;
    else if (this._authenticatingUrl !== url) {
      this._authenticatingUrl = url;
      let promise = (this._urlPromise = this._computeAuthenticatedUrl(url, session).then(
        authenticatedUrl => {
          delete this._authenticatingUrl;
          this._authenticatedUrl = url;
          if (this.isRendered() && promise === this._urlPromise) this.setState({ authenticatedUrl });
        },
        () => {
          delete this._authenticatingUrl;
        }
      ));
    }
    return result;
  },

  async _computeAuthenticatedUrl(url, session) {
    let token = await UU5.Common.Tools.getCallToken(url, session);
    let parsedUrl = UU5.Common.Url.parse(url);
    let result = parsedUrl.set({ parameters: { ...parsedUrl.parameters, access_token: token } }).toString();
    return result;
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render() {
    let { href } = this.props;
    if (href && !href.startsWith("#")) {
      let session = UU5.Environment.getSession();
      if (session && session.isAuthenticated() && UU5.Environment.isTrustedDomain(href)) {
        href = this._getAuthenticatedUrl(href, session);
      }
    }

    return (
      <UU5.Bricks.Button
        {...this.props}
        {...this.getMainPropsToPass()}
        href={href || (this.props.uri && Plus4U5.Common.Tools.getLegacyUrl(this.props.uri))}
      ></UU5.Bricks.Button>
    );
  }
  //@@viewOff:render
});

export default Button;
