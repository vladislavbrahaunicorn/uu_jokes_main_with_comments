import { Uri } from "uu_appg01_core";
import { Client } from "uu_appg01";
import * as UU5 from "uu5g04";

let Calls = {
  call: function(method, url, params, dtoIn) {
    //let call = () => {
    Client[method](url, dtoIn.data).then(
      function(response) {
        // add logged user identity information
        response = response || {};
        response.data = response.data || {};

        dtoIn.done(response.data);
      },
      function(response) {
        // add logged user identity information
        response = response || {};
        response.data = response.data || {};

        dtoIn.fail(response);
      }
    );
  },

  loadDiagram(dtoIn) {
    const tidAwid = dtoIn.data.tidAwid || dtoIn.tidAwid;
    delete dtoIn.data.tidAwid;
    let commandUri = Calls.getCommandUri("loadDiagram", tidAwid);
    Calls.call("post", commandUri.toString(), null, dtoIn);
  },

  lock(dtoIn) {
    const tidAwid = dtoIn.data.tidAwid || dtoIn.tidAwid;
    delete dtoIn.data.tidAwid;
    let commandUri = Calls.getCommandUri("lock", tidAwid);
    Calls.call("post", commandUri.toString(), null, dtoIn);
  },

  getCommandUri: function(useCase, tidAwid, params) {
    !tidAwid && UU5.Common.Tools.error(`tidAwid was not set for useCase ${useCase}.`, { useCase });
    useCase = useCase.match(/^\//) ? useCase : "/" + useCase;

    // TODO baseUri from some constant / config?
    let baseUri = `https://uuos9.plus4u.net/uu-uubmldrawg03-main/${tidAwid}/`;
    // let baseUri = `http://localhost:6221/uu-uubmldraw-main/${tidAwid}/`;

    let uriBuilder = Uri.UriBuilder.parse(baseUri).setUseCase(useCase);
    if (params && typeof params === "object") {
      for (let key in params) {
        uriBuilder.setParameter(key, params[key]);
      }
    }

    return uriBuilder.toUri();
  }
};

export default Calls;
