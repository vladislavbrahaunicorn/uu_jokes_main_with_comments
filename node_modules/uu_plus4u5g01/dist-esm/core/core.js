const Plus4U5 = window.Plus4U5 || {};

import * as Common from "./common/common.js";
export { Common };
Plus4U5.Common = Common;

import Environment from "./environment/environment.js";
export { Environment };
Plus4U5.Environment = Environment;

import Telemetry from "./telemetry/telemetry.js";
export { Telemetry };
Plus4U5.Telemetry = Telemetry;

// NOTE Workaround so that on-demand loaded UU5 modules can insert their own components
// into UU5 exports; i.e. if an application uses following:
//  import * as UU5 from "uu5g04";  // UU5 is a local variable containing new (separate) instance of exports
//  import "uu5g04-forms";
// then uu5g04-forms (UU5 module) wants to add "Forms" key into "root" of uu5g04 exports which
// isn't possible (exports are frozen by SystemJS), so instead uu5g04-forms will inject its components into
// pre-existing "Forms" key within uu5g04 exports

// NOTE Use submodules from global variable if they are already present while Plus4U5 is being loaded - this solves
// issue with uu_plus4u5filesg01 being loaded before uu_plus4u5g01 and gettings its global exports overwritten
// (uu_plus4u5filesg01 does not depend on uu_plus4u5g01 but it exports itself to Plus4U5.Files.* namespace).
let winPlus4U5 = window.Plus4U5 || {};

const App = (Plus4U5.App = winPlus4U5.App || {});
export { App };

const Bricks = (Plus4U5.Bricks = winPlus4U5.Bricks || {});
export { Bricks };

const UuBmlDraw = (Plus4U5.UuBmlDraw = winPlus4U5.UuBmlDraw || {});
export { UuBmlDraw };

const UuForum = (Plus4U5.UuForum = winPlus4U5.UuForum || {});
export { UuForum };

const Files = (Plus4U5.Files = winPlus4U5.Files || {});
export { Files };

window.Plus4U5 = Plus4U5;
export default Plus4U5;
