import * as UU5 from "uu5g04";
import "uu5g04-bricks";

import "./basic-info.less";
import Tools from "../core/tools.js";
import Table from "./abstract-table.js";

import Cfg from "../core/_config.js";

const BasicInfo = UU5.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.NestingLevelMixin, UU5.Common.SectionMixin, UU5.Common.EditableMixin],

  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: Cfg.tag("Tables.BasicInfo"),
    nestingLevelList: UU5.Environment.getNestingLevelList("bigBoxCollection", "box"),
    classNames: {
      main: `${Cfg.CSS} ${Cfg.css("tables-basic-info")}`,
      table: Cfg.css("table-cover-table")
    },
    defaults: {
      editableComponent: Cfg.tag("TablesEditable.BasicInfo")
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    data: UU5.PropTypes.arrayOf(UU5.PropTypes.arrayOf(UU5.PropTypes.string))
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      data: [["", ""]]
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  componentWillReceiveProps: function(nextProps) {
    this.setState({
      data: JSON.parse(JSON.stringify(nextProps.data))
    });
  },

  getInitialState() {
    return {
      data: JSON.parse(JSON.stringify(this.props.data))
    };
  },
  shouldComponentUpdate(nextProps, nextState) {
    if (this.state.editation) {
      return !nextState.editation;
    } else {
      return true;
    }
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  getData() {
    return Tools.deepArrayCopy(this.state.data);
  },
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  onBeforeForceEndEditation_() {
    return this._component && this._component.getFormValues();
  },
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getData(props) {
    let content = null;
    if (!props.data && props.children) {
      let children = Tools.assertType(props.children, Array) ? props.children.join("") : props.children;
      content = UU5.Common.Tools.parseFromUu5JSON(children);
    }
    return props.data || content || [];
  },

  _getChild() {
    if (this.state.editation) return Tools.getEditableComponent(this.getDefault("editableComponent"), this);

    const data = this.state.data;
    if (!data || (Tools.assertType(data, Array) && data.length === 0)) {
      return <UU5.Bricks.Text></UU5.Bricks.Text>;
    } else if (!Tools.assertType(data, Array)) {
      return <UU5.Bricks.Text></UU5.Bricks.Text>;
    } else {
      return this._getTable(data);
    }
  },

  _getTable(data) {
    return (
      <div>
        <Table className={this.getClassName("table")} data={data} colHeader />
      </div>
    );
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render() {
    return this.getNestingLevel() ? <UU5.Bricks.Div {...this.getMainPropsToPass()} content={this._getChild()} /> : null;
  }
  //@@viewOff:render
});

export default BasicInfo;
