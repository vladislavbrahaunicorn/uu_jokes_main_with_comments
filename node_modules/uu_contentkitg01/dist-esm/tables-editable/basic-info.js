import * as UU5 from "uu5g04";
import "uu5g04-bricks";

import Cfg from "../core/_config.js";
import Table from "./abstract-table-editable.js";
import Tools from "../core/tools.js";
import Lsi from "../config/lsi";

const BasicInfo = UU5.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.NestingLevelMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: Cfg.tag("TablesEditable.BricksInfo"),
    nestingLevelList: UU5.Environment.getNestingLevelList("bigBoxCollection", "box"),
    classNames: {
      main: `${Cfg.CSS} ${Cfg.css("bricks-info")}`
      // table: Cfg.CSS + "-business-process-list-table-editable",
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    component: UU5.PropTypes.object
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      component: null
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  getFormValues() {
    return this._getAllValues(this._form.getValues());
  },

  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getAllValues(form) {
    let values = Object.assign({}, (form && form.values) || form, { data: this._tableEditable.getFormValues() });
    values.children = null;
    const preProps = this.props.component.getEditablePropsValues(["data", "children"]);
    values = Tools.checkValues(preProps, values);
    return values;
  },

  _onSave(form) {
    const output = this._getAllValues(form);
    this.props.component.endEditation(output);
  },
  _onCancel() {
    this.props.component.endEditation();
  },

  _getChild() {
    const data = this.props.component.getData();

    return (
      <UU5.Bricks.Div {...this.getMainPropsToPass()}>
        <Table
          className={this.getClassName("table")}
          ref_={ref => (this._tableEditable = ref)}
          data={data}
          colHeader
          modifyRow
        />
        <UU5.Forms.Form onSave={this._onSave} onCancel={this._onCancel} ref_={ref => (this._form = ref)}>
          <UU5.Forms.Controls
            buttonSubmitProps={{ content: this.getLsiItem(Lsi.LSI_BUTTON_OK) }}
            buttonCancelProps={{ content: this.getLsiItem(Lsi.LSI_BUTTON_CANCEL) }}
          />
        </UU5.Forms.Form>
      </UU5.Bricks.Div>
    );
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render() {
    return this.getNestingLevel() ? this._getChild() : null;
  }
  //@@viewOff:render
});

export default BasicInfo;
