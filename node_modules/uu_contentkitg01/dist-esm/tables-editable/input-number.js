import * as UU5 from "uu5g04";
import "uu5g04-forms";
import Cfg from "../core/_config.js";

export const InputNumber = UU5.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.NestingLevelMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: Cfg.LIB + ".InputNumber",
    nestingLevelList: UU5.Environment.getNestingLevelList("bigBoxCollection", "inline"),
    classNames: {
      main: Cfg.CSS + "-input-number"
    },
    opt: {
      nestingLevelWrapper: true
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    value: UU5.PropTypes.number,
    onBlur: UU5.PropTypes.func
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      value: null
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _chechNumber(value) {
    let number;
    if (!value && value !== 0) {
      number = null;
    } else if (typeof value === "number") {
      number = value;
    } else if (value.match && value.match(/^\d+[.]?\d+$/)) {
      number = value;
    } else {
      if (value.match && value.match(",")) {
        number = value.replace(",", ".");
      } else {
        number = null;
      }
    }
    return number;
  },
  _getFocusView() {
    let value = this._chechNumber(this.props.value);

    return (
      <UU5.Forms.Number
        value={value}
        ref_={ref => (this._input = ref)}
        buttonHidden
        decimalSeparator={"."}
        inputAttrs={{
          spellCheck: "false",
          onBlur: this._onBlurHandler,
          autoComplete: "off"
        }}
      />
    );
  },

  _onBlurHandler(e) {
    let value = this._input.getValue();
    this.props.onBlur(value || value === 0 ? value : null);
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render() {
    const body = this.getNestingLevel() ? this._getFocusView() : null;
    return <UU5.Bricks.Div content={body} />;
  }
  //@@viewOff:render
});

export default InputNumber;
