import * as UU5 from "uu5g04";
import "uu5g04-bricks";

import Cfg from "../core/_config.js";

import Lsi from "../config/lsi.js";
import "./input-modal.less";

const InputModal = UU5.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.NestingLevelMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: Cfg.tag("InputModal"),
    nestingLevelList: UU5.Environment.getNestingLevelList("bigBoxCollection", "box"),
    classNames: {
      main: Cfg.css("input-modal"),
      buttonGroup: Cfg.css("input-modal-button-group")
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    onSave: UU5.PropTypes.func,
    onCancel: UU5.PropTypes.func,
    value: UU5.PropTypes.string,
    options: UU5.PropTypes.object
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      component: null,
      options: {}
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  componentDidMount() {
    const options = this.props.options;
    const cursorPosition = options.cursorPosition;
    this._richText &&
      (this._timeout = setTimeout(() => {
        this._richText.setCursorPosition(cursorPosition);
      }, 120));
  },
  componentDidUpdate() {
    const cursorPosition = this.props.options.cursorPosition;
    this._richText &&
      (this._timeout = setTimeout(() => {
        this._richText.setCursorPosition(cursorPosition);
      }, 120));
  },
  componentWillUnmount() {
    this._timeout && clearTimeout(this._timeout);
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _onSave() {
    this.props.onSave(this._richText.getValue(), this.props.options);
  },
  _onCancel() {
    this.props.onCancel();
  },

  _checkAndAddUu5string(value) {
    if (!value) return "";
    if (!value.search) return value;
    if (value.search(/^<uu5string(\/>| \/>)$/) === 0) return "";
    if (value.search(/^<uu5string(\/>| \/>)/) !== -1) return value;
    return "<uu5string />" + value;
  },

  _getChild() {
    const options = this.props.options;
    let buttons = options && options.editorButtons;
    let plugins = options && options.editorPlugins;

    return (
      <UU5.Bricks.Div {...this.getMainPropsToPass()}>
        {UU5.Common.Tools.findComponent("UU5.RichText.Editor", {
          ref_: ref => (this._richText = ref),
          value: this._checkAndAddUu5string(this.props.value),
          id: UU5.Common.Tools.generateUUID(),
          plugins: { ...plugins },
          buttons: buttons,
          forceRenderModal: true
        })}
        <UU5.Bricks.Div className={this.getClassName("buttonGroup")}>
          <UU5.Bricks.Button content={this.getLsiItem(Lsi.LSI_FORM_BUTTON_CANCEL)} onClick={this._onCancel} size="m" />
          <UU5.Bricks.Button
            content={this.getLsiItem(Lsi.LSI_FORM_BUTTON_OK)}
            onClick={this._onSave}
            colorSchema="info"
            size="m"
          />
        </UU5.Bricks.Div>
      </UU5.Bricks.Div>
    );
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render() {
    return this.getNestingLevel() ? this._getChild() : null;
  }
  //@@viewOff:render
});

export default InputModal;
