//@@viewOn:imports
import UU5 from "uu5g04";
import "uu5g04-bricks";
import "uu5imagingg01";
import { createVisualComponent } from "uu5g04-hooks";

import { useBinary } from "uu_plus4u5g01-hooks";

import Cfg from "../../core/_config.js";
import Css from "./css.js";
import Lsi from "../../config/lsi.js";
//@@viewOff:imports

//@@viewOn:statics
const STATICS = {
  displayName: Cfg.tag("Bricks.ImageTile"),
  classNames: {
    imageWrapper: () => Css.css`
      position: relative;
      border-bottom: 1px solid rgba(0, 0, 0, 0.12);
      min-height: 128px;
      height: 128px;
      display: flex;

      @media (max-width: 768px) {
        min-height: 168px;
        height: 168px;
      }
    `,
    image: () => Css.css`
      .uu5-imaging-image-img {
        max-height: 127px;
        margin: 0 auto;
        height: 100%;
        object-fit: scale-down;
        border: 8px solid transparent;

        @media (max-width: 768px) {
          max-height: 166px;
        }
      }
    `,
    icon: () => Css.css`
      position: absolute;
      right: 4px;
      bottom: 4px;
      z-index: 1;
    `,
    alt: () => Css.css`
      padding: 8px;
      margin: 0
    `
  }
};
//@@viewOff:statics

const ImageTile = createVisualComponent({
  ...STATICS,

  //@@viewOn:propTypes
  propTypes: {
    setAlt: UU5.PropTypes.func,
    id: UU5.PropTypes.string,
    src: UU5.PropTypes.string,
    thumb: UU5.PropTypes.string,
    shape: UU5.PropTypes.string,
    effect: UU5.PropTypes.string,
    alt: UU5.PropTypes.string
  },
  //@@viewOff:propTypes

  //@@viewOn:defaultProps
  defaultProps: {
    src: "",
    thumb: "",
    shape: undefined,
    effect: undefined,
    alt: ""
  },
  //@@viewOff:defaultProps

  render(props) {
    //@@viewOn:hooks
    const { getBinaryDataUri } = useBinary();
    //@@viewOff:hooks

    //@@viewOn:interface
    //@@viewOff:interface

    //@@viewOn:private
    //@@viewOff:private

    //@@viewOn:render
    return (
      <>
        <div className={STATICS.classNames.imageWrapper()} key="imageWrapper">
          {props.src && Cfg.urlRegex.test(props.src) && (
            <UU5.Bricks.Icon icon="mdi-web" className={STATICS.classNames.icon()} />
          )}
          <UU5.Imaging.Image
            className={STATICS.classNames.image()}
            src={props.src && (Cfg.urlRegex.test(props.src) ? props.src : getBinaryDataUri(props.src))}
            thumb={props.thumb && (Cfg.urlRegex.test(props.thumb) ? props.thumb : getBinaryDataUri(props.thumb))}
            alt={props.alt}
            lightbox={false}
            shape={props.shape}
            effect={props.effect}
            authenticate
          />
        </div>
        <UU5.Bricks.Lsi>
          {({ language }) => {
            return (
              <UU5.Forms.Text
                tooltip={UU5.Common.Tools.getLsiValueByLanguage(Lsi.help.altTooltip, language)}
                placeholder={Lsi.altPH}
                className={STATICS.classNames.alt()}
                key="alt"
                value={props.alt}
                onBlur={({ value }) => props.setAlt(props.id, value)}
              />
            );
          }}
        </UU5.Bricks.Lsi>
      </>
    );
    //@@viewOff:render
  }
});

export default ImageTile;
