//@@viewOn:imports
import UU5 from "uu5g04";
import "uu5g04-bricks";
import { createVisualComponent } from "uu5g04-hooks";

import Cfg from "../core/_config.js";
import ImagePanelBody from "./internal/image-panel-body.js";
//@@viewOff:imports

//@@viewOn:statics
const STATICS = {
  displayName: Cfg.tag("Images.ImagePanel"),
  nestingLevel: UU5.Environment.getNestingLevelList("bigBoxCollection", "box")
};

//@@viewOff:statics

function getLsi(value) {
  return typeof value === "string" || Array.isArray(value) ? value : <UU5.Bricks.Lsi lsi={value} />;
}

const ImagePanelView = createVisualComponent({
  ...STATICS,

  //@@viewOn:propTypes
  propTypes: {
    code: UU5.PropTypes.oneOfType([
      UU5.PropTypes.string,
      UU5.PropTypes.shape({
        xs: UU5.PropTypes.string.isRequired,
        s: UU5.PropTypes.string,
        m: UU5.PropTypes.string,
        l: UU5.PropTypes.string,
        xl: UU5.PropTypes.string
      })
    ]),
    imageSize: UU5.PropTypes.string,
    header: UU5.PropTypes.oneOfType([UU5.PropTypes.object, UU5.PropTypes.string]),
    headerLevel: UU5.PropTypes.oneOfType([UU5.PropTypes.string, UU5.PropTypes.number]),
    content: UU5.PropTypes.oneOfType([UU5.PropTypes.object, UU5.PropTypes.string, UU5.PropTypes.array]),
    buttonHref: UU5.PropTypes.string,
    buttonContent: UU5.PropTypes.oneOfType([UU5.PropTypes.string, UU5.PropTypes.object]),
    buttonSize: UU5.PropTypes.oneOf(["s", "m", "l", "xl"]),
    buttonColorSchema: UU5.PropTypes.string,
    buttonBorderRadius: UU5.PropTypes.string,
    buttonTarget: UU5.PropTypes.oneOf(["_blank", "_parent", "_top", "_self"]),
    imagePosition: UU5.PropTypes.oneOf(["left", "right"]),
    textAlignment: UU5.PropTypes.oneOf(["left", "right", "center"]),
    imageAlignment: UU5.PropTypes.oneOf([
      "top",
      "bottom",
      "left",
      "center",
      "right",
      "top-left",
      "top-right",
      "bottom-left",
      "bottom-right"
    ]),
    borderRadius: UU5.PropTypes.oneOfType([UU5.PropTypes.string, UU5.PropTypes.number]),
    bgStyle: UU5.PropTypes.oneOf(["filled", "outline", "transparent", "underline"]),
    elevation: UU5.PropTypes.oneOf(["-1", "0", "1", "2", "3", "4", "5", -1, 0, 1, 2, 3, 4, 5]),
    structure: UU5.PropTypes.string,
    noSpacing: UU5.PropTypes.bool,
    alt: UU5.PropTypes.string,
    colorSchema: UU5.PropTypes.string,
    marginTop: UU5.PropTypes.oneOfType([UU5.PropTypes.string, UU5.PropTypes.number, UU5.PropTypes.object]),
    marginBottom: UU5.PropTypes.oneOfType([UU5.PropTypes.string, UU5.PropTypes.number, UU5.PropTypes.object])
  },
  //@@viewOff:propTypes

  //@@viewOn:defaultProps
  defaultProps: {
    code: "",
    header: "",
    headerLevel: "1",
    content: "",
    buttonHref: null,
    buttonContent: null,
    buttonSize: "m",
    buttonColorSchema: undefined,
    buttonBorderRadius: "2px",
    buttonTarget: "_self",
    imageSize: "cover",
    imagePosition: "left",
    imageAlignment: "center",
    textAlignment: "center",
    borderRadius: "0",
    colorSchema: "default",
    bgStyle: "filled",
    elevation: 0,
    structure: "",
    alt: "",
    noSpacing: true,
    marginTop: undefined,
    marginBottom: undefined
  },
  //@@viewOff:defaultProps
  render(props) {
    //@@viewOn:hooks
    //@@viewOff:hooks

    //@@viewOn:interface
    //@@viewOff:interface

    //@@viewOn:private

    let { header, headerLevel, content } = props;

    let textColumnContent = (
      <>
        <UU5.Bricks.Header content={getLsi(header)} level={headerLevel} />
        <UU5.Bricks.Div content={getLsi(content)} />
      </>
    );
    //@@viewOff:private

    //@@viewOn:render
    const currentNestingLevel = UU5.Utils.NestingLevel.getNestingLevel(props, STATICS);
    return currentNestingLevel ? <ImagePanelBody {...props} textColumnContent={textColumnContent} /> : null;
    //@@viewOff:render
  }
});

export default ImagePanelView;
