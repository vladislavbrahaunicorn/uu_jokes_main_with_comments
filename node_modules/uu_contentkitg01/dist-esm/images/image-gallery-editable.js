//@@viewOn:imports
import UU5, { createVisualComponent } from "uu5g04";

import Cfg from "../core/_config.js";
import Lsi from "../config/lsi.js";

import ImageGalleryView from "./image-gallery-view.js";
import ThumbnailMode from "./internal/thumbnail-mode.js";
import ImageListEditable from "./internal/image-list-editable.js";
//@@viewOff:imports

//@@viewOn:statics
const STATICS = {
  displayName: Cfg.tag("Images.ImageGalleryEditable")
};

const componentPropsForm = [
  {
    name: Lsi.componentProperties,
    setup: [
      {
        name: "effect",
        type: "switchSelector",
        label: Lsi.effectImage,
        getProps: () => ({
          items: Cfg.EFFECT
        })
      },
      ThumbnailMode
    ]
  },
  {
    name: Lsi.advance,
    setup: [
      {
        name: "lightbox",
        type: "switchSelector",
        label: "Lightbox",
        getProps: () => ({
          items: [
            { value: "local", content: Lsi.local },
            { value: "global", content: Lsi.global },
            { value: "none", content: Lsi.noneLightbox }
          ],
          message: Lsi.help.lightboxGallery
        })
      }
    ]
  }
];

//@@viewOff:statics
const ImageGalleryEditable = createVisualComponent({
  ...STATICS,

  //@@viewOn:propTypes
  propTypes: {
    props: UU5.PropTypes.shape(ImageGalleryView.propTypes).isRequired,
    onClose: UU5.PropTypes.func.isRequired,
    saveEditation: UU5.PropTypes.func.isRequired,
    componentName: UU5.PropTypes.string.isRequired
  },
  //@@viewOff:propTypes

  //@@viewOn:defaultProps
  //@@viewOff:defaultProps

  //@@viewOn:reactLifeCycle
  //@@viewOff:reactLifeCycle

  //@@viewOn:interface
  getPropsToSave() {
    return this._editRef ? this._editRef.getPropsToSave() : undefined;
  },
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:private
  _ref(ref) {
    this._editRef = ref;
  },
  //@@viewOff:private

  render() {
    //@@viewOn:render
    return (
      <ImageListEditable
        ref={this._ref}
        props={this.props.props}
        onClose={this.props.onClose}
        saveEditation={this.props.saveEditation}
        componentName={this.props.componentName}
        header={Lsi.editation.imageGallery}
        componentPropsForm={componentPropsForm}
      />
    );
    //@@viewOff:render
  }
});

export default ImageGalleryEditable;
