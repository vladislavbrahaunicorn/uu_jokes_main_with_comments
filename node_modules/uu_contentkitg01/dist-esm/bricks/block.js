import UU5 from "uu5g04";
import "uu5g04-bricks";

import Cfg from "../core/_config.js";

import "./block.less";

export const Block = UU5.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [
    UU5.Common.BaseMixin,
    UU5.Common.ElementaryMixin,
    UU5.Common.NestingLevelMixin,
    UU5.Common.ScreenSizeMixin,
    UU5.Common.SectionMixin,
    UU5.Common.EditableMixin
  ],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: Cfg.tag("Bricks.Block"),
    nestingLevelList: UU5.Environment.getNestingLevelList("bigBoxCollection", "box"),
    classNames: {
      main: Cfg.css("bricks-block"),
      info: Cfg.css("bricks-block-info"),
      danger: Cfg.css("bricks-block-danger"),
      success: Cfg.css("bricks-block-success"),
      warning: Cfg.css("bricks-block-warning"),
      default: Cfg.css("bricks-block-default"),
      help: Cfg.css("bricks-block-help"),
      icon: Cfg.css("bricks-icon-table-cell"),
      iconContentContainer: Cfg.css("bricks-icon-content-table-cell"),
      iconContent: Cfg.css("bricks-icon-content"),
      content: Cfg.css("bricks-content")
    },
    editableComponent: Cfg.tag("BricksEditable.Block")
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    type: UU5.PropTypes.string,
    icon: UU5.PropTypes.string,
    iconContent: UU5.PropTypes.string,
    header: UU5.PropTypes.string,
    footer: UU5.PropTypes.string,
    content: UU5.PropTypes.oneOfType([
      // content array:[bodyItem, items, node, number, bool, string]
      UU5.PropTypes.array,
      // content bodyItem:{tag:'',props{}}
      UU5.PropTypes.shape({
        tag: UU5.PropTypes.oneOfType([UU5.PropTypes.string, UU5.PropTypes.func]),
        props: UU5.PropTypes.arrayOf(UU5.PropTypes.object)
      }),
      // content items:{tag:'',propsArray:[{},{},{},...]}
      UU5.PropTypes.shape({
        tag: UU5.PropTypes.oneOfType([UU5.PropTypes.string, UU5.PropTypes.func]),
        propsArray: UU5.PropTypes.arrayOf(UU5.PropTypes.object)
      }),
      // content node
      UU5.PropTypes.node,
      // number
      UU5.PropTypes.number,
      // bool
      UU5.PropTypes.bool
    ])
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps

  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getChild() {
    if (this.isXs()) {
      return this._getSmallBlock();
    } else {
      // prefer iconContent over icon
      if (this.props.iconContent) {
        return this._getBigBlockText(this.props.iconContent);
      }

      let icon;
      switch (this.props.type) {
        case "info":
          icon = this.props.icon || "mdi-information";
          break;
        case "success":
          icon = this.props.icon || "mdi-checkbox-marked-circle";
          break;
        case "warning":
          icon = this.props.icon || "mdi-alert";
          break;
        case "danger":
          icon = this.props.icon || "mdi-alert-circle";
          break;
        case "help":
          icon = this.props.icon || "mdi-help-circle";
          break;
        case "default":
          icon = this.props.icon || "mdi-bowling";
          break;
      }
      return this._getBigBlockIcon(icon);
    }
  },

  _getSmallBlock() {
    return (
      <UU5.Bricks.Div>
        {this.getHeader() ? this.getHeaderChild() : null}
        <UU5.Bricks.Div {...this.getMainPropsToPass()} content={null} header={null} footer={null}>
          <UU5.Bricks.Div className={this.getClassName(this.props.type)}>
            <UU5.Bricks.Div
              className={this.getClassName("content")}
              content={this.props.content || this.props.children}
            />
          </UU5.Bricks.Div>
        </UU5.Bricks.Div>
        {this.getFooter() ? this.getFooterChild() : null}
      </UU5.Bricks.Div>
    );
  },

  _getBigBlockIcon(icon) {
    return (
      <UU5.Bricks.Div>
        {this.getHeader() ? this.getHeaderChild() : null}
        <UU5.Bricks.Div {...this.getMainPropsToPass()} content={null} header={null} footer={null}>
          <UU5.Bricks.Div className={this.getClassName(this.props.type)}>
            <UU5.Bricks.Span className={this.getClassName("icon")}>
              <UU5.Bricks.Icon icon={icon} />
            </UU5.Bricks.Span>
            <UU5.Bricks.Div
              className={this.getClassName("content")}
              content={this.props.content || this.props.children}
            />
          </UU5.Bricks.Div>
        </UU5.Bricks.Div>
        {this.getFooter() ? this.getFooterChild() : null}
      </UU5.Bricks.Div>
    );
  },

  _getBigBlockText(text) {
    return (
      <UU5.Bricks.Div>
        {this.getHeader() ? this.getHeaderChild() : null}
        <UU5.Bricks.Div {...this.getMainPropsToPass()} content={null} header={null} footer={null}>
          <UU5.Bricks.Div className={this.getClassName(this.props.type)}>
            <UU5.Bricks.Span className={this.getClassName("iconContentContainer")}>
              <UU5.Bricks.Div className={this.getClassName("iconContent")}>
                <UU5.Bricks.Div content={text} />
              </UU5.Bricks.Div>
            </UU5.Bricks.Span>
            <UU5.Bricks.Div
              className={this.getClassName("content")}
              content={this.props.content || this.props.children}
            />
          </UU5.Bricks.Div>
        </UU5.Bricks.Div>
        {this.getFooter() ? this.getFooterChild() : null}
      </UU5.Bricks.Div>
    );
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function() {
    return this.getNestingLevel() ? this._getChild() : null;
  }
  //@@viewOff:render
});

export default Block;
