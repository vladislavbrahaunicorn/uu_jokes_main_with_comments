//@@viewOn:imports
import UU5 from "uu5g04";
import "uu5g04-bricks";
import { createVisualComponent } from "uu5g04-hooks";

import Cfg from "../../core/_config.js";
import Lsi from "../../config/lsi.js";
import Css from "./css.js";
//@@viewOff:imports

//@@viewOn:statics
const STATICS = {
  displayName: Cfg.tag("Bricks.ScaleInput"),
  classNames: {
    selectorWidth: () => Css.css` & .uu5-bricks-switch-selector { width: 100%; }`,
    marginRow: () => Css.css`margin: 0px -8px; & .uu5-forms-input { margin-bottom: 0; }`
  }
};
//@@viewOff:statics

const ScaleInput = createVisualComponent({
  ...STATICS,

  //@@viewOn:propTypes
  propTypes: {
    componentProps: UU5.PropTypes.object,
    onChangeProps: UU5.PropTypes.func
  },
  //@@viewOff:propTypes

  //@@viewOn:defaultProps
  defaultProps: {
    componentProps: undefined,
    onChangeProps: undefined
  },
  //@@viewOff:defaultProps

  render(props) {
    //@@viewOn:hooks
    //@@viewOff:hooks

    //@@viewOn:interface
    //@@viewOff:interface

    //@@viewOn:private
    //@@viewOff:private

    //@@viewOn:render
    return (
      <>
        <UU5.Bricks.Row className={STATICS.classNames.marginRow()}>
          <UU5.Bricks.Column colWidth="xs-12 s-6">
            <UU5.Forms.Slider
              label={Lsi.scaleWidth}
              disabled={!props.componentProps.scaleOnHover}
              step={0.01}
              min={0.9}
              max={1.1}
              value={props.componentProps.scaleWidth}
              onChange={opt => props.onChangeProps({ scaleWidth: +opt.value })}
            />
          </UU5.Bricks.Column>
          <UU5.Bricks.Column colWidth="xs-12 s-6">
            <UU5.Forms.Slider
              label={Lsi.scaleHeight}
              disabled={!props.componentProps.scaleOnHover}
              step={0.01}
              min={0.9}
              max={1.1}
              value={props.componentProps.scaleHeight}
              onChange={opt => props.onChangeProps({ scaleHeight: +opt.value })}
            />
          </UU5.Bricks.Column>
        </UU5.Bricks.Row>
      </>
    );
    //@@viewOff:render
  }
});

export default ScaleInput;
