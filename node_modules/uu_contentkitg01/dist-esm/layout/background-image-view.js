//@@viewOn:imports
import UU5 from "uu5g04";
import { createVisualComponent, useState } from "uu5g04-hooks";
import { useBinary } from "uu_plus4u5g01-hooks";

import Cfg from "../core/_config.js";
import Css from "./internal/css.js";
import ComponentHelper from "./internal/component-helper.js";
//@@viewOff:imports

//@@viewOn:statics
const STATICS = {
  displayName: Cfg.tag("Layout.BackgroundImageView")
};
//@@viewOff:statics

function getCode(code) {
  code && code.match(UU5.Common.REGEXP.uu5data) && (code = UU5.Common.Tools.parseFromUu5Data(code));
  return code;
}

function getContentStylesClassName(props) {
  return Css.css`
      width: 100%;
      ${ComponentHelper.getPaddingStyles(props.contentPadding)}
      ${ComponentHelper.getMaxWidth(props.maxWidth)}
    `;
}

function getClassName(props, src) {
  let styles = "";
  props.parallax && (styles += ` background-attachment: fixed;`);
  props.imageSize && (styles += ` background-size: ${props.imageSize};`);
  props.imageAlignment && (styles += ` background-position: ${props.imageAlignment};`);
  props.imageRepeat && (styles += ` background-repeat: ${props.imageRepeat};`);
  (props.borderRadius || props.borderRadius === 0) &&
    (styles += ` border-radius: ${UU5.Common.Tools.fillUnit(props.borderRadius)};`);

  if (src) {
    styles += ` background-image: url(${src});`;
    props.gradient && (styles += ` background-image: url(${src}), ${props.gradient};`);
  } else {
    props.gradient && (styles += ` background-image: ${props.gradient};`);
  }

  let filter = ComponentHelper.getFilter(props);
  filter &&
    (styles += `filter: ${filter};
      -webkit-filter: ${filter};
      -moz-filter: ${filter};
      -o-filter: ${filter};
      -ms-filter: ${filter};`);

  return Css.css`
    position: relative;
    z-index: 0;

    &::before {
      position: absolute;
      content: "";
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      z-index: -1;

      ${styles}
    }
  `;
}

const BackgroundImageView = createVisualComponent({
  ...STATICS,

  //@@viewOn:propTypes
  propTypes: {
    code: UU5.PropTypes.string,
    src: UU5.PropTypes.string,
    imageAlignment: UU5.PropTypes.oneOf([
      "top",
      "bottom",
      "left",
      "center",
      "right",
      "left top",
      "right top",
      "left bottom",
      "right bottom"
    ]),
    imageSize: UU5.PropTypes.string,
    imageRepeat: UU5.PropTypes.string,
    gradient: UU5.PropTypes.string,
    grayscale: UU5.PropTypes.oneOfType([UU5.PropTypes.string, UU5.PropTypes.number]),
    blur: UU5.PropTypes.oneOfType([UU5.PropTypes.string, UU5.PropTypes.number]),
    brightness: UU5.PropTypes.oneOfType([UU5.PropTypes.string, UU5.PropTypes.number]),
    contrast: UU5.PropTypes.oneOfType([UU5.PropTypes.string, UU5.PropTypes.number]),
    invert: UU5.PropTypes.oneOfType([UU5.PropTypes.string, UU5.PropTypes.number]),
    opacity: UU5.PropTypes.oneOfType([UU5.PropTypes.string, UU5.PropTypes.number]),
    parallax: UU5.PropTypes.bool, // only basic implementation for scroll parallax
    borderRadius: UU5.PropTypes.oneOfType([UU5.PropTypes.string, UU5.PropTypes.number]),
    contentPadding: UU5.PropTypes.string,
    maxWidth: UU5.PropTypes.string,
    content: UU5.PropTypes.oneOfType([UU5.PropTypes.object, UU5.PropTypes.array, UU5.PropTypes.string])
  },
  //@@viewOff:propTypes

  //@@viewOn:defaultProps
  defaultProps: {
    code: null,
    src: null,
    imageAlignment: "center",
    imageSize: "cover",
    imageRepeat: "no-repeat",
    gradient: undefined,
    grayscale: 0,
    blur: 0,
    brightness: 1,
    contrast: 1,
    invert: 0,
    opacity: 1,
    parallax: false,
    borderRadius: "0",

    // FIXME we have to read this from context
    contentPadding: "<uu5data/>websiteInfo_padding",
    maxWidth: "<uu5data/>websiteInfo_maxWidth"
  },
  //@@viewOff:defaultProps

  render(props) {
    //@@viewOn:hooks
    const { getBinaryDataUri } = useBinary();
    const [token, setToken] = useState({ token: undefined, tokenSet: false });
    //@@viewOff:hooks

    //@@viewOn:interface
    //@@viewOff:interface

    //@@viewOn:private
    let src;
    if (props.src) {
      src = props.src;
    } else if (props.code) {
      if (token.tokenSet) {
        src = getBinaryDataUri(getCode(props.code)) + (token.token ? "&access_token=" + token.token : "");
      } else {
        UU5.Common.Tools.getCallToken(
          getBinaryDataUri(getCode(props.code)),
          UU5.Environment.getSession()).then(result => setToken({ token: result, tokenSet: true })
        );
      }
    }

    let commonProps = UU5.Common.VisualComponent.getAttrs(props);
    commonProps.className += " " + getClassName(props, src);

    let child = null;
    if (typeof props.children === "function") {
      child = props.children(commonProps.className + " " + getContentStylesClassName(props));
    } else {
      child = (
        <div {...commonProps}>
          <div className={getContentStylesClassName(props)}>{props.children}</div>
        </div>
      );
    }
    //@@viewOff:private

    //@@viewOn:render
    return child;
    //@@viewOff:render
  }
});

export default BackgroundImageView;
