//@@viewOn:imports
import UU5, { createHoc, createVisualComponent } from "uu5g04";

import Cfg from "../core/_config.js";
import Lsi from "../config/lsi.js";

import FileLinkView from "./file-block-link-view.js";
import FileManager from "../editable/file-manager.js";
import AspectRatioInput from "./internal/aspect-ratio-input.js";
import ContentDispositionInput from "./internal/content-disposition-input.js";
import ElevationInput from "../editable/elevation-input";
import BorderRadiusInput from "../editable/border-radius-input";
import Preview from "./internal/preview";
//@@viewOff:imports

//@@viewOn:statics
const STATICS = {
  displayName: Cfg.tag("Links.FileBlockLinkEditable")
};

const HocBorderRadius = createHoc({
  getProps(props) {
    return {
      ...props,
      label: Lsi.previousIcon,
      items: [
        { value: "0", content: Lsi.none },
        { value: "2px" },
        { value: "4px" },
        { value: "8px" },
        { value: "16px" }
      ]
    };
  },
  component: BorderRadiusInput
});

const componentPropsForm = [
  {
    name: Lsi.setFile,
    setup: [
      {
        name: "content",
        type: "text",
        label: Lsi.text
      },
      FileManager
    ]
  },
  {
    name: Lsi.display,
    setup: [
      {
        name: "colorSchema",
        type: "colorSchemaPicker",
        label: Lsi.color,
        getProps: () => ({ inputColWidth: "xs-12 s-5" })
      },
      AspectRatioInput,
      Cfg.bgStyle,
      ElevationInput,
      HocBorderRadius
    ]
  },
  {
    name: Lsi.previewImage,
    setup: [Preview]
  },
  {
    name: Lsi.advance,
    setup: [
      ContentDispositionInput,
      {
        name: "verticalAlign",
        type: "switchSelector",
        label: Lsi.verticalAlign,
        getProps: () => ({
          items: [
            { value: "top", content: Lsi.top },
            { value: "middle", content: Lsi.center },
            { value: "bottom", content: Lsi.bottom }
          ],
          message: Lsi.help.verticalAlign
        })
      },
      [
        {
          name: "showLink",
          type: "bool",
          label: Lsi.showLink
        },
        {
          name: "showCode",
          type: "bool",
          label: Lsi.showCode
        }
      ],
      {
        name: "showDate",
        type: "bool",
        label: Lsi.showDate
      }
    ]
  }
];

//@@viewOff:statics
const FileBlockLinkEditable = createVisualComponent({
  ...STATICS,

  //@@viewOn:propTypes
  propTypes: {
    props: UU5.PropTypes.shape(FileLinkView.propTypes).isRequired,
    onClose: UU5.PropTypes.func.isRequired,
    componentName: UU5.PropTypes.string.isRequired
  },
  //@@viewOff:propTypes

  //@@viewOn:defaultProps
  //@@viewOff:defaultProps

  //@@viewOn:reactLifeCycle
  //@@viewOff:reactLifeCycle

  //@@viewOn:interface
  getPropsToSave() {
    return this._modalRef ? this._modalRef.getPropsToSave() : undefined;
  },
  //@@viewOff:interface

  //@@viewOn:private
  _ref(modal) {
    this._modalRef = modal;
  },
  //@@viewOff:private

  render() {
    //@@viewOn:render
    return (
      <UU5.BricksEditable.Modal
        shown
        header={Lsi.editation.fileBlockLink}
        onClose={this.props.onClose}
        componentProps={this.props.props}
        componentName={this.props.componentName}
        menuWidth="250px"
        componentPropsForm={componentPropsForm}
        ref_={this._ref}
      />
    );
    //@@viewOff:render
  }
});

export default FileBlockLinkEditable;
