//@@viewOn:imports
import UU5, { createVisualComponent } from "uu5g04";

import Cfg from "../core/_config.js";
import Lsi from "../config/lsi.js";

import FileLinkView from "./file-link-view.js";
import FileManager from "../editable/file-manager.js";
import LinkTypeInput from "./internal/link-type-input";
import ContentDispositionInput from "./internal/content-disposition-input.js";
//@@viewOff:imports

//@@viewOn:statics
const STATICS = {
  displayName: Cfg.tag("Links.FileLinkEditable")
};

const componentPropsForm = [
  {
    name: Lsi.setFile,
    setup: [
      {
        name: "content",
        type: "text",
        label: Lsi.text
      },
      FileManager
    ]
  },
  {
    name: Lsi.display,
    setup: [LinkTypeInput]
  },
  {
    name: Lsi.advance,
    setup: [ContentDispositionInput]
  }
];

//@@viewOff:statics
const FileLinkEditable = createVisualComponent({
  ...STATICS,

  //@@viewOn:propTypes
  propTypes: {
    props: UU5.PropTypes.shape(FileLinkView.propTypes).isRequired,
    onClose: UU5.PropTypes.func.isRequired,
    componentName: UU5.PropTypes.string.isRequired
  },
  //@@viewOff:propTypes

  //@@viewOn:defaultProps
  //@@viewOff:defaultProps

  getPropsToSave() {
    return this._modalRef ? this._modalRef.getPropsToSave() : undefined;
  },

  _ref(modal) {
    this._modalRef = modal;
  },

  render() {
    //@@viewOn:hooks
    //@@viewOff:hooks

    //@@viewOn:interface
    //@@viewOff:interface

    //@@viewOn:private
    //@@viewOff:private

    //@@viewOn:render
    return (
      <UU5.BricksEditable.Modal
        shown
        header={Lsi.editation.fileLink}
        onClose={this.props.onClose}
        componentProps={this.props.props}
        componentName={this.props.componentName}
        menuWidth="250px"
        componentPropsForm={componentPropsForm}
        ref_={this._ref}
      />
    );
    //@@viewOff:render
  }
});

export default FileLinkEditable;
