//@@viewOn:imports
import UU5, { createComponent } from "uu5g04";

import Cfg from "../core/_config.js";

import InfoCarouselItem from "./info-carousel-item.js";
import InfoCarouselView from "./info-carousel-view.js";

import LazyLibraries from "../core/lazy-libraries";
const InfoCarouselEditable = UU5.Common.Component.lazy(async () => {
  if (typeof SystemJS !== undefined) {
    await SystemJS.import("uu5g04-forms");
    await SystemJS.import("uu5g04-bricks-editable");

    /* eslint-disable no-undef */
    LazyLibraries["uu_plus4u5filesg01"] = await SystemJS.import("uu_plus4u5filesg01");
    /* eslint-enable no-undef */
  }
  return import("./info-carousel-editable.js")
});
//@@viewOff:imports

//@@viewOn:statics
const editMode = {
  name: { en: "Info carousel", cs: "Informační carousel" },
  backgroundColor: "rgba(0,0,0,.2)",
  color: "rgba(0,0,0,.87)",
  highlightColor: "#CCCCCC"
};

const STATICS = {
  displayName: Cfg.tag("Grids.InfoCarousel"),
  editMode
};
//@@viewOff:statics
const { id, mainAttrs, noIndex, ...editableProps } = InfoCarouselView.defaultProps;
const { className, style, ...defaultProps } = editableProps;

const InfoCarousel = createComponent({
  ...STATICS,

  statics: {
    editMode
  },

  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.EditableMixin],
  //@@viewOff:mixins

  //@@viewOn:propTypes
  propTypes: InfoCarouselView.propTypes,
  //@@viewOff:propTypes

  //@@viewOn:defaultProps
  defaultProps: defaultProps,
  //@@viewOff:defaultProps

  //@@viewOn:reactLifeCycle
  //@@viewOff:reactLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  onBeforeForceEndEditation_() {
    return this._editRef ? this._editRef.getPropsToSave() : undefined;
  },
  //@@viewOff:overridingMethods

  //@@viewOn:private
  _ref(ref) {
    this._editRef = ref;
  },
  //@@viewOff:private

  //@@viewOn:render
  render() {
    return (
      <>
        {this.isInlineEdited() && (
          <UU5.Common.Suspense fallback={this.getEditingLoading()}>
            <InfoCarouselEditable
              props={this.getEditablePropsValues(Object.keys(this.props))}
              onClose={this.endEditation}
              saveEditation={this.saveEditation}
              componentName={STATICS.displayName}
              ref={this._ref}
            />
          </UU5.Common.Suspense>
        )}
        <InfoCarouselView {...this.props} />
      </>
    );
  }
  //@@viewOff:render
});

InfoCarousel.Item = InfoCarouselItem;
export default InfoCarousel;
