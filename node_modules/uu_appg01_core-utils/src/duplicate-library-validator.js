"use strict";

const path = require("path");
const BaseError = require("./base-error.js");

class DuplicateLibraryValidator {
  /**
   * Verify that duplicate libraries are not used.
   * @param mdl
   */
  static ensureSingleVersion(mdl) {
    if (mdl !== null && typeof mdl === "object" && mdl.id) {
      mdl = mdl.id;
    } else if (typeof mdl !== "string") {
      throw new BaseError("Module needs to be a String path or a module Object.");
    }

    let id = mdl
      .trim()
      .split(path.sep)
      .slice(-2)
      .join(path.sep);

    let keys = Object.keys(require.cache);
    let results = [];
    keys.forEach(k => {
      if (k.endsWith(id)) {
        results.push(k);
      }
    });

    if (results.length > 1) {
      let segments = [
        `Watched library --> ${id.substring(0, id.indexOf(path.sep))} <-- has been required in multiple versions.`
      ];
      results.forEach(s => {
        segments.push(s);
      });
      throw new BaseError(segments.join("\n"));
    }
  }
}

module.exports = DuplicateLibraryValidator;
