"use strict";

class Base64 {

  static encode(value, encoding = "utf8") {
    return Buffer.from(value, encoding).toString('base64');
  }

  static decode(value, encoding = "utf8") {
    let rawData = Buffer.from(value, 'base64');
    if (encoding === "binary") {
      return rawData;
    } else {
      return rawData.toString(encoding);
    }
  }

  static urlSafeEncode(value, encoding = "utf8", noPadding = true) {
    if (typeof encoding === "boolean") {
      noPadding = encoding;
      encoding = "utf8";
    }
    let base64 = this.encode(value, encoding);
    base64 = base64.replace(/\+/g, '-').replace(/\//g, '_');
    if (noPadding) {
      base64 = base64.replace(/=/g, '');
    }
    return base64;
  }

  static urlSafeDecode(value, encoding = "utf8") {
    let base64 = value.replace(/-/g, '+').replace(/_/g, '/');
    return this.decode(base64, encoding);
  }

}

module.exports = Base64;
