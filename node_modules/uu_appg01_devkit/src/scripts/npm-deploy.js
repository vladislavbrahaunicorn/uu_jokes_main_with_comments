const path = require("path");
const shell = require("shelljs");

const paths = require("../config/paths.js");
const Package = require("uu_appg01_devkit-common/src/tools/package.js");

const DEFAULT_NPM_REGISTRY = "https://repo.plus4u.net/repository/uu_appg01_serverkit-javascript-dev/";

module.exports = class NpmPublish {
  constructor(config) {
    this.config = config;
  }
  async process() {
    let { registry } = this.config.getAll();
    let { name, version, publishConfig = {} } = Package.getSingletonSync("package.json").get();

    console.log("Publishing NPM package");
    let npmPackage = path.resolve(paths.buildDir, `${name}-${version}.tgz`);
    let npmRegistry = registry || process.env["NPM_REGISTRY"] || publishConfig.registry || DEFAULT_NPM_REGISTRY;
    try {
      shell.exec(`npm publish ${npmPackage} --registry ${npmRegistry} ${this.config.toCommandLineArgs().join(" ")}`); // TODO escaping
    } catch (e) {
      const chalk = require("chalk");
      console.error(`
${chalk.red("Publishing failed.")}
1. Make sure that you're authorized to publish to ${npmRegistry}.
2. You can specify repository to publish to in any of these ways:
  a) Add '"publishConfig": { "registry": "https://your-repo/" }' to package.json
  b) Use 'npm run deploy -- --registry=https://your-repo/'
  c) Set environment variable 'NPM_REGISTRY=https://your-repo/'
3. To skip publishing to a NPM repository:
  a) Use 'npm run deploy -- --no-npm-publish'
  b) Add '"private": true' to package.json. The project must be built again before publishing. Also note that the built package (.tgz file) won't be publishable to any NPM repository.
`);
      process.exit(1);
    }
    shell.exec(`npm show ${name}@${version}`);
  }
};
