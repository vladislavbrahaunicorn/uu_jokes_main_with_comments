const CmdHelper = require("uu_appg01_devkit-common/src/scripts/misc/cmd-helper.js");
const AppClient = require("uu_appg01_devkit-common/src/scripts/misc/app-client.js");
const endOfLine = require('os').EOL;

const C3_SWAP_URI = "uu-c3/AppDeployment/swap/exec";
const C3_SWAP_RESULT_URI = "uu-c3/AppDeployment/swap/execAsyncStatus";
const HEADERS = {
  "Accept": "application/json",
  "Content-type": "application/json"
};

class uuCloudSwapTask {

  constructor(cloudConfig) {
    this.config = cloudConfig.uuSwapConfig();
    this.appClient = new AppClient(this.config.oidcToken);
  }

  async process() {
    let taskUri = await this._runC3Swap();
    if (taskUri) {
      await this._waitForResult(taskUri);
      console.log("uuApp deployment slots successfully swapped.");
    }
  }

  async _runC3Swap() {
    console.log(endOfLine + "uuApp deployment slots are going to swapped: " + this.config.appDeploymentUri);

    let result = await this.appClient.exchange(
      CmdHelper.buildCmd2Url(this.appClient.c3BaseUri + '/' + C3_SWAP_URI, this.config.appDeploymentUri),
      "post",
      null,
      HEADERS
    );

    return JSON.parse(result.body).taskUri;
  }

  async _waitForResult(taskUri) {
    console.log("> Waiting for deployment slots swap...");

    let params = {
      taskUri: taskUri
    };

    let swapCheck = () => this.appClient.exchange(
      CmdHelper.buildCmd2Url(this.appClient.c3BaseUri + '/' + C3_SWAP_RESULT_URI, this.config.appDeploymentUri),
      "post",
      JSON.stringify(params),
      HEADERS
    );

    await CmdHelper.waitForC3Result(swapCheck);
  }
}

module.exports = uuCloudSwapTask;
