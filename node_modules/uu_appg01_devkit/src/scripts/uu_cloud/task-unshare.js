const CmdHelper = require("uu_appg01_devkit-common/src/scripts/misc/cmd-helper.js");
const AppClient = require("uu_appg01_devkit-common/src/scripts/misc/app-client.js");
const endOfLine = require('os').EOL;

const HEADERS = {
  "Accept": "application/json",
  "Content-type": "application/json"
};

const C3_UNSHARE_URI = "uu-c3/AppDeployment/unshare/exec";
const C3_UNSHARE_RESULT_URI = "uu-c3/AppDeployment/unshare/execAsyncStatus";

class uuCloudUnshareTask {

  constructor(cloudConfig) {
    this.cloudConfig = cloudConfig;
    this.config = null;
    this.appClient = null;
  }

  async process() {
    this.config = await this.cloudConfig.uuShareConfig();
    this.appClient = new AppClient(this.config.oidcToken);

    let taskUri = await this._runC3Unshare();
    await this._waitForResult(taskUri);

    console.log("App successfully unshared.");
  }

  async _runC3Unshare() {
    console.log(endOfLine + "uuApp is being unshared from: " + this.config.sharedAwids);

    let params = {
      territories: this.config.sharedUris
    };

    let result = await this.appClient.exchange(
      CmdHelper.buildCmd2Url(this.appClient.c3BaseUri + '/' + C3_UNSHARE_URI, this.config.appDeploymentUri),
      "post",
      JSON.stringify(params),
      HEADERS
    );

    return JSON.parse(result.body).taskUri;
  }

  async _waitForResult(taskUri) {
    console.log("> Waiting for app unshare...");

    let params = {
      taskUri: taskUri
    };

    let deployCheck = () => this.appClient.exchange(
      CmdHelper.buildCmd2Url(this.appClient.c3BaseUri + '/' + C3_UNSHARE_RESULT_URI, this.config.appDeploymentUri),
      "post",
      JSON.stringify(params),
      HEADERS
    );

    await CmdHelper.waitForC3Result(deployCheck);
  }
}

module.exports = uuCloudUnshareTask;
