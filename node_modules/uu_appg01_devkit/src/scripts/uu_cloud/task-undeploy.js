const CmdHelper = require("uu_appg01_devkit-common/src/scripts/misc/cmd-helper.js");
const AppClient = require("uu_appg01_devkit-common/src/scripts/misc/app-client.js");
const endOfLine = require('os').EOL;

const C3_UNDEPLOY_URI = "uu-c3/AppDeployment/undeploy/exec";
const C3_UNDEPLOY_RESULT_URI = "uu-c3/AppDeployment/undeploy/execAsyncStatus";
const HEADERS = {
  "Accept": "application/json",
  "Content-type": "application/json"
};

class uuCloudUndeployTask {

  constructor(cloudConfig) {
    this.config = cloudConfig.uuUndeployConfig();
    this.appClient = new AppClient(this.config.oidcToken);
  }

  async process() {
    let taskUri = await this._runC3Undeploy();
    if (taskUri) {
      await this._waitForResult(taskUri);
      console.log("uuApp successfully undeployed.");
    }
  }

  async _runC3Undeploy() {
    console.log(endOfLine + "uuApp is being undeployed: " + this.config.appDeploymentUri
      + (this.config.targetSlot ? ` (target slot ${this.config.targetSlot})` : ""));

    let params = {};
    if (this.config.targetSlot) {
      params.targetSlot = this.config.targetSlot;
    }

    let result = await this.appClient.exchange(
      CmdHelper.buildCmd2Url(this.appClient.c3BaseUri + '/' + C3_UNDEPLOY_URI, this.config.appDeploymentUri),
      "post",
      JSON.stringify(params),
      HEADERS
    );

    if (result.statusCode == 204) {
      console.log("> App has been already undeployed.");
      return null;
    }
    return JSON.parse(result.body).taskUri;
  }

  async _waitForResult(taskUri) {
    console.log("> Waiting for app undeploy...");

    let params = {
      taskUri: taskUri
    };

    let deployCheck = () => this.appClient.exchange(
      CmdHelper.buildCmd2Url(this.appClient.c3BaseUri + '/' + C3_UNDEPLOY_RESULT_URI, this.config.appDeploymentUri),
      "post",
      JSON.stringify(params),
      HEADERS
    );

    await CmdHelper.waitForC3Result(deployCheck);
  }
}

module.exports = uuCloudUndeployTask;
