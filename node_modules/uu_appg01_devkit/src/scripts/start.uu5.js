const child_process = require("child_process");
const fs = require("fs-extra");

const paths = require("../config/paths.js");
const WebpackRunner = require("./webpack/runner.js");

module.exports = class Start {
  constructor(config) {
    this.config = config;
  }
  async process() {
    // clean output/temporary folders
    this.config.setMode("development");
    WebpackRunner.mergeBuildConfig(this.config);
    fs.emptyDirSync(paths.buildWebpackTempDir);
    fs.emptyDirSync(this.config.get("outputPath"));

    // run build in watch mode (this includes running of pre- / post- npm scripts)
    process.env.NODE_ENV = "development";
    process.env.WATCH = "true";
    // TODO "shelljs" doesn't support exec() with passing stdio as-is (so that the program
    // can detect that the console is TTY and use colors) so we might get messages without colors => use
    // native child_process
    try {
      child_process.execSync(
        "npm run -s build -- --watch --mode=development " + this.config.toCommandLineArgs().join(" "),
        {
          shell: true,
          cwd: process.cwd(),
          stdio: "inherit"
        }
      ); // TODO Escaping of arguments
    } catch (e) {
      // assume that an error has already been shown in child process
      process.exit(1);
    }
  }
};
