"use strict";

/**
 * Interceptor for Client which authenticates command calls by using token from session object.
 *
 * Interceptor is skipped if there's request header "authorization" set for the command call, even
 * if the header value is null.
 */
class SessionHandler {
  constructor(next, options = null) {
    this._next = next;
    this._options = options || {};
  }

  async invoke(request, options = null) {
    let hasCustomAuthn = "authorization" in request.headers;
    if (hasCustomAuthn) {
      return this._next.invoke(request, options);
    }

    let opts = Object.assign(this._options, options);
    let session = opts.session;
    if (session) {
      let scope = null;
      if (typeof session.getCallTokenScope === "function") {
        scope = await session.getCallTokenScope(request.uri, opts);
      } else {
        scope = request.uri.toString().split("?")[0];
      }
      let callToken = await session.getCallToken(scope, opts);
      if (callToken) {
        request.headers["authorization"] = callToken;
      }
    }
    return this._next.invoke(request, options);
  }
}

module.exports = SessionHandler;
