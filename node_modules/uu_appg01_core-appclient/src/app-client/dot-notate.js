"use strict";

const { BaseError } = require("uu_appg01_core-utils");

module.exports = function dotNotate(object, parent = "") {
  let result = [];
  recurse(parent, object, result, parent ? 1 : 0);
  return result;
};

function recurse(key, value, result, level) {
  if (level > 5) throw new BaseError("Nesting level too deep. Possible circular reference.");
  if (Array.isArray(value)) {
    value.forEach((item, i) => recurse(`${key}[${i}]`, item, result, level + 1));
  } else if (value instanceof Date) {
    result.push({ key, value: value.toISOString() });
  } else if (value && typeof value === "object") {
    for (const k in value) {
      recurse(`${key}${level ? "." : ""}${k}`, value[k], result, level + 1);
    }
  } else {
    result.push({ key, value });
  }
}
