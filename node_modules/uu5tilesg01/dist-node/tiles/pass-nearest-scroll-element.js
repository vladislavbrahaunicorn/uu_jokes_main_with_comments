"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.PassNearestScrollElement = void 0;

var _uu5g = _interopRequireDefault(require("uu5g04"));

require("uu5g04-bricks");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//@@viewOn:imports
//@@viewOff:imports
var PassNearestScrollElement = _uu5g.default.Common.VisualComponent.create({
  //@@viewOn:mixins
  //@@viewOff:mixins
  //@@viewOn:statics
  //@@viewOff:statics
  //@@viewOn:propTypes
  propTypes: {
    defaultValue: _uu5g.default.PropTypes.any
  },
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      defaultValue: null
    };
  },
  //@@viewOff:getDefaultProps
  //@@viewOn:reactLifeCycle
  getInitialState: function getInitialState() {
    return {
      scrollElement: undefined
    };
  },
  componentDidMount: function componentDidMount() {
    var scrollElement = null;
    var node = this._domNode;

    while (node && node.tagName) {
      var computedStyle = getComputedStyle(node);

      if (computedStyle.overflowY !== "visible" && computedStyle.overflowY !== "hidden") {
        scrollElement = node;
        break;
      }

      node = node.parentNode;
    }

    if (!scrollElement) {
      scrollElement = this.props.defaultValue;
    } else if (scrollElement === document.body || scrollElement === document.documentElement) {
      scrollElement = window;
    }

    this.setState({
      scrollElement: scrollElement
    });
  },
  //@@viewOff:reactLifeCycle
  //@@viewOn:interface
  //@@viewOff:interface
  //@@viewOn:overriding
  //@@viewOff:overriding
  //@@viewOn:private
  //@@viewOff:private
  //@@viewOn:render
  render: function render() {
    var _this = this;

    var result;
    var scrollElement = this.state.scrollElement;

    if (scrollElement !== undefined) {
      var children = this.props.children;
      if (_uu5g.default.Common.Element.isValid(children)) result = _uu5g.default.Common.Element.clone(children, {
        scrollElement: scrollElement
      });else if (typeof children === "function") result = children({
        scrollElement: scrollElement
      });else result = children;
    } else {
      result = _uu5g.default.Common.Element.create("div", {
        ref: function ref(_ref) {
          return _this._domNode = _ref;
        }
      });
    }

    return result;
  } //@@viewOff:render

});

exports.PassNearestScrollElement = PassNearestScrollElement;
var _default = PassNearestScrollElement;
exports.default = _default;