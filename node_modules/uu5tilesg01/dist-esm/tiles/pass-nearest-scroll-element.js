//@@viewOn:imports
import UU5 from "uu5g04";
import "uu5g04-bricks";
//@@viewOff:imports

export const PassNearestScrollElement = UU5.Common.VisualComponent.create({
  //@@viewOn:mixins
  //@@viewOff:mixins

  //@@viewOn:statics
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    defaultValue: UU5.PropTypes.any
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      defaultValue: null
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:reactLifeCycle
  getInitialState() {
    return { scrollElement: undefined };
  },

  componentDidMount() {
    let scrollElement = null;
    let node = this._domNode;
    while (node && node.tagName) {
      let computedStyle = getComputedStyle(node);
      if (computedStyle.overflowY !== "visible" && computedStyle.overflowY !== "hidden") {
        scrollElement = node;
        break;
      }
      node = node.parentNode;
    }
    if (!scrollElement) {
      scrollElement = this.props.defaultValue;
    } else if (scrollElement === document.body || scrollElement === document.documentElement) {
      scrollElement = window;
    }
    this.setState({ scrollElement });
  },
  //@@viewOff:reactLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overriding
  //@@viewOff:overriding

  //@@viewOn:private
  //@@viewOff:private

  //@@viewOn:render
  render() {
    let result;
    let { scrollElement } = this.state;
    if (scrollElement !== undefined) {
      let { children } = this.props;
      if (UU5.Common.Element.isValid(children)) result = UU5.Common.Element.clone(children, { scrollElement });
      else if (typeof children === "function") result = children({ scrollElement });
      else result = children;
    } else {
      result = <div ref={ref => (this._domNode = ref)} />;
    }
    return result;
  }
  //@@viewOff:render
});

export default PassNearestScrollElement;
