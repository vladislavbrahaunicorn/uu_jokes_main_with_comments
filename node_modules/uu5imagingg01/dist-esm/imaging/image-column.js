import UU5 from "uu5g04";
import Cfg from "../config/config.js";
import ImageColumnBody from "./internal/image-column-body.js";

const bodyProps = {
  data: true,
  effect: true,
  thumbSuffix: true,
  lightbox: true,
  minWidth: true,
  maxWidth: true,
  height: true,
  alignment: true,
  rowWidth: true,
  session: true,
  authenticate: true
};

function getAlignmentStyle(alignment) {
  if (alignment === "center") {
    return "justify-content: center;";
  } else if (alignment === "top") {
    return "justify-content: flex-start;";
  } else if (alignment === "bottom") {
    return "justify-content: flex-end;";
  } else {
    // block
    return "justify-content: space-between;";
  }
}

export const ImageColumn = UU5.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: Cfg.TAG + "ImageColumn",
    classNames: {
      main: props =>
        Cfg.CSS +
        "image-column" +
        " " +
        UU5.Common.Css.css`
        ${props.height ? `height: ${UU5.Common.Tools.fillUnit(props.height)};` : ""}
        display: flex;
        flex-direction: column;
        ${getAlignmentStyle(props.alignment)}
      `
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    data: UU5.PropTypes.any,
    alignment: UU5.PropTypes.string,
    authenticate: UU5.PropTypes.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      data: null,
      alignment: "block",
      authenticate: false
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _renderBody() {
    let data = this.props.data || [];
    let props = {};

    for (let propKey in bodyProps) {
      props[propKey] = this.props[propKey];
    }

    if (props.authenticate) {
      return (
        <UU5.Common.SessionContext.Consumer>
          {session => <ImageColumnBody {...props} data={data} session={session ? session.session : undefined} />}
        </UU5.Common.SessionContext.Consumer>
      );
    } else {
      return <ImageColumnBody {...props} data={data} />;
    }
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render() {
    return <div {...this.getMainAttrs()}>{this._renderBody()}</div>;
  }
  //@@viewOff:render
});

export default ImageColumn;
