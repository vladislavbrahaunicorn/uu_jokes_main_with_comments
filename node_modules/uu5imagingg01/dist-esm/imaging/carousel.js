import UU5 from "uu5g04";
import Cfg from "../config/config.js";
import CarouselBody from "./internal/carousel-body.js";

let Carousel = UU5.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: Cfg.TAG + "Carousel",
    classNames: {
      main: props => {
        let classes = [Cfg.CSS + "carousel"];

        if (props.height) {
          classes.push(UU5.Common.Css.css`
            && {
              height: ${UU5.Common.Tools.fillUnit(props.height)};
            }
          `);
        }

        return classes.join(" ");
      }
    },
    opt: {
      hoc: true
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    data: UU5.PropTypes.any,
    authenticate: UU5.PropTypes.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      data: null,
      authenticate: false
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _renderResizeBody({ width }) {
    if (width === 0) {
      // fix for Resize rendering without dimensions first
      return null;
    } else {
      return this._renderBody(width);
    }
  },

  _renderBody(width = this.props.width) {
    let data = this.props.data || [];

    if (this.props.authenticate) {
      return (
        <UU5.Common.SessionContext.Consumer>
          {session => (
            <CarouselBody
              {...this.props}
              {...this.getMainPropsToPass()}
              data={data}
              width={width}
              session={session ? session.session : undefined}
            />
          )}
        </UU5.Common.SessionContext.Consumer>
      );
    } else {
      return <CarouselBody {...this.props} {...this.getMainPropsToPass()} data={data} width={width} />;
    }
  },

  _getChildren() {
    if (this.props.width) {
      return this._renderBody();
    } else {
      return (
        <UU5.Bricks.Resize {...this.getMainPropsToPass()} ref_={null}>
          {this._renderResizeBody}
        </UU5.Bricks.Resize>
      );
    }
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render() {
    return this._getChildren();
  }
  //@@viewOff:render
});

Carousel = UU5.Common.withVisibilityCheck(Carousel);

export { Carousel };
export default Carousel;
