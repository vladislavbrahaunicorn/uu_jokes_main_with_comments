"use strict";

const Cache = require("./cache.js");

/**
 * Simple cache wrapper allowing to override cache implementation on
 * frontend with implementation based on browser local storage to allow
 * cache survive page reload.
 * This type of caching should be used only for safe data like result
 * of oidc discovery, jwks or client_ids, not for caching tokens and
 * other sensitive data!
 * @private
 */
class PersistentCache extends Cache {

  /**
   * Creates new instance of cache.
   * @param name Cache name (for identification in persistent store)
   * @param {Object|null} opts Cache options
   * @param {number} opts.maxSize Maximal number of items to be stored
   * @param {number} opts.maxAge How long (in milliseconds) should items be stored
   */
  constructor(name, opts = {}) {
    super(opts);
    this._name = `uu_app_oidc_cache_${name}`;
  }

}

module.exports = PersistentCache;
