/*!
 * UAF Licence for the uu5 software.
 * 
 * Copyright (c) 2016-present, Unicorn a.s.
 * All rights reserved.
 * 
 * Definitions
 * -----------
 * This licence agreement is based on the original "BSD Licence" published by
 * the Regents of the University of California in 1990.
 * 
 * The term "Software" means the uu5 package, its modules, components,
 * all program files, source code, examples, media, and documentation which are part
 * of the Software package, as well as any portion of them. The term "Author" means
 * Unicorn a.s. and all its subsidiaries and/or affiliates.
 * 
 * Licence Agreement
 * -----------------
 * 
 * Redistribution and use of this Software in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 
 * 3. All derivative products containing user interface must display the following
 *    acknowledgement in the appropriate "About window" or website section accessible
 *    by all users of the product:
 * 
 *      This product includes following software developed by
 *      <a href="https://unicorn.com">Unicorn a.s.</a>:
 *      <a href="https://uuos9.plus4u.net/uu-dockitg01-main/78462435-86b4d5a4a030400784764ebdb972bbda/book">UAF</a>,
 *      <a href="https://uuos9.plus4u.net/uu-dockitg01-main/78462435-ed11ec379073476db0aa295ad6c00178/book">uu5</a>.
 * 
 * 4. All derivative products must not block the default uu5 browser console message containing
 *    Software version information and copyright notice of the Author.
 * 
 * 5. The use of any portion of this Software is not allowed in the products
 *    that fully or partially resemble the functionality of the Software
 *    or otherwise compete with the Software unless they are licenced under the same licence
 *    conditions and provided free of charge. Specific prior written permission is required otherwise.
 * 
 * 6. Neither the name of the Author nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 * Disclaimer
 * ----------
 * THIS SOFTWARE IS PROVIDED BY AUTHOR "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(1);


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(2);

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _polyfills_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _polyfills_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_polyfills_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _richtext_richtext_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5);
/* harmony import */ var _richtext_richtext_lsi_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(128);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Area", function() { return _richtext_richtext_js__WEBPACK_IMPORTED_MODULE_2__["Area"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Block", function() { return _richtext_richtext_js__WEBPACK_IMPORTED_MODULE_2__["Block"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Editor", function() { return _richtext_richtext_js__WEBPACK_IMPORTED_MODULE_2__["Editor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EditorInput", function() { return _richtext_richtext_js__WEBPACK_IMPORTED_MODULE_2__["EditorInput"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExpandableEditorInput", function() { return _richtext_richtext_js__WEBPACK_IMPORTED_MODULE_2__["ExpandableEditorInput"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HtmlEditor", function() { return _richtext_richtext_js__WEBPACK_IMPORTED_MODULE_2__["HtmlEditor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Toolbar", function() { return _richtext_richtext_js__WEBPACK_IMPORTED_MODULE_2__["Toolbar"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Plugins", function() { return _richtext_richtext_js__WEBPACK_IMPORTED_MODULE_2__["Plugins"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "plugins", function() { return _richtext_richtext_js__WEBPACK_IMPORTED_MODULE_2__["plugins"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HtmlPlugins", function() { return _richtext_richtext_js__WEBPACK_IMPORTED_MODULE_2__["HtmlPlugins"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "htmlPlugins", function() { return _richtext_richtext_js__WEBPACK_IMPORTED_MODULE_2__["htmlPlugins"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "_contentKitPlugins", function() { return _richtext_richtext_js__WEBPACK_IMPORTED_MODULE_2__["_contentKitPlugins"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "withEditorContext", function() { return _richtext_richtext_js__WEBPACK_IMPORTED_MODULE_2__["withEditorContext"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createEditablePlugin", function() { return _richtext_richtext_js__WEBPACK_IMPORTED_MODULE_2__["createEditablePlugin"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Bricks", function() { return _richtext_richtext_js__WEBPACK_IMPORTED_MODULE_2__["Bricks"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EditorContext", function() { return _richtext_richtext_js__WEBPACK_IMPORTED_MODULE_2__["EditorContext"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HtmlEditorContext", function() { return _richtext_richtext_js__WEBPACK_IMPORTED_MODULE_2__["HtmlEditorContext"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExpandableEditor", function() { return _richtext_richtext_js__WEBPACK_IMPORTED_MODULE_2__["ExpandableEditor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmptyPlugin", function() { return _richtext_richtext_js__WEBPACK_IMPORTED_MODULE_2__["EmptyPlugin"]; });






/* harmony default export */ __webpack_exports__["default"] = (_richtext_richtext_js__WEBPACK_IMPORTED_MODULE_2__);

if (process.env.NODE_ENV !== "test") {
  // eslint-disable-next-line no-console
  console.log("".concat("uu5richtextg01", "-").concat("1.12.1", " \xA9 Unicorn\nTerms of Use: https://unicorn.com/tou/").concat("uu5richtextg01"));
}

uu5g04__WEBPACK_IMPORTED_MODULE_1___default.a.Environment.addRuntimeLibrary({
  name: "uu5richtextg01",
  version: "1.12.1"
});
var exports = _richtext_richtext_js__WEBPACK_IMPORTED_MODULE_2__;
if (!uu5g04__WEBPACK_IMPORTED_MODULE_1___default.a["RichText"]) uu5g04__WEBPACK_IMPORTED_MODULE_1___default.a["RichText"] = {};

for (var k in exports) {
  uu5g04__WEBPACK_IMPORTED_MODULE_1___default.a["RichText"][k] = exports[k];
}

uu5g04__WEBPACK_IMPORTED_MODULE_1___default.a.Environment.Lsi.RichText = _richtext_richtext_lsi_js__WEBPACK_IMPORTED_MODULE_3__["default"];

/***/ }),
/* 3 */
/***/ (function(module, exports) {

// String.startsWith for IE
if (!String.prototype.startsWith) {
  String.prototype.startsWith = function (search, pos) {
    return this.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
  };
} // String.endsWith


if (!String.prototype.endsWith) {
  String.prototype.endsWith = function (search, this_len) {
    if (this_len === undefined || this_len > this.length) {
      this_len = this.length;
    }

    return this.substring(this_len - search.length, this_len) === search;
  };
} // Array.fill


if (!Array.prototype.fill) {
  Object.defineProperty(Array.prototype, "fill", {
    value: function value(_value) {
      // Steps 1-2.
      if (this == null) {
        throw new TypeError("this is null or not defined");
      }

      var O = Object(this); // Steps 3-5.

      var len = O.length >>> 0; // Steps 6-7.

      var start = arguments[1];
      var relativeStart = start >> 0; // Step 8.

      var k = relativeStart < 0 ? Math.max(len + relativeStart, 0) : Math.min(relativeStart, len); // Steps 9-10.

      var end = arguments[2];
      var relativeEnd = end === undefined ? len : end >> 0; // Step 11.

      var final = relativeEnd < 0 ? Math.max(len + relativeEnd, 0) : Math.min(relativeEnd, len); // Step 12.

      while (k < final) {
        O[k] = _value;
        k++;
      } // Step 13.


      return O;
    }
  });
}

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = require("uu5g04");

/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Plugins", function() { return Plugins; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "plugins", function() { return plugins; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HtmlPlugins", function() { return HtmlPlugins; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_contentKitPlugins", function() { return _contentKitPlugins; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Bricks", function() { return Bricks; });
/* harmony import */ var _plugins_uu5_plugins_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _plugins_html_plugins_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(55);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "htmlPlugins", function() { return _plugins_html_plugins_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _plugins_content_kit_plugins_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(84);
/* harmony import */ var _editor_block_lazy_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(28);
/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(86);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "withEditorContext", function() { return _context_js__WEBPACK_IMPORTED_MODULE_4__["withEditorContext"]; });

/* harmony import */ var _plugins_plugin_factory_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(85);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createEditablePlugin", function() { return _plugins_plugin_factory_js__WEBPACK_IMPORTED_MODULE_5__["createEditablePlugin"]; });

/* harmony import */ var _area_lazy_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(87);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Area", function() { return _area_lazy_js__WEBPACK_IMPORTED_MODULE_6__["AreaLazy"]; });

/* harmony import */ var _block_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(96);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Block", function() { return _block_js__WEBPACK_IMPORTED_MODULE_7__["Block"]; });

/* harmony import */ var _editor_lazy_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(113);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Editor", function() { return _editor_lazy_js__WEBPACK_IMPORTED_MODULE_8__["EditorLazy"]; });

/* harmony import */ var _editor_context_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(114);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EditorContext", function() { return _editor_context_js__WEBPACK_IMPORTED_MODULE_9__["EditorContext"]; });

/* harmony import */ var _editor_input_lazy_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(115);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EditorInput", function() { return _editor_input_lazy_js__WEBPACK_IMPORTED_MODULE_10__["EditorInputLazy"]; });

/* harmony import */ var _expandable_editor_input_lazy_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(119);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExpandableEditorInput", function() { return _expandable_editor_input_lazy_js__WEBPACK_IMPORTED_MODULE_11__["ExpandableEditorInputLazy"]; });

/* harmony import */ var _html_editor_lazy_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(123);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HtmlEditor", function() { return _html_editor_lazy_js__WEBPACK_IMPORTED_MODULE_12__["HtmlEditorLazy"]; });

/* harmony import */ var _html_editor_context_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(125);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HtmlEditorContext", function() { return _html_editor_context_js__WEBPACK_IMPORTED_MODULE_13__["HtmlEditorContext"]; });

/* harmony import */ var _toolbar_lazy_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(126);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Toolbar", function() { return _toolbar_lazy_js__WEBPACK_IMPORTED_MODULE_14__["ToolbarLazy"]; });

/* harmony import */ var _expandable_editor_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(122);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExpandableEditor", function() { return _expandable_editor_js__WEBPACK_IMPORTED_MODULE_15__["ExpandableEditor"]; });

/* harmony import */ var _plugins_empty_plugin_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(127);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmptyPlugin", function() { return _plugins_empty_plugin_js__WEBPACK_IMPORTED_MODULE_16__["EmptyPlugin"]; });
















var Plugins = _plugins_uu5_plugins_js__WEBPACK_IMPORTED_MODULE_0__["default"];
var plugins = _plugins_uu5_plugins_js__WEBPACK_IMPORTED_MODULE_0__["default"];
var HtmlPlugins = _plugins_html_plugins_js__WEBPACK_IMPORTED_MODULE_1__["default"];

var _contentKitPlugins = _plugins_content_kit_plugins_js__WEBPACK_IMPORTED_MODULE_2__["default"];




var Bricks = {
  Block: _editor_block_lazy_js__WEBPACK_IMPORTED_MODULE_3__["default"]
};

/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bold_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7);
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9);
/* harmony import */ var _font_family_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(18);
/* harmony import */ var _font_size_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(19);
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(20);
/* harmony import */ var _italic_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(21);
/* harmony import */ var _strike_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(22);
/* harmony import */ var _underline_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(23);
/* harmony import */ var _remove_format_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(24);
/* harmony import */ var _text_align_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(25);
/* harmony import */ var _block_indent_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(26);
/* harmony import */ var _list_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(27);
/* harmony import */ var _paragraph_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(34);
/* harmony import */ var _p_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(35);
/* harmony import */ var _unstyled_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(36);
/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(37);
/* harmony import */ var _icon_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(38);
/* harmony import */ var _link_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(43);
/* harmony import */ var _uu5string_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(45);
/* harmony import */ var _uu5string_entity_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(49);
/* harmony import */ var _uu5string_block_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(50);
/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(51);
/* harmony import */ var _whitespace_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(54);
// inline styles








 // block stlyes


 // blocks
// import BlockquotePlugin from "./blockquote.js";




 // entities
// import ButtonPlugin from "./button.js";









/* harmony default export */ __webpack_exports__["default"] = ({
  fontSize: _font_size_js__WEBPACK_IMPORTED_MODULE_3__["default"],
  bold: _bold_js__WEBPACK_IMPORTED_MODULE_0__["default"],
  index: _index_js__WEBPACK_IMPORTED_MODULE_4__["default"],
  italic: _italic_js__WEBPACK_IMPORTED_MODULE_5__["default"],
  strike: _strike_js__WEBPACK_IMPORTED_MODULE_6__["default"],
  underline: _underline_js__WEBPACK_IMPORTED_MODULE_7__["default"],
  removeFormat: _remove_format_js__WEBPACK_IMPORTED_MODULE_8__["default"],
  textAlign: _text_align_js__WEBPACK_IMPORTED_MODULE_9__["default"],
  unstyled: _unstyled_js__WEBPACK_IMPORTED_MODULE_14__["default"],
  paragraph: _paragraph_js__WEBPACK_IMPORTED_MODULE_12__["default"],
  p: _p_js__WEBPACK_IMPORTED_MODULE_13__["default"],
  link: _link_js__WEBPACK_IMPORTED_MODULE_17__["default"],
  list: _list_js__WEBPACK_IMPORTED_MODULE_11__["default"],
  color: _color_js__WEBPACK_IMPORTED_MODULE_1__["default"],
  fontFamily: _font_family_js__WEBPACK_IMPORTED_MODULE_2__["default"],
  indent: _block_indent_js__WEBPACK_IMPORTED_MODULE_10__["default"],
  code: _code_js__WEBPACK_IMPORTED_MODULE_15__["default"],
  uu5string: _uu5string_js__WEBPACK_IMPORTED_MODULE_18__["default"],
  uu5stringEntity: _uu5string_entity_js__WEBPACK_IMPORTED_MODULE_19__["default"],
  uu5StringBlock: _uu5string_block_js__WEBPACK_IMPORTED_MODULE_20__["default"],
  icon: _icon_js__WEBPACK_IMPORTED_MODULE_16__["default"],
  error: _error_js__WEBPACK_IMPORTED_MODULE_21__["default"],
  whitespace: _whitespace_js__WEBPACK_IMPORTED_MODULE_22__["default"]
});

/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_1__);


var pluginDef = immutable__WEBPACK_IMPORTED_MODULE_1___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_1___default.a.fromJS({
  name: "bold",
  type: "inline",
  buttonDefs: {
    icon: "mdi-format-bold",
    label: function label() {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.Lsi.RichText.plugins.bold.label;
    }
  },
  toEditorItemDefs: [{
    tagName: "strong",
    inlineStyle: {
      fontWeight: "bold"
    }
  }, {
    tagName: "b",
    skipToObjectRule: true
  }, {
    tagName: "UU5.Bricks.Strong",
    htmlAliases: [{
      tagName: "b"
    }, {
      tagName: "strong"
    }, {
      tagName: "span",
      style: {
        fontWeight: "bold"
      }
    }, {
      tagName: "span",
      style: {
        fontWeight: "700"
      }
    }],
    skipToObjectRule: true
  }, {
    tagName: "UU5.Bricks.Span",
    style: {
      fontWeight: "bold"
    },
    skipToObjectRule: true
  }],
  commands: {
    keyCode: 66,
    ctrlKey: true
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 8 */
/***/ (function(module, exports) {

module.exports = require("immutable");

/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _internal_color_button_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(10);



var PLUGIN_NAME = "color";
var COLORS = [["#3F51B5", "#2196F3", "#03A9F4", "#00BCD4", "#009688", "#4CAF50", "#8BC34A"], ["#CDDC39", "#FFEB3B", "#FFC107", "#FF9800", "#FF5722", "#F44336", "#E91E63"], ["#9C27B0", "#673AB7", "#795548", "#9E9E9E", "#607D8B", "#000000", "#FFFFFF"]];
var COLOR_PREFIX = "TEXTCOLOR";
var BACKGROUND_COLOR_PREFIX = "BACKGROUNDCOLOR";

var getSelectedColorWithPrefix = function getSelectedColorWithPrefix(editorState, area, PREFIX) {
  var selectedColors = editorState && area && area.getCurrentStylesWithPrefix(editorState, PREFIX);
  var selectedColorCode = selectedColors && selectedColors.length ? selectedColors[0].split(".")[1] : undefined;
  var selectedColorStyleParts = selectedColorCode && selectedColorCode.split(":");
  return selectedColorStyleParts ? selectedColorStyleParts[selectedColorStyleParts.length - 1] : undefined;
};

var getDefaultFontColor = function getDefaultFontColor(area) {
  if (area) {
    var areaStyles = area.getStyles();

    if (areaStyles) {
      return areaStyles.color;
    }
  }

  return "#000000";
};

var getColorButtonProps = function getColorButtonProps(editorState, getArea) {
  var area = typeof getArea === "function" ? getArea() : undefined;
  return {
    selectedColor: getSelectedColorWithPrefix(editorState, area, COLOR_PREFIX),
    defaultColor: getDefaultFontColor(area)
  };
};

var getBackgroundButtonProps = function getBackgroundButtonProps(editorState, getArea) {
  var area = typeof getArea === "function" ? getArea() : undefined;
  return {
    selectedColor: getSelectedColorWithPrefix(editorState, area, BACKGROUND_COLOR_PREFIX)
  };
};

var pluginDef = immutable__WEBPACK_IMPORTED_MODULE_1___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_1___default.a.fromJS({
  name: PLUGIN_NAME,
  type: "inline",
  buttonDefs: [{
    name: "textColor",
    button: _internal_color_button_js__WEBPACK_IMPORTED_MODULE_2__["default"],
    props: {
      colors: COLORS,
      rulePrefix: COLOR_PREFIX
    },
    getProps: getColorButtonProps,
    label: function label() {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.Lsi.RichText.plugins.color.textColorLabel;
    },
    preserveStyle: true
  }, {
    name: "backgroundColor",
    button: _internal_color_button_js__WEBPACK_IMPORTED_MODULE_2__["default"],
    props: {
      colors: COLORS,
      defaultColor: "#FFFFFF",
      styleName: "backgroundColor",
      rulePrefix: BACKGROUND_COLOR_PREFIX
    },
    getProps: getBackgroundButtonProps,
    label: function label() {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.Lsi.RichText.plugins.color.backgroundColorLabel;
    },
    icon: "mdi-format-color-fill",
    preserveStyle: true
  }],
  toEditorItemDefs: [{
    tagName: "UU5.Bricks.Span",
    htmlAliases: {
      tagName: "span",
      style: {
        color: true
      }
    },
    style: {
      color: true
    },
    prefix: COLOR_PREFIX
  }, {
    tagName: "UU5.Bricks.Span",
    // disable pasting background style
    // htmlAliases: {
    //   tagName: "span",
    //   style: { backgroundColor: true }
    // },
    style: {
      backgroundColor: true
    },
    prefix: BACKGROUND_COLOR_PREFIX
  }],
  toObjectDefs: [{
    prefix: COLOR_PREFIX,
    tagName: "UU5.Bricks.Span",
    style: {
      color: "${1}"
    },
    order: 55
  }, {
    prefix: BACKGROUND_COLOR_PREFIX,
    tagName: "UU5.Bricks.Span",
    style: {
      backgroundColor: "${1}"
    }
  }]
}));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(11);
/* harmony import */ var uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _color_button_less__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(12);
/* harmony import */ var _color_button_less__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_color_button_less__WEBPACK_IMPORTED_MODULE_2__);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

//@@viewOn:imports


 //@@viewOff:imports

var baseClassName = "uu5-richtext-plugin-color-button";

var isWhiteColor = function isWhiteColor(color) {
  return color === "#FFFFFF" || color === "white" || color === "rgb(255, 255, 255)";
};

var getStyleForColor = function getStyleForColor(color) {
  return {
    background: color,
    border: isWhiteColor(color) ? "1px solid #000000" : "none"
  };
};

var ColorButton = uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].VisualComponent.create({
  displayName: "UU5.RichText.ColorButton",
  tagName: "UU5.RichText.ColorButton",
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].BaseMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].ElementaryMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].ColorSchemaMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    classNames: {
      main: baseClassName + " uu5-richtext-toolbar-button",
      popover: baseClassName + "-popover",
      dropdownItem: baseClassName + "-dropdown-item",
      colorPicker: uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Css.css("\n        position: absolute;\n        top: 0;\n        left: 0;\n        display: inline-block;\n        white-space: normal;\n        vertical-align: bottom;\n        width: 0;\n        height: 0;\n\n        &&& {\n          margin: 0;\n        }\n        \n        && > .uu5-forms-input-wrapper > .uu5-bricks-button {\n          width: 32px;\n        }\n\n        > .uu5-forms-input-wrapper > .uu5-bricks-button {\n          height: 32px;\n          visibility: hidden;\n          pointer-events: none;\n        }\n      ")
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  propTypes: {
    onClick: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].func.isRequired,
    getArea: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].func.isRequired,
    icon: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string,
    defaultColor: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string,
    styleName: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string,
    rulePrefix: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string,
    colors: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].arrayOf(uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].arrayOf(uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string)).isRequired,
    selectedColor: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string,
    baseline: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].bool,
    dropdownItem: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].bool,
    preserveStyle: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].bool,
    label: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string
  },
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      onClick: undefined,
      getArea: undefined,
      defaultColor: "#000000",
      icon: "mdi-format-color-text",
      rulePrefix: "color",
      styleName: "color",
      selectedColor: undefined,
      baseline: false,
      dropdownItem: false,
      preserveStyle: false,
      label: undefined
    };
  },
  //@@viewOff:getDefaultProps
  //@@viewOn:reactLifeCycle
  getInitialState: function getInitialState() {
    return {
      open: false
    };
  },
  //@@viewOff:reactLifeCycle
  //@@viewOn:interface
  //@@viewOff:interface
  //@@viewOn:overriding
  //@@viewOff:overriding
  //@@viewOn:private
  _registerPicker: function _registerPicker(picker) {
    this._colorPicker = picker;
  },
  _onMouseDown: function _onMouseDown(e) {
    e.preventDefault();
    var area = typeof this.props.getArea === "function" ? this.props.getArea() : null;

    if (area) {
      area.setReadOnly(!this.state.open);
    }
  },
  _togglePicker: function _togglePicker() {
    var _this = this;

    this.setState(function (state) {
      state.open ? _this._colorPicker.close() : _this._colorPicker.open();
      return {
        open: !state.open
      };
    });
  },
  _handleChangeColor: function _handleChangeColor(opt) {
    var _this2 = this;

    var color = opt.value;
    this.setState({
      color: color,
      open: false
    });

    var value = this._getRule(color);

    var area = typeof this.props.getArea === "function" && this.props.getArea();
    if (!area) return;
    area.setReadOnly(false, function () {
      _this2.props.onClick({
        type: "inline",
        value: value,
        preserveStyle: _this2.props.preserveStyle,
        focus: true
      });
    });
  },
  _getSelectedColor: function _getSelectedColor() {
    return this.props.selectedColor || this.props.defaultColor;
  },
  _getRule: function _getRule(color) {
    var colorCode = color ? "".concat(this.props.styleName, ":").concat(color) : "";
    return "".concat(this.props.rulePrefix, ".").concat(colorCode);
  },
  //@@viewOff:private
  //@@viewOn:render
  render: function render() {
    var mainProps = this.getMainPropsToPass();

    if (this.props.dropdownItem) {
      mainProps.className += " ".concat(this.getClassName("dropdownItem"));
    } // disable linting of undefined property className ( defined on base mixin )

    /* eslint-disable react/prop-types */


    var buttonClassName = this.props.className ? this.props.className + " uu5-richtext-toolbar-button" : "uu5-richtext-toolbar-button";
    /* eslint-enable */

    return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Span, mainProps, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Button, _extends({}, this.props, {
      className: buttonClassName,
      pressed: this.state.open,
      baseline: this.props.baseline,
      mainAttrs: {
        onMouseDown: this._onMouseDown,
        tabIndex: -1
      },
      onClick: this._togglePicker
    }), uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Icon, {
      icon: this.props.icon
    }), uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Span, {
      className: "uu5-richtext-plugin-color-preview",
      style: getStyleForColor(this._getSelectedColor())
    }), this.props.dropdownItem && this.props.label), uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Forms"].ColorPicker, {
      className: this.getClassName("colorPicker"),
      onChange: this._handleChangeColor,
      value: this.state.color,
      ref_: this._registerPicker
    }));
  } //@@viewOff:render

});
/* harmony default export */ __webpack_exports__["default"] = (ColorButton);

/***/ }),
/* 11 */
/***/ (function(module, exports) {

module.exports = require("uu5g04-bricks");

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(13);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":false}

options.transform = transform
options.insertInto = function anonymous(
) {
return __webpack_require__(15)();
};

var update = __webpack_require__(16)(content, options);

if(content.locals) module.exports = content.locals;



/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(14)(false);
// Module
exports.push([module.i, ".uu5-richtext-plugin-color-button {\n  position: relative;\n}\n.uu5-richtext-plugin-color-button > .uu5-bricks-button .uu5-bricks-icon:first-child {\n  margin: 0;\n}\n.uu5-richtext-plugin-color-button .uu5-richtext-plugin-color-preview {\n  position: absolute;\n  left: 8px;\n  bottom: 4px;\n  height: 4px;\n  width: 16px;\n}\n.uu5-richtext-plugin-color-button-dropdown-item .uu5-bricks-button.uu5-bricks-button.uu5-richtext-toolbar-dropdown-button {\n  padding: 6px 16px 7px;\n  font-size: inherit;\n}\n.uu5-richtext-plugin-color-button-dropdown-item .uu5-bricks-button.uu5-bricks-button.uu5-richtext-toolbar-dropdown-button > .uu5-bricks-icon {\n  margin-right: 9px;\n  margin-left: -6px;\n  font-size: 1.2em;\n}\n.uu5-richtext-plugin-color-button-dropdown-item .uu5-richtext-plugin-color-preview {\n  left: 9px;\n  width: 19px;\n}\n.uu5-richtext-plugin-color-button-dropdown-item .uu5-richtext-plugin-color-button-popover {\n  left: -110px !important;\n}\n.uu5-richtext-plugin-color-button-popover.uu5-bricks-popover {\n  width: 300px;\n}\n.uu5-richtext-plugin-color-button-popover .uu5-bricks-popover-body {\n  color: rgba(0, 0, 0, 0.87);\n}\n.uu5-richtext-plugin-color-button-popover .uu5-bricks-popover-body > div:first-child {\n  display: -webkit-box;\n  display: flex;\n  -webkit-box-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n          justify-content: center;\n  width: 100%;\n  cursor: pointer;\n}\n.uu5-richtext-plugin-color-button-popover .uu5-bricks-popover-body > div:first-child div {\n  pointer-events: none;\n  margin-right: 8px;\n}\n.uu5-richtext-plugin-color-button-popover .uu5-bricks-popover-body > div:last-child {\n  display: -webkit-box;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n          flex-direction: row;\n  flex-wrap: wrap;\n  -webkit-box-pack: center;\n          justify-content: center;\n  width: 100%;\n}\n.uu5-richtext-plugin-colorpicker-cell {\n  width: 32px;\n  height: 32px;\n  margin: 4px;\n  display: inline-block;\n  box-sizing: border-box;\n  cursor: pointer;\n}\n", ""]);



/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return '@media ' + item[2] + '{' + content + '}';
      } else {
        return content;
      }
    }).join('');
  }; // import a list of modules into the list


  list.i = function (modules, mediaQuery) {
    if (typeof modules === 'string') {
      modules = [[null, modules, '']];
    }

    var alreadyImportedModules = {};

    for (var i = 0; i < this.length; i++) {
      var id = this[i][0];

      if (id != null) {
        alreadyImportedModules[id] = true;
      }
    }

    for (i = 0; i < modules.length; i++) {
      var item = modules[i]; // skip already imported module
      // this implementation is not 100% perfect for weird media query combinations
      // when a module is imported multiple times with different media queries.
      // I hope this will never occur (Hey this way we have smaller bundles)

      if (item[0] == null || !alreadyImportedModules[item[0]]) {
        if (mediaQuery && !item[2]) {
          item[2] = mediaQuery;
        } else if (mediaQuery) {
          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';
        }

        list.push(item);
      }
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || '';
  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;
  return '/*# ' + data + ' */';
}

/***/ }),
/* 15 */
/***/ (function(module, exports) {

function insert(styleEl) {
  var insertionEl = document.head || document.body;
  styleEl.setAttribute("data-owner", "uu5richtextg01/uu5richtextg01@1.12.1");
  styleEl.setAttribute("data-emotion", "uu-richtext");
  styleEl.setAttribute("data-tech", "less"); // insert the style element
  // 1. after last matching data-emotion using technology "less"

  var els = insertionEl.querySelectorAll("style[data-emotion=\"uu-richtext\"]");

  for (var i = els.length - 1; i >= 0; i--) {
    var _el = els[i];

    if (_el.getAttribute("data-tech") === "less") {
      _el.parentNode.insertBefore(styleEl, _el.nextSibling);

      return;
    }
  } // 2. before first matching data-emotion using technology "emotion"


  for (var _i = 0; _i < els.length; _i++) {
    var _el2 = els[_i];

    if (_el2.getAttribute("data-tech") !== "less") {
      _el2.parentNode.insertBefore(styleEl, _el2);

      return;
    }
  } // 3. before element with data-uu-app-styles-insert-before attribute


  var el = document.querySelector("[data-uu-app-styles-insert-before]");

  if (el) {
    el.parentNode.insertBefore(styleEl, el);
    return;
  } // 4. at the end of <head> or <body>


  insertionEl.appendChild(styleEl);
}

var PSEUDO_ELEMENT = {
  appendChild: insert,
  insertBefore: insert,
  insertAfter: insert
};

module.exports = function insertInto() {
  return PSEUDO_ELEMENT;
};

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getTarget = function (target, parent) {
  if (parent){
    return parent.querySelector(target);
  }
  return document.querySelector(target);
};

var getElement = (function (fn) {
	var memo = {};

	return function(target, parent) {
                // If passing function in options, then use it for resolve "head" element.
                // Useful for Shadow Root style i.e
                // {
                //   insertInto: function () { return document.querySelector("#foo").shadowRoot }
                // }
                if (typeof target === 'function') {
                        return target();
                }
                if (typeof memo[target] === "undefined") {
			var styleTarget = getTarget.call(this, target, parent);
			// Special case to return head of iframe instead of iframe itself
			if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
				try {
					// This will throw an exception if access to iframe is blocked
					// due to cross-origin restrictions
					styleTarget = styleTarget.contentDocument.head;
				} catch(e) {
					styleTarget = null;
				}
			}
			memo[target] = styleTarget;
		}
		return memo[target]
	};
})();

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(17);

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
        if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else if (typeof options.insertAt === "object" && options.insertAt.before) {
		var nextSibling = getElement(options.insertAt.before, target);
		target.insertBefore(style, nextSibling);
	} else {
		throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}

	if(options.attrs.nonce === undefined) {
		var nonce = getNonce();
		if (nonce) {
			options.attrs.nonce = nonce;
		}
	}

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function getNonce() {
	if (false) {}

	return __webpack_require__.nc;
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = typeof options.transform === 'function'
		 ? options.transform(obj.css) 
		 : options.transform.default(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),
/* 17 */
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  }

	// blank or null?
	if (!css || typeof css !== "string") {
	  return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl
			.trim()
			.replace(/^"(.*)"$/, function(o, $1){ return $1; })
			.replace(/^'(.*)'$/, function(o, $1){ return $1; });

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(unquotedOrigUrl)) {
		  return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
		  	//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};


/***/ }),
/* 18 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_1__);


var PLUGIN_NAME = "fontFamily";
var DEFAULT_FONT = "ClearSans";
var FONTS = ["ClearSans", "Arial", "Courier", "Times New Roman"];
var pluginDef = immutable__WEBPACK_IMPORTED_MODULE_1___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_1___default.a.fromJS({
  name: PLUGIN_NAME,
  type: "inline",
  buttonDefs: [{
    name: "fontFamily",
    icon: "mdi-format-text",
    label: function label() {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.Lsi.RichText.plugins.fontFamily.label;
    },
    preserveStyle: true,
    items: FONTS.map(function (font) {
      return {
        label: font,
        value: font === DEFAULT_FONT ? "" : "fontFamily:".concat(font)
      };
    })
  }],
  toEditorItemDefs: {
    tagName: "UU5.Bricks.Span",
    htmlAliases: {
      tagName: "span",
      style: {
        fontFamily: true
      }
    },
    style: {
      fontFamily: true
    },
    prefix: PLUGIN_NAME
  },
  toObjectDefs: {
    prefix: PLUGIN_NAME,
    tagName: "UU5.Bricks.Span",
    style: {
      fontFamily: "${1}"
    }
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 19 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_1__);


var PLUGIN_NAME = "fontSize";
var DEFAULT_SIZE = 15;
var SIZES = [8, 10, 12, 14, 15, 16, 18, 20, 22, 24, 26, 28, 32, 40, 48];

var getDefaultFontSize = function getDefaultFontSize(getArea, defaultSize) {
  var area = typeof getArea === "function" && getArea();

  if (area) {
    var areaStyles = area.getStyles();

    if (areaStyles) {
      return parseFloat(areaStyles.fontSize);
    }
  }

  return defaultSize;
};

var getSizes = function getSizes(sizes, defaultFontSize) {
  var result = [];
  var addedDefaultFontSize = false;
  sizes.forEach(function (size) {
    // lower sizes then default push into sizes
    if (size < defaultFontSize) {
      result.push(size);
    } // if size is already in the array, mark that default size is in the result array


    if (size === defaultFontSize) {
      addedDefaultFontSize = true;
    } // is size is greater then default size - for first time add default size into the array


    if (size >= defaultFontSize) {
      if (!addedDefaultFontSize) {
        addedDefaultFontSize = true;
        result.push(defaultFontSize);
      }

      result.push(size);
    }
  });

  if (!addedDefaultFontSize) {
    result.push(defaultFontSize);
  }

  return result;
};

var getItems = function getItems(getArea, toolbar) {
  var defaultFontSize = getDefaultFontSize(getArea, DEFAULT_SIZE);
  return getSizes(SIZES, defaultFontSize).map(function (size) {
    return {
      label: size.toString() + (size === defaultFontSize ? toolbar.getLsiItem(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Environment"].Lsi.RichText.plugins.fontSize.default) : ""),
      value: size === defaultFontSize ? "" : "fontSize:".concat(size, "px")
    };
  });
};

var pluginDef = immutable__WEBPACK_IMPORTED_MODULE_1___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_1___default.a.fromJS({
  name: PLUGIN_NAME,
  type: "inline",
  buttonDefs: [{
    name: "fontSize",
    icon: null,
    label: function label() {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Environment"].Lsi.RichText.plugins.fontSize.label;
    },
    styleName: PLUGIN_NAME,
    preserveStyle: true,
    props: {
      className: uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Css.css(".uu5-bricks-dropdown-menu-list { max-height: 250px; overflow-y: auto; }")
    },
    getProps: function getProps(editorState, getArea, toolbar) {
      var area = typeof getArea === "function" ? getArea() : undefined;
      var styles = editorState && area && area.getCurrentStylesWithPrefix(editorState, PLUGIN_NAME);
      return {
        label: styles && styles.length ? styles[0].replace("".concat(PLUGIN_NAME, ".fontSize:"), "").replace("px", "") : getDefaultFontSize(getArea, DEFAULT_SIZE).toString(),
        items: getItems(getArea, toolbar)
      };
    }
  }],
  toEditorItemDefs: {
    tagName: "UU5.Bricks.Span",
    htmlAliases: {
      tagName: "span",
      style: {
        fontSize: true
      }
    },
    style: {
      fontSize: true
    },
    prefix: PLUGIN_NAME
  },
  toObjectDefs: {
    prefix: PLUGIN_NAME,
    tagName: "UU5.Bricks.Span",
    style: {
      fontSize: "${1}"
    },
    order: 55
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 20 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_1__);


var PLUGIN_NAME = "index";
var SUB_STYLE_NAME = PLUGIN_NAME + ".sub";
var SUPER_STYLE_NAME = PLUGIN_NAME + ".super";
var pluginDef = immutable__WEBPACK_IMPORTED_MODULE_1___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_1___default.a.fromJS({
  name: PLUGIN_NAME,
  type: "inline",
  buttonDefs: [{
    name: "sub",
    icon: "mdi-format-subscript",
    label: function label() {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.Lsi.RichText.plugins.index.subscriptLabel;
    },
    value: SUB_STYLE_NAME
  }, {
    name: "sup",
    icon: "mdi-format-superscript",
    label: function label() {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.Lsi.RichText.plugins.index.superscriptLabel;
    },
    value: SUPER_STYLE_NAME
  }],
  toEditorItemDefs: [{
    name: SUB_STYLE_NAME,
    tagName: "UU5.Bricks.Span",
    htmlAliases: [{
      tagName: "sub"
    }, {
      tagName: "span",
      style: {
        verticalAlign: "sub",
        fontSize: "smaller"
      }
    }, {
      tagName: "span",
      style: {
        verticalAlign: "sub",
        fontSize: "0.8em"
      }
    }],
    style: {
      verticalAlign: "sub",
      fontSize: "0.8em"
    },
    styleFn: function styleFn(styleObj) {
      if (styleObj.fontSize) {
        var parts = styleObj.fontSize.match(/([0-9.]+)(.*)/);

        if (parts) {
          return {
            fontSize: parseFloat(parts[1]) * 0.8 + parts[2],
            verticalAlign: "sub"
          };
        }
      }

      return {
        fontSize: "0.8em",
        verticalAlign: "sub"
      };
    }
  }, {
    name: SUB_STYLE_NAME,
    tagName: "UU5.Bricks.Span",
    style: {
      verticalAlign: "sub",
      fontSize: "smaller"
    },
    skipToObjectRule: true
  }, {
    name: SUPER_STYLE_NAME,
    tagName: "UU5.Bricks.Span",
    htmlAliases: [{
      tagName: "sup"
    }, {
      tagName: "span",
      style: {
        verticalAlign: "super",
        fontSize: "smaller"
      }
    }, {
      tagName: "span",
      style: {
        verticalAlign: "super",
        fontSize: "0.8em"
      }
    }],
    style: {
      verticalAlign: "super",
      fontSize: "0.8em"
    },
    styleFn: function styleFn(styleObj) {
      if (styleObj.fontSize) {
        var parts = styleObj.fontSize.match(/([0-9.]+)(.*)/);

        if (parts) {
          return {
            fontSize: parseFloat(parts[1]) * 0.8 + parts[2],
            verticalAlign: "super"
          };
        }
      }

      return {
        fontSize: "0.8em",
        verticalAlign: "super"
      };
    }
  }, {
    name: SUPER_STYLE_NAME,
    tagName: "UU5.Bricks.Span",
    style: {
      verticalAlign: "super",
      fontSize: "smaller"
    },
    skipToObjectRule: true
  }]
}));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 21 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_1__);


var PLUGIN_NAME = "italic";
var STYLE_NAME = "ITALIC"; // needed to be bold to reuse standard shortcut CTRL + B defined by draft js

var pluginDef = immutable__WEBPACK_IMPORTED_MODULE_1___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_1___default.a.fromJS({
  name: PLUGIN_NAME,
  type: "inline",
  buttonDefs: {
    name: "italic",
    icon: "mdi-format-italic",
    label: function label() {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.Lsi.RichText.plugins.italic.label;
    },
    value: STYLE_NAME
  },
  toEditorItemDefs: [{
    name: STYLE_NAME,
    tagName: "UU5.Bricks.Em",
    htmlAliases: [{
      tagName: "i"
    }, {
      tagName: "em"
    }, {
      tagName: "span",
      style: {
        fontStyle: "italic"
      }
    }]
  }, {
    tagName: "UU5.Bricks.Span",
    style: {
      fontStyle: "italic"
    },
    name: STYLE_NAME
  }, {
    name: STYLE_NAME,
    tagName: "i"
  }, {
    name: STYLE_NAME,
    tagName: "em"
  }],
  toObjectDefs: {
    name: STYLE_NAME,
    type: "inline",
    tagName: "i"
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 22 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_1__);


var pluginDef = immutable__WEBPACK_IMPORTED_MODULE_1___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_1___default.a.fromJS({
  name: "strike",
  type: "inline",
  buttonDefs: {
    name: "strike",
    icon: "mdi-format-strikethrough",
    label: function label() {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.Lsi.RichText.plugins.strike.label;
    }
  },
  toEditorItemDefs: [{
    tagName: "UU5.Bricks.S",
    htmlAliases: [{
      tagName: "s"
    }, {
      tagName: "del"
    }, {
      tagName: "span",
      style: {
        textDecoration: /line-through/
      }
    }]
  }, {
    tagName: "UU5.Bricks.Span",
    style: {
      textDecoration: "line-through"
    }
  }, {
    tagName: "s"
  }, {
    tagName: "strike"
  }, {
    tagName: "del"
  }],
  toObjectDefs: {
    type: "inline",
    tagName: "s"
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 23 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_1__);


var PLUGIN_NAME = "underline";
var STYLE_NAME = "UNDERLINE";
var pluginDef = immutable__WEBPACK_IMPORTED_MODULE_1___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_1___default.a.fromJS({
  name: PLUGIN_NAME,
  type: "inline",
  buttonDefs: {
    name: "underline",
    icon: "mdi-format-underline",
    label: function label() {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.Lsi.RichText.plugins.underline.label;
    },
    value: STYLE_NAME
  },
  toEditorItemDefs: [{
    name: STYLE_NAME,
    tagName: "UU5.Bricks.U",
    htmlAliases: [{
      tagName: "span",
      style: {
        textDecoration: /underline/
      }
    }, {
      tagName: "u"
    }]
  }, {
    name: STYLE_NAME,
    tagName: "UU5.Bricks.Span",
    style: {
      textDecoration: "underline"
    }
  }, {
    name: STYLE_NAME,
    tagName: "u"
  }],
  toObjectDefs: {
    name: STYLE_NAME,
    type: "inline",
    tagName: "u"
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 24 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_1__);


var PLUGIN_NAME = "removeFormat";
var pluginDef = immutable__WEBPACK_IMPORTED_MODULE_1___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_1___default.a.fromJS({
  name: PLUGIN_NAME,
  buttonDefs: {
    name: "removeFormat",
    icon: "mdi-format-clear",
    label: function label() {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.Lsi.RichText.plugins.removeFormat.label;
    },
    onClick: function onClick(editorState, area) {
      var newEditorState = editorState;

      if (!newEditorState.getSelection().isCollapsed()) {
        // remove style prop from block data
        var blockKeys = [];
        var blocks = newEditorState.getCurrentContent().getBlocksAsArray();
        var selection = newEditorState.getSelection();
        var before = true; // get keys of alll fully selected blocks

        for (var i = 0; i < blocks.length; i++) {
          var block = blocks[i];
          var blockKey = block.getKey();

          if (before && blockKey === selection.getStartKey()) {
            // mark that we are inside selection
            before = false; // if block is not selected from begining do not add this block's key into array

            if (selection.getStartOffset() > 0) {
              continue;
            }
          } // skip blocks before selection


          if (before) continue;

          if (blockKey === selection.getEndKey()) {
            if (block.getText().length === selection.getEndOffset()) {
              // last block is also fully selected => add it to the array of block keys
              blockKeys.push(blockKey);
            }

            break;
          } // store keys of block which are fully selected


          blockKeys.push(blockKey);
        }

        var newContent = newEditorState.getCurrentContent();
        blockKeys.forEach(function (key) {
          newContent = newContent.deleteIn(["blockMap", key, "data", "props", "style"]);
        });
        newEditorState = area.modifyEditorState(newEditorState, {
          currentContent: newContent
        });
      }

      return area.removeInlineStyle(newEditorState, "*");
    },
    isSelected: function isSelected() {
      return false;
    }
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 25 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_1__);


var PLUGIN_NAME = "textAlign";
var NAMES = {
  left: "textAlignLeft",
  center: "textAlignCenter",
  right: "textAlignRight",
  all: "textAlign"
};
var ICONS = {
  left: "mdi-format-align-left",
  center: "mdi-format-align-center",
  right: "mdi-format-align-right",
  default: "mdi-format-align-left"
};

var getAlignIcon = function getAlignIcon(editorState) {
  if (!editorState) return;
  var selection = editorState.getSelection();
  var currentContent = editorState.getCurrentContent();
  var block = currentContent.getBlockForKey(selection.getStartKey());
  var data = block.getData().toJSON();
  var align = data.props && data.props.style && data.props.style.textAlign;
  return {
    icon: ICONS[align] || ICONS.default
  };
};

var _isSelected = function isSelected(editorState, direction) {
  var selection = editorState.getSelection();
  var currentContent = editorState.getCurrentContent();
  var block = currentContent.getBlockForKey(selection.getStartKey());
  var data = block.getData().toJSON();
  return data.props && data.props.style && data.props.style.textAlign === direction;
};

var getAlignButtonDef = function getAlignButtonDef(align) {
  return {
    name: NAMES[align],
    icon: ICONS[align],
    label: function label() {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.Lsi.RichText.plugins.textAlign.label[align];
    },
    onClick: function onClick(editorState, area) {
      return area.toggleSelectedBlocksStyles(editorState, [{
        name: "textAlign",
        value: align
      }]);
    },
    isSelected: function isSelected(editorState) {
      return _isSelected(editorState, align);
    }
  };
};

var buttons = [getAlignButtonDef("left"), getAlignButtonDef("center"), getAlignButtonDef("right"), undefined];
buttons[3] = {
  name: NAMES.all,
  icon: "mdi-format-align-left",
  items: [buttons[0], buttons[1], buttons[2]],
  label: function label() {
    return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.Lsi.RichText.plugins.textAlign.label.all;
  },
  getProps: getAlignIcon
};
var pluginDef = immutable__WEBPACK_IMPORTED_MODULE_1___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_1___default.a.fromJS({
  name: PLUGIN_NAME,
  buttonDefs: buttons,
  opts: {
    htmlMappings: {
      tagName: true,
      style: {
        textAlign: true
      },
      result: {
        style: {
          textAlign: true
        }
      }
    }
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 26 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_1__);
/* eslint-disable no-unreachable */


var PLUGIN_NAME = "blockIndent";
var MAX_LEVEL = 10;
var STEP = 8;

var isListItem = function isListItem(block) {
  return block.type === "ordered-list-item" || block.type === "unordered-list-item";
};

var isValidListUpdate = function isValidListUpdate(block, prevBlock, direction) {
  if (isListItem(prevBlock)) {
    return direction < 0 ? block.depth + direction >= 0 : block.depth + direction - prevBlock.depth <= 1;
  }
};

var handleTabShiftKey = function handleTabShiftKey(editorState, area) {
  return handleTabKey(editorState, area, true);
};

var handleTabKey = function handleTabKey(editorState, area) {
  var shiftKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  // remove last list item if is empty and user press enter key
  var selection = editorState.getSelection();
  var content = editorState.getCurrentContent();
  var block = content.getBlockForKey(selection.getStartKey());

  if (isListItem(block)) {
    var prevBlock = content.getBlockBefore(block.getKey());

    if (prevBlock && isValidListUpdate(block, prevBlock, shiftKey ? -1 : 1)) {
      area.setEditorState(indent(editorState, area, shiftKey ? -1 : 1));
    }

    return true;
  }

  return false;
};

var indent = function indent(editorState, area, direction) {
  // block updates of list items if first item cannot be updated
  var blockListUpdates = false;
  var isListUpdate = undefined;
  var notListEditorState = editorState; // need to update selection to contain all nested list items ( at the end of update is needed to set back original selection )

  var selection = editorState.getSelection();
  var newEditorState;
  var blocks = editorState.getCurrentContent().getBlocksAsArray();
  var lastSelectedBlockKey = selection.getEndKey();
  var lastBSelectedBlockIndex = blocks.findIndex(function (block) {
    return block.getKey() === lastSelectedBlockKey;
  });
  var lastSelectedBlock = blocks[lastBSelectedBlockIndex]; // check if last selected item is list item

  if (isListItem(lastSelectedBlock)) {
    var i; // find all nested list items and select them to apply TAB on them

    for (i = lastBSelectedBlockIndex + 1; i < blocks.length; i++) {
      if (isListItem(blocks[i]) && blocks[i].depth > lastSelectedBlock.depth) {
        continue;
      } else {
        break;
      }
    }

    var lastListItemKey = blocks[i - 1].getKey();

    if (lastSelectedBlockKey !== lastListItemKey) {
      // update selection
      newEditorState = area.updateSelection(editorState, {
        endKey: lastListItemKey,
        endOffset: blocks[i - 1].getText().length
      });
    }
  }

  var listEditorState = area.updateSelectedBlocks(newEditorState || editorState, function (block, index, blocks) {
    // remember if first selected item is block or list item => doesn't update list if selection starts before it and vice versa
    if (isListUpdate === undefined) {
      isListUpdate = isListItem(block);
    } // udpate selected block


    if (isListItem(block)) {
      // check if selection starts in list
      if (!isListUpdate) {
        return;
      } // cannot change level of first block


      if (index === 0 || blockListUpdates || !isValidListUpdate(block, blocks[index - 1], direction)) {
        // block all other updates of block level
        blockListUpdates = true;
        return;
      }

      return block.set("depth", block.depth + direction);
    } else {
      // check if selection doesn't start in a list
      if (isListUpdate) {
        return;
      } // update editor state


      notListEditorState = area.toggleBlockStyles(notListEditorState, block, undefined, function (style) {
        // update margin left style
        var marginLeft = style.marginLeft;
        marginLeft = marginLeft && parseInt(marginLeft) || 0; // check validity of set another step

        if (!marginLeft && direction === -1 || marginLeft >= MAX_LEVEL * STEP && direction === 1) {
          return;
        } // add step


        marginLeft = Math.min(Math.max(0, marginLeft + direction * STEP), MAX_LEVEL * STEP);

        if (marginLeft === 0) {
          delete style.marginLeft;
        } else {
          style.marginLeft = marginLeft + "px";
        }

        return style;
      }); // chenges of content is handled by toggleBlockStyle function

      return null;
    }
  }); // set back original selecection

  return isListUpdate ? area.updateSelection(listEditorState, {
    startKey: selection.getStartKey(),
    startOffset: selection.getStartOffset(),
    endKey: selection.getEndKey(),
    endOffset: selection.getEndOffset()
  }) : notListEditorState;
};

var _isDisabled = function isDisabled(editorState, direction) {
  var selection = editorState.getSelection();
  var currentContent = editorState.getCurrentContent();
  var block = currentContent.getBlockForKey(selection.getStartKey());

  if (isListItem(block)) {
    var blocks = currentContent.getBlocksAsArray();
    var index = blocks.findIndex(function (item) {
      return item === block;
    }); // cannot change depth of first item in the block

    if (index === 0) return false;
    var prevBlock = blocks[index - 1];
    return !isValidListUpdate(block, prevBlock, direction);
  } else {
    var data = block.getData().toJSON();
    var style = data.props && data.props.style || {};

    if (direction === -1) {
      return !style.marginLeft || parseInt(style.marginLeft) <= 0;
    } else {
      return style.marginLeft && parseInt(style.marginLeft) >= MAX_LEVEL * STEP;
    }
  }
};

var pluginDef = immutable__WEBPACK_IMPORTED_MODULE_1___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_1___default.a.fromJS({
  name: PLUGIN_NAME,
  type: "custom",
  buttonDefs: [{
    name: "blockIndentIncrease",
    icon: "mdi-format-indent-increase",
    label: function label() {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.Lsi.RichText.plugins.blockIndent.increaseIndentLabel;
    },
    onClick: function onClick(editorState, area) {
      return indent(editorState, area, 1);
    },
    isSelected: function isSelected() {
      return false;
    },
    isDisabled: function isDisabled(editorState) {
      return _isDisabled(editorState, 1);
    }
  }, {
    name: "blockIndentDecrease",
    icon: "mdi-format-indent-decrease",
    label: function label() {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.Lsi.RichText.plugins.blockIndent.decreaseIndentLabel;
    },
    onClick: function onClick(editorState, area) {
      return indent(editorState, area, -1);
    },
    isSelected: function isSelected() {
      return false;
    },
    isDisabled: function isDisabled(editorState) {
      return _isDisabled(editorState, -1);
    }
  }],
  commands: [{
    keyCode: 9,
    fn: handleTabKey
  }, {
    keyCode: 9,
    shiftKey: true,
    fn: handleTabShiftKey
  }],
  opts: {
    htmlMappings: {
      tagName: true,
      style: {
        marginLeft: true
      },
      result: {
        style: {
          marginLeft: true
        }
      }
    }
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 27 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _editor_block_lazy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(28);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _internal_list_wrapper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(32);
/* harmony import */ var _environment_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(33);




 // const listWrapper = <ListWrapper />;

_environment_js__WEBPACK_IMPORTED_MODULE_4__["default"].wrapperMap = _environment_js__WEBPACK_IMPORTED_MODULE_4__["default"].wrapperMap || {};
_environment_js__WEBPACK_IMPORTED_MODULE_4__["default"].wrapperMap.uu5listWrapper = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(_internal_list_wrapper_js__WEBPACK_IMPORTED_MODULE_3__["default"], null);
var PLUGIN_NAME = "list";
var OL_NAME = "ordered-list-item";
var UL_NAME = "unordered-list-item";
var OL_TAG_NAME = "UU5.Bricks.Ol";
var UL_TAG_NAME = "UU5.Bricks.Ul";
var pluginDef = immutable__WEBPACK_IMPORTED_MODULE_2___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_2___default.a.fromJS({
  name: PLUGIN_NAME,
  type: "block",
  buttonDefs: [{
    name: "ol",
    icon: "mdi-format-list-numbers",
    label: function label() {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.Lsi.RichText.plugins.list.orderedListLabel;
    },
    type: "block",
    value: OL_NAME
  }, {
    name: "ul",
    icon: "mdi-format-list-bulleted-type",
    label: function label() {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.Lsi.RichText.plugins.list.unorderedListLabel;
    },
    type: "block",
    value: UL_NAME
  }],
  toEditorItemDefs: [{
    name: UL_TAG_NAME,
    tagName: UL_TAG_NAME,
    type: "wrapper",
    htmlAliases: [{
      tagName: "ul"
    }]
  }, {
    name: OL_TAG_NAME,
    tagName: OL_TAG_NAME,
    type: "wrapper",
    htmlAliases: [{
      tagName: "ol"
    }]
  }, {
    name: OL_NAME,
    tagName: "UU5.Bricks.Li",
    component: function component(props) {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(_editor_block_lazy_js__WEBPACK_IMPORTED_MODULE_1__["default"], props);
    },
    wrapperName: "uu5listWrapper",
    wrapperTagName: OL_TAG_NAME,
    htmlAliases: [{
      tagName: "li"
    }]
  }, {
    name: UL_NAME,
    tagName: "UU5.Bricks.Li",
    component: function component(props) {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(_editor_block_lazy_js__WEBPACK_IMPORTED_MODULE_1__["default"], props);
    },
    wrapperName: "uu5listWrapper",
    wrapperTagName: UL_TAG_NAME
  }],
  commands: {
    keyCode: 13,
    fn: function fn(editorState, area) {
      // remove last list item if is empty and user press enter key
      var selection = editorState.getSelection();
      if (!selection.isCollapsed()) return true;
      var content = editorState.getCurrentContent();
      var block = content.getBlockForKey(selection.getStartKey());

      if ((block.getType() === OL_NAME || block.getType() === UL_NAME) && !block.getText()) {
        var nextBlock = content.getBlockAfter(block.getKey());

        if (!nextBlock || nextBlock.getType() !== block.getType()) {
          // toggle block type only if it is last list item
          var depth = block.getDepth();

          if (depth) {
            area.setEditorState(area.modifyEditorState(editorState, {
              currentContent: content.setIn(["blockMap", block.getKey(), "depth"], depth - 1)
            }, "list depth"));
          } else {
            area.setEditorState(area.toggleBlock(editorState, block.getType()));
          }

          return true;
        }
      }

      return false;
    }
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 28 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditorBlockLazy", function() { return EditorBlockLazy; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _internal_suspense_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(29);
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

//@@viewOn:imports


var EditorBlock = Object(_internal_suspense_js__WEBPACK_IMPORTED_MODULE_1__["lazy"])(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(__webpack_require__(30));
  });
}); //@@viewOff:imports

var EditorBlockLazy = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.VisualComponent.create({
  displayName: "UU5.RichText.BlockLazy",
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.BaseMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    tagName: "UU5.RichText.BlockLazy",
    getDerivedStateFromError: function getDerivedStateFromError(error) {
      return {
        error: error
      };
    },
    opt: {
      hoc: true
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  //@@viewOff:getDefaultProps
  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    return {
      error: null
    };
  },
  //@@viewOff:standardComponentLifeCycle
  //@@viewOn:interface
  //@@viewOff:interface
  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods
  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers
  //@@viewOn:render
  render: function render() {
    var error = this.state.error;
    return error ? uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Error, {
      error: error,
      content: "EditorBlock failed to render.",
      moreInfo: true
    }) : uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(_internal_suspense_js__WEBPACK_IMPORTED_MODULE_1__["Suspense"], {
      fallback: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.Loading, null)
    }, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(EditorBlock, this.props));
  } //@@viewOff:render

});
/* harmony default export */ __webpack_exports__["default"] = (EditorBlockLazy);

/***/ }),
/* 29 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Suspense", function() { return Suspense; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lazy", function() { return lazy; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/**
 * Copyright (C) 2019 Unicorn a.s.
 *
 * This program is free software; you can use it under the terms of the UAF Open License v01 or
 * any later version. The text of the license is available in the file LICENSE or at www.unicorn.com.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See LICENSE for more details.
 *
 * You may contact Unicorn a.s. at address: V Kapslovne 2767/2, Praha 3, Czech Republic or
 * at the email: info@unicorn.com.
 */

var LazyContext = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Context.create({
  loading: ""
});
var Suspense = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Suspense || function (props) {
  return (// eslint-disable-next-line react/prop-types
    uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(LazyContext.Provider, {
      value: {
        loading: props.fallback
      }
    }, props.children)
  );
};
var LazyComponent = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.VisualComponent.create({
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.BaseMixin],
  statics: {
    getDerivedStateFromError: function getDerivedStateFromError(error) {
      return {
        error: error
      };
    },
    opt: {
      hoc: true
    }
  },
  propTypes: {
    importFn: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.func.isRequired,
    loading: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.node,
    fallback: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.node,
    props: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.object
  },
  getDefaultProps: function getDefaultProps() {
    return {
      importFn: null,
      loading: null,
      fallback: null,
      props: null
    };
  },
  getInitialState: function getInitialState() {
    return {
      error: null,
      component: null
    };
  },
  componentDidMount: function componentDidMount() {
    var _this = this;

    this.props.importFn().then(function (_ref) {
      var result = _ref.result,
          error = _ref.error;
      !_this._isUnmounted && _this.setState({
        component: result && result.default,
        error: error
      });
    });
  },
  componentWillUnmount: function componentWillUnmount() {
    this._isUnmounted = true;
  },
  render: function render() {
    return this.state.component ? uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(this.state.component, this.props.props) : this.props.loading || this.props.fallback;
  }
});
var lazy = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Component.lazy || function (importFn) {
  var importFnPromise;

  var usedImportFn = function usedImportFn() {
    // call importFn at most once
    if (!importFnPromise) {
      importFnPromise = importFn().then(function (result) {
        return {
          result: result,
          error: null
        };
      }, function (error) {
        console.error(error);
        return {
          result: null,
          error: error
        };
      });
    }

    return importFnPromise;
  };

  return function (props) {
    return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(LazyContext.Consumer, null, function (_ref2) {
      var loading = _ref2.loading;
      return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(LazyComponent, {
        loading: loading,
        importFn: usedImportFn,
        props: props
      });
    });
  };
};
/* harmony default export */ __webpack_exports__["default"] = ({
  Suspense: Suspense,
  lazy: lazy
});

/***/ }),
/* 30 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var draft_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(31);
/* harmony import */ var draft_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(draft_js__WEBPACK_IMPORTED_MODULE_0__);

/* harmony default export */ __webpack_exports__["default"] = (draft_js__WEBPACK_IMPORTED_MODULE_0__["EditorBlock"]);

/***/ }),
/* 31 */
/***/ (function(module, exports) {

module.exports = require("draft-js");

/***/ }),
/* 32 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(11);
/* harmony import */ var uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1__);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n        .uu5-bricks-li > span {\n          display: block;\n        }\n      "]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

//@@viewOn:imports

 //@@viewOff:imports

var ListWrapper = uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].VisualComponent.create({
  displayName: "UU5.RichText.ListWrapper",
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].BaseMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    tagName: "UU5.RichText.ListWrapper",
    classNames: {
      main: window.navigator.userAgent.match("Firefox") ? uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Css.css(_templateObject()) : undefined
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  propTypes: {
    getBlockData: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].func
  },
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  //@@viewOff:getDefaultProps
  //@@viewOn:reactLifeCycle
  //@@viewOff:reactLifeCycle
  //@@viewOn:interface
  //@@viewOff:interface
  //@@viewOn:overriding
  //@@viewOff:overriding
  //@@viewOn:private
  _renderInnerListItems: function _renderInnerListItems(listDepth) {
    var result = []; // get list type from first item

    var listType = this.props.children[this._index].props.children.props.block.getType();

    while (this._index < this.props.children.length) {
      var child = this.props.children[this._index];
      var block = child.props.children.props.block;
      var depth = block.getDepth();
      var type = block.getType(); // current node is in lower depth then list - end current list

      if (depth < listDepth) {
        break;
      } // current node is in higher depth then list - add inner list as list item


      if (depth > listDepth) {
        result.push(this._renderInnerList()); // index is on the first unprocessed item

        continue;
      } // check type change in depth 0 - in other depths this should not happen


      if (listDepth === 0 && type !== listType) {
        break;
      } // mark list item as processed


      this._index++;
      var nextList = null;
      var nextItem = this._index < this.props.children.length ? this.props.children[this._index] : null;

      if (nextItem && nextItem.props.children.props.block.getDepth() > depth) {
        nextList = this._renderInnerList();
      }

      result.push(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Li, {
        id: block.getKey(),
        key: block.getKey()
      }, child, nextList));
    }

    return result;
  },
  _renderInnerList: function _renderInnerList() {
    var firstChild = this.props.children[this._index];
    var _firstChild$props$chi = firstChild.props.children.props,
        block = _firstChild$props$chi.block,
        blockProps = _firstChild$props$chi.blockProps;
    blockProps = blockProps || {};
    var depth = block.getDepth();
    var type = block.getType();

    if (type === "ordered-list-item") {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Ol, _extends({}, blockProps, {
        id: block.getKey(),
        key: block.getKey(),
        className: this.getClassName("main")
      }), this._renderInnerListItems(depth));
    } else {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Ul, _extends({}, blockProps, {
        id: block.getKey(),
        key: block.getKey(),
        className: this.getClassName("main")
      }), this._renderInnerListItems(depth));
    }
  },
  //@@viewOff:private
  //@@viewOn:render
  render: function render() {
    var result = [];
    this._index = 0;

    while (this._index < this.props.children.length) {
      result.push(this._renderInnerList());
    }

    return result;
  } //@@viewOff:render

});
/* harmony default export */ __webpack_exports__["default"] = (ListWrapper);

/***/ }),
/* 33 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Environment", function() { return Environment; });
var Environment = {};
/* harmony default export */ __webpack_exports__["default"] = (Environment);

/***/ }),
/* 34 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _editor_block_lazy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(28);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }




var PLUGIN_NAME = "paragraph";
var pluginDef = immutable__WEBPACK_IMPORTED_MODULE_1___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_1___default.a.fromJS({
  name: PLUGIN_NAME,
  type: "block",
  toEditorItemDefs: {
    name: "paragraph",
    tagName: "UU5.Bricks.Paragraph",
    component: function component(properties) {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Div, _extends({}, properties.blockProps, {
        className: "uu5-bricks-paragraph " + (properties.blockProps.className || "")
      }), uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(_editor_block_lazy_js__WEBPACK_IMPORTED_MODULE_2__["default"], properties));
    }
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 35 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _editor_block_lazy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(28);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }




var PLUGIN_NAME = "p";
var pluginDef = immutable__WEBPACK_IMPORTED_MODULE_1___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_1___default.a.fromJS({
  name: PLUGIN_NAME,
  type: "block",
  buttonDefs: {
    name: "paragraph",
    icon: "mdi-format-paragraph",
    label: function label() {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Environment"].Lsi.RichText.plugins.p.label;
    }
  },
  toEditorItemDefs: {
    tagName: "UU5.Bricks.P",
    component: function component(properties) {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Div, _extends({}, properties.blockProps, {
        className: "uu5-bricks-paragraph " + (properties.blockProps.className || "")
      }), uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(_editor_block_lazy_js__WEBPACK_IMPORTED_MODULE_2__["default"], properties));
    },
    htmlAliases: [{
      tagName: "p",
      style: true
    }, {
      tagName: "div",
      className: /uu5-bricks-paragraph/,
      style: true
    }]
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 36 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _editor_block_lazy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(28);



var PLUGIN_NAME = "unstyled";
var BR_TAG_NAME = "br";

var toObject = function toObject(type, name, props, wrapper, wrapperProps, isEmpty) {
  if (type === "block" && name === PLUGIN_NAME) {
    if (isEmpty) {
      return {
        tag: this.brTagName,
        isSelfClosed: true
      };
    } else {
      return {
        tag: this.tagName,
        props: props
      };
    }
  }
};

var pluginDef = immutable__WEBPACK_IMPORTED_MODULE_1___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_1___default.a.fromJS({
  name: PLUGIN_NAME,
  type: "block",
  toEditorItemDefs: [{
    name: PLUGIN_NAME,
    tagName: "UU5.Bricks.Div",
    component: function component(properties) {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Div, properties.blockProps, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(_editor_block_lazy_js__WEBPACK_IMPORTED_MODULE_2__["default"], properties));
    },
    element: "div",
    htmlAliases: [{
      tagName: "div",
      className: /uu5-common-div/,
      style: true,
      order: 1
    }]
  }, {
    name: PLUGIN_NAME,
    tagName: BR_TAG_NAME,
    htmlAliases: [{
      tagName: "br"
    }]
  }],
  toObjectDefs: {
    name: PLUGIN_NAME,
    tagName: "UU5.Bricks.Div",
    brTagName: BR_TAG_NAME,
    fn: toObject
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 37 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_1__);


var PLUGIN_NAME = "code";
var pluginDef = immutable__WEBPACK_IMPORTED_MODULE_1___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_1___default.a.fromJS({
  name: PLUGIN_NAME,
  type: "entity",
  buttonDefs: {
    name: "code",
    icon: "mdi-code-tags",
    label: function label() {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Environment"].Lsi.RichText.plugins.code.label;
    }
  },
  toEditorItemDefs: {
    tagName: "UU5.Bricks.Code",
    htmlAliases: [{
      tagName: "code"
    }, {
      tagName: "span",
      style: {
        color: "rgb(211, 47, 47)",
        fontFamily: "monospace, monospace",
        backgroundColor: "rgb(255, 235, 238)"
      }
    }],
    component: function component(properties) {
      var dataProps = properties.contentState.getEntity(properties.entityKey).getData();
      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Code, dataProps, properties.children);
    }
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 38 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g04_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(39);
/* harmony import */ var uu5g04_forms__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g04_forms__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _internal_icon_button_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(40);




var PLUGIN_NAME = "icon";
var pluginDef = immutable__WEBPACK_IMPORTED_MODULE_2___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_2___default.a.fromJS({
  name: PLUGIN_NAME,
  type: "entity",
  buttonDefs: {
    name: "icon",
    icon: "mdi-emoticon-outline",
    label: function label() {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Environment"].Lsi.RichText.plugins.icon.label;
    },
    type: "custom",
    value: PLUGIN_NAME,
    button: _internal_icon_button_js__WEBPACK_IMPORTED_MODULE_3__["default"]
  },
  toEditorItemDefs: {
    name: PLUGIN_NAME,
    tagName: "UU5.Bricks.Icon",
    fn: function fn(tagName, props) {
      return {
        type: PLUGIN_NAME,
        display: "entity",
        children: ["\u200B"],
        props: props
      };
    },
    htmlAliases: [{
      tagName: "span",
      className: /uu5-bricks-icon/,
      result: function result(comp) {
        if (!comp.props.className) {
          return null;
        }

        var classNames = comp.props.className.split(/\s+/);
        var possibleIconNames = classNames.filter(function (className) {
          return className.indexOf("-") !== -1;
        });

        if (possibleIconNames.length === 0) {
          return null;
        }

        var iconClass;

        var _loop = function _loop(pIndex) {
          var prefix = possibleIconNames[pIndex].split("-")[0];
          iconClass = classNames.find(function (className) {
            return className === prefix;
          });

          if (iconClass) {
            // in icon class is founded prefix - set current class as a icon's name
            iconClass = possibleIconNames[pIndex];
            return "break";
          }
        };

        for (var pIndex = 0; pIndex < possibleIconNames.length; pIndex++) {
          var _ret = _loop(pIndex);

          if (_ret === "break") break;
        } // cannot find value of icon prop


        if (!iconClass) {
          return null;
        }

        return {
          tagName: "UU5.Bricks.Icon",
          props: {
            icon: iconClass
          }
        };
      },
      final: true
    }],
    component: function component(properties) {
      var dataProps = properties.contentState.getEntity(properties.entityKey).getData();
      var iconProps = (dataProps || {}).props || {};
      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Icon, iconProps, properties.children);
    }
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 39 */
/***/ (function(module, exports) {

module.exports = require("uu5g04-forms");

/***/ }),
/* 40 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(11);
/* harmony import */ var uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var uu5g04_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(39);
/* harmony import */ var uu5g04_forms__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(uu5g04_forms__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _icon_button_less__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(41);
/* harmony import */ var _icon_button_less__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_icon_button_less__WEBPACK_IMPORTED_MODULE_3__);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

//@@viewOn:imports



 //@@viewOff:imports

var stopEvent = function stopEvent(e) {
  return e.stopPropagation();
};

var IconButton = uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].VisualComponent.create({
  displayName: "UU5.RichText.IconButton",
  tagName: "UU5.RichText.IconButton",
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].BaseMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].ElementaryMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].ColorSchemaMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    classNames: {
      main: "uu5-richtext-plugin-icon-picker uu5-bricks-button"
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  propTypes: {
    getArea: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].func.isRequired,
    icon: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string,
    ruleName: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string,
    onUpload: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].func,
    baseline: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].bool,
    dropdownItem: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].bool
  },
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      getArea: undefined,
      baseline: undefined,
      dropdownItem: false
    };
  },
  //@@viewOff:getDefaultProps
  //@@viewOn:reactLifeCycle
  //@@viewOff:reactLifeCycle
  //@@viewOn:interface
  //@@viewOff:interface
  //@@viewOn:overriding
  //@@viewOff:overriding
  //@@viewOn:private
  _iconUpdate: function _iconUpdate(opt) {
    var _this = this;

    var area = this.props.getArea();

    if (area) {
      area.setReadOnly(false, function () {
        var newEditorState = area.selectCurrentEntity(area.getEditorState(), "icon");
        area.createEntity(newEditorState, undefined, "icon", undefined, {
          props: {
            icon: opt.value
          }
        }, false);

        _this._onPickerClose();
      });
    }

    return opt.component.onChangeDefault(opt);
  },
  _onMouseDown: function _onMouseDown(e) {
    var _this2 = this;

    e.preventDefault();
    var area = this.props.getArea();

    if (area && this._picker) {
      if (this._picker.isOpen()) {
        this._picker.close(this._onPickerClose);
      } else {
        area.setReadOnly(true, function () {
          return _this2._picker.open();
        });

        this._onPickerOpen();
      }
    }
  },
  _registerPicker: function _registerPicker(picker) {
    this._picker = picker;
  },
  // workaround to prevent block richtext from editting ... remove after implement onClose on IconPicker
  _onPickerOpen: function _onPickerOpen() {
    var _this3 = this;

    uu5g04__WEBPACK_IMPORTED_MODULE_0__["Environment"].EventListener.addWindowEvent("click", this.getId(), function () {
      setTimeout(function () {
        if (!_this3._picker || !_this3._picker.isOpen()) {
          _this3._onPickerClose();
        }
      }, 10);
    });
  },
  _onPickerClose: function _onPickerClose() {
    var area = this.props.getArea();

    if (area) {
      area.setReadOnly(false, area.focus);
    }

    uu5g04__WEBPACK_IMPORTED_MODULE_0__["Environment"].EventListener.removeWindowEvent("click", this.getId());
  },
  //@@viewOff:private
  //@@viewOn:render
  render: function render() {
    var mainProps = this.getMainPropsToPass();

    if (this.props.baseline) {
      mainProps.className += " uu5-bricks-button-baseline";
    }

    mainProps.mainAttrs = mainProps.mainAttrs || {};
    mainProps.mainAttrs.onClick = stopEvent;
    mainProps.mainAttrs.onMouseDown = stopEvent;
    return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Div, mainProps, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Forms"].Iconpicker, _extends({}, this.props, {
      ref_: this._registerPicker,
      openToContent: false,
      label: undefined,
      value: this.props.icon,
      className: "uu5-richtext-toolbar-iconpicker",
      onChange: this._iconUpdate,
      colorSchema: this.props.colorSchema // eslint-disable-line react/prop-types
      ,
      spacing: 0,
      mainAttrs: {
        "data-richtext-iconpicker-label": this.props.dropdownItem && this.props.label // eslint-disable-line react/prop-types

      },
      inputAttrs: {
        tabIndex: -1
      }
    })), uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create("div", {
      onMouseDown: this._onMouseDown
    }));
  } //@@viewOff:render

});
/* harmony default export */ __webpack_exports__["default"] = (IconButton);

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(42);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":false}

options.transform = transform
options.insertInto = function anonymous(
) {
return __webpack_require__(15)();
};

var update = __webpack_require__(16)(content, options);

if(content.locals) module.exports = content.locals;



/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(14)(false);
// Module
exports.push([module.i, ".uu5-forms-iconpicker.uu5-richtext-toolbar-iconpicker {\n  display: inline-block;\n  margin: 0;\n  position: relative;\n  vertical-align: bottom;\n}\n.uu5-forms-iconpicker.uu5-richtext-toolbar-iconpicker .uu5-forms-input-wrapper > .uu5-forms-right-wrapper .uu5-forms-iconpicker-open-button {\n  border-radius: 0;\n}\n.uu5-forms-iconpicker.uu5-richtext-toolbar-iconpicker .uu5-forms-input-wrapper > .uu5-forms-right-wrapper .uu5-forms-iconpicker-open-button:not(.active):not(:hover) {\n  background: transparent;\n}\n.uu5-forms-iconpicker.uu5-richtext-toolbar-iconpicker .uu5-forms-input-wrapper > .uu5-forms-right-wrapper .uu5-forms-iconpicker-open-button.uu5-bricks-button-s {\n  width: 24px;\n}\n.uu5-forms-iconpicker.uu5-richtext-toolbar-iconpicker .uu5-forms-input-wrapper > .uu5-forms-right-wrapper .uu5-forms-iconpicker-open-button.uu5-bricks-button-s .uu5-forms-iconpicker-selected-icon {\n  padding: 5px;\n}\n.uu5-forms-iconpicker.uu5-richtext-toolbar-iconpicker .uu5-forms-input-wrapper > .uu5-forms-right-wrapper .uu5-forms-iconpicker-open-button.uu5-bricks-button-m {\n  width: 32px;\n}\n.uu5-forms-iconpicker.uu5-richtext-toolbar-iconpicker .uu5-forms-input-wrapper > .uu5-forms-right-wrapper .uu5-forms-iconpicker-open-button.uu5-bricks-button-m .uu5-forms-iconpicker-selected-icon {\n  padding: 6px;\n}\n.uu5-forms-iconpicker.uu5-richtext-toolbar-iconpicker .uu5-forms-input-wrapper > .uu5-forms-right-wrapper .uu5-forms-iconpicker-open-button.uu5-bricks-button-l {\n  width: 40px;\n}\n.uu5-forms-iconpicker.uu5-richtext-toolbar-iconpicker .uu5-forms-input-wrapper > .uu5-forms-right-wrapper .uu5-forms-iconpicker-open-button.uu5-bricks-button-l .uu5-forms-iconpicker-selected-icon {\n  padding: 7px;\n}\n.uu5-forms-iconpicker.uu5-richtext-toolbar-iconpicker .uu5-forms-input-wrapper > .uu5-forms-right-wrapper .uu5-forms-iconpicker-open-button.uu5-bricks-button-xl {\n  width: 48px;\n}\n.uu5-forms-iconpicker.uu5-richtext-toolbar-iconpicker .uu5-forms-input-wrapper > .uu5-forms-right-wrapper .uu5-forms-iconpicker-open-button.uu5-bricks-button-xl .uu5-forms-iconpicker-selected-icon {\n  padding: 7px;\n}\n.uu5-forms-iconpicker.uu5-richtext-toolbar-iconpicker .uu5-forms-iconpicker-arrow-down-icon {\n  display: none;\n}\n.uu5-forms-iconpicker.uu5-richtext-toolbar-iconpicker .uu5-forms-iconpicker-selected-icon {\n  position: relative;\n  line-height: 1em;\n}\n.uu5-forms-iconpicker.uu5-richtext-toolbar-iconpicker .uu5-forms-iconpicker-search-input .uu5-bricks-icon {\n  padding-right: 6px;\n  position: absolute;\n  right: 0;\n}\n.uu5-richtext-item-with-button .uu5-richtext-toolbar-iconpicker {\n  width: 100%;\n  height: 100%;\n}\n.uu5-richtext-item-with-button .uu5-richtext-toolbar-iconpicker.uu5-forms-iconpicker .uu5-forms-input-wrapper > .uu5-forms-right-wrapper .uu5-bricks-button {\n  width: 100%;\n  -webkit-box-pack: start;\n          justify-content: flex-start;\n}\n.uu5-richtext-item-with-button .uu5-richtext-toolbar-iconpicker::after {\n  content: attr(data-richtext-iconpicker-label);\n  position: absolute;\n  left: 38px;\n  line-height: 32px;\n  pointer-events: none;\n  top: 0;\n}\n.uu5-richtext-plugin-icon-picker {\n  position: relative;\n  display: -webkit-inline-box;\n  display: inline-flex;\n}\n.uu5-richtext-plugin-icon-picker.uu5-bricks-button.uu5-bricks-button.uu5-richtext-plugin-icon-picker {\n  padding: 0;\n}\n.uu5-richtext-plugin-icon-picker > div:last-child {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n", ""]);



/***/ }),
/* 43 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _internal_link_form_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(44);



var PLUGIN_NAME = "link";
var pluginDef = immutable__WEBPACK_IMPORTED_MODULE_1___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_1___default.a.fromJS({
  name: PLUGIN_NAME,
  type: "entity",
  buttonDefs: {
    icon: "mdi-earth",
    label: function label() {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Environment"].Lsi.RichText.plugins.link.label;
    }
  },
  toEditorItemDefs: {
    tagName: "UU5.Bricks.Link",
    component: function component(properties) {
      var dataProps = properties.contentState.getEntity(properties.entityKey).getData().props || {};
      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Link, dataProps, properties.children);
    },
    htmlAliases: [{
      tagName: "a"
    }],
    getEditationForm: function getEditationForm(entityName, text, data, onSave, onCancel, isEdit) {
      // plugin register only entity LINK so its not needed to check entity
      return {
        header: uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Lsi, {
          lsi: uu5g04__WEBPACK_IMPORTED_MODULE_0__["Environment"].Lsi.RichText.plugins.link[isEdit ? "editationFormHeader" : "addFormHeader"]
        }),
        content: uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(_internal_link_form_js__WEBPACK_IMPORTED_MODULE_2__["default"], {
          data: data,
          text: text,
          onSave: onSave,
          onCancel: onCancel
        }),
        disableBackdrop: true,
        isPopover: true
      };
    }
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 44 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(11);
/* harmony import */ var uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var uu5g04_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(39);
/* harmony import */ var uu5g04_forms__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(uu5g04_forms__WEBPACK_IMPORTED_MODULE_2__);
//@@viewOn:imports


 //@@viewOff:imports

var DEFAULT_VALUES = {
  href: "",
  target: "_self",
  download: false,
  smoothScroll: 1000,
  offset: 0
};
var LinkForm = uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].VisualComponent.create({
  displayName: "UU5.RichText.LinkForm",
  tagName: "UU5.RichText.LinkForm",
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].BaseMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    classNames: {
      main: "uu5-richtext-plugin-link-form"
    },
    lsi: function lsi() {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Environment"].Lsi.RichText.plugins.linkForm;
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  propTypes: {
    text: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string,
    data: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].object,
    onCancel: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].func,
    onSave: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].func
  },
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      text: "",
      data: {},
      onCancel: null,
      onSave: null
    };
  },
  //@@viewOff:getDefaultProps
  //@@viewOn:reactLifeCycle
  //@@viewOff:reactLifeCycle
  //@@viewOn:interface
  //@@viewOff:interface
  //@@viewOn:overriding
  //@@viewOff:overriding
  //@@viewOn:private
  _onSave: function _onSave(form) {
    if (!form.values.href) {
      if (typeof this.props.onSave === "function") {
        this.props.onSave(null, form.values.text);
      }

      return;
    }

    var data = uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Tools.merge({}, this.props.data);
    data.props = uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Tools.merge(data.props, form.values); // input with name text is handled separately as a children

    var text = data.props.text;
    delete data.props.text; // filter props with default values

    for (var propName in data.props) {
      if (data.props[propName] === DEFAULT_VALUES[propName]) {
        delete data.props[propName];
      }
    } // save form


    if (typeof this.props.onSave === "function") {
      this.props.onSave("link", text, data);
    }
  },
  _onCancel: function _onCancel() {
    if (typeof this.props.onCancel === "function") {
      this.props.onCancel();
    }
  },
  _setMessage: function _setMessage(opt) {
    var _this = this;

    opt.component.onChangeDefault(opt, function () {
      opt.component.setMessage(_this.getLsiComponent("hrefAttributeMessage"));
    });
  },
  //@@viewOff:private
  //@@viewOn:render
  render: function render() {
    var props = this.props.data.props || {};
    var href = props.href || DEFAULT_VALUES.href;
    var target = props.target || DEFAULT_VALUES.target;
    var download = props.download || DEFAULT_VALUES.download;
    var smoothScroll = props.smoothScroll || DEFAULT_VALUES.smoothScroll;
    var offset = props.offset || DEFAULT_VALUES.offset;
    return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Forms"].Form, {
      onSave: this._onSave,
      onCancel: this._onCancel,
      spacing: 16
    }, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Forms"].Text, {
      name: "text",
      label: "Text",
      value: this.props.text
    }), uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Forms"].Text, {
      name: "href",
      label: "Href",
      value: href,
      feedback: "initial",
      message: this.getLsiValue("hrefAttributeMessage"),
      onChange: this._setMessage
    }), uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Forms"].Radios, {
      name: "target",
      label: "Target",
      inline: true,
      value: [{
        label: "Blank",
        name: "_blank",
        value: target === "_blank"
      }, {
        label: "Parent",
        name: "_parent",
        value: target === "_parent"
      }, {
        label: "Top",
        name: "_top",
        value: target === "_top"
      }, {
        label: "Self",
        name: "_self",
        value: target === "_self"
      }]
    }), uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Forms"].Checkbox, {
      label: "Download",
      name: "download",
      value: download
    }), uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Panel, {
      bgStyleHeader: "underline",
      iconAlign: "after",
      iconCollapsed: "mdi-menu-down",
      iconExpanded: "mdi-menu-up",
      header: uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Lsi, {
        lsi: this.getLsi("additionalProps")
      }),
      className: this.getClassName("additionalPropsPanel")
    }, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Forms"].Number, {
      label: "Smooth Scroll",
      name: "smoothScroll",
      value: smoothScroll
    }), uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Forms"].Number, {
      label: "Offset",
      name: "offset",
      value: offset
    })), uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Forms"].Controls, null));
  } //@@viewOff:render

});
/* harmony default export */ __webpack_exports__["default"] = (LinkForm);

/***/ }),
/* 45 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _editor_block_lazy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(28);
/* harmony import */ var _bricks_uu5string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(46);
/* harmony import */ var _uu5string_less__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(47);
/* harmony import */ var _uu5string_less__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_uu5string_less__WEBPACK_IMPORTED_MODULE_4__);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }






var PLUGIN_NAME = "uu5string";
var ENTITY_NAME = PLUGIN_NAME;

var toEditorItem = function toEditorItem() {
  // return block component if there is no parent block
  var result = {
    display: "entity",
    type: ENTITY_NAME,
    data: {},
    getChildren: function getChildren(uu5stringObject) {
      return {
        children: Object(_bricks_uu5string_js__WEBPACK_IMPORTED_MODULE_3__["removeSpecialNodes"])(uu5stringObject).toString()
      };
    }
  };
  return result;
};

var toObject = function toObject()
/*type, name, props*/
{
  return {
    tag: null
  };
};

var pluginDef = immutable__WEBPACK_IMPORTED_MODULE_1___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_1___default.a.fromJS({
  name: PLUGIN_NAME,
  buttonDefs: {
    name: "uu5string",
    label: "UU5",
    dropdownItemLabel: "uu5string",
    tooltip: "uu5string",
    type: "entity",
    value: ENTITY_NAME,
    props: {
      className: "uu5string-button"
    }
  },
  toEditorItemDefs: [{
    name: "uu5string",
    type: "block",
    tagName: true,
    component: function component(properties) {
      var dataProps = properties.blockProps;
      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Div, null, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Code, _extends({}, dataProps, {
        className: "uu5-richtext-editor-uu5string uu5-richtext-editor-uu5string-block"
      }), uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(_editor_block_lazy_js__WEBPACK_IMPORTED_MODULE_2__["default"], properties)));
    },
    fn: toEditorItem,
    preserveEnters: true
  }, {
    name: "uu5string",
    type: "entity",
    tagName: true,
    component: function component(properties) {
      var dataProps = properties.contentState.getEntity(properties.entityKey).getData();
      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Code, _extends({}, dataProps, {
        className: "uu5-richtext-editor-uu5string"
      }), properties.children);
    },
    fn: toEditorItem,
    preserveEnters: true
  }],
  toObjectDefs: [{
    name: "uu5string",
    type: "entity",
    fn: toObject,
    preserveEnters: true
  }, {
    name: "uu5string",
    type: "block",
    fn: toObject,
    preserveEnters: true
  }],
  opts: {
    order: 10
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 46 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeSpecialNodes", function() { return removeSpecialNodes; });
var removeSpecialNodes = function removeSpecialNodes(uu5stringObject) {
  if (uu5stringObject.tag === "UU5.RichText.Whitespace") {
    return uu5stringObject.props.props[0].value; // return value of props spaces - only property
  } // handle children


  if (uu5stringObject.children) {
    uu5stringObject.children = uu5stringObject.children.map(function (child) {
      if (typeof child === "string") {
        return child;
      }

      return removeSpecialNodes(child);
    });
  } // handle props content


  var contentProps = uu5stringObject.props && uu5stringObject.props.props.find(function (item) {
    return item.name === "content";
  });

  if (contentProps && Array.isArray(contentProps.value)) {
    contentProps.value = contentProps.value.map(function (child) {
      if (typeof child === "string") {
        return child;
      }

      return removeSpecialNodes(child);
    });

    if (contentProps.value.every(function (item) {
      return typeof item === "string";
    })) {
      contentProps.value = contentProps.value.join("");
    }
  }

  return uu5stringObject;
};
/* harmony default export */ __webpack_exports__["default"] = ({
  removeSpecialNodes: removeSpecialNodes
});

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(48);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":false}

options.transform = transform
options.insertInto = function anonymous(
) {
return __webpack_require__(15)();
};

var update = __webpack_require__(16)(content, options);

if(content.locals) module.exports = content.locals;



/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(14)(false);
// Module
exports.push([module.i, ".uu5-richtext-editor-uu5string {\n  font-family: richtext-uu5string, monospace;\n}\n.uu5-richtext-editor-uu5string::before {\n  content: \"<uu5string/>\";\n}\n.uu5-richtext-editor-uu5string-block {\n  display: block;\n}\n.uu5string-button:not(li) > span,\nli.uu5string-button .uu5-richtext-toolbar-dropdown-item-label {\n  font-weight: bold;\n  font-size: 0.8em;\n}\n", ""]);



/***/ }),
/* 49 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _bricks_uu5string_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(46);



var PLUGIN_NAME = "uu5StringEntity";

var toEditorItem = function toEditorItem() {
  return {
    display: "entity",
    type: "uu5string",
    data: {},
    getChildren: function getChildren(uu5stringObject) {
      return {
        children: uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].UU5String.contentToString(uu5stringObject.children.map(function (child) {
          return Object(_bricks_uu5string_js__WEBPACK_IMPORTED_MODULE_2__["removeSpecialNodes"])(child);
        }))
      };
    }
  };
};

var pluginDef = immutable__WEBPACK_IMPORTED_MODULE_1___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_1___default.a.fromJS({
  name: PLUGIN_NAME,
  type: "entity",
  toEditorItemDefs: {
    tagName: "UU5.RichText.uu5StringEntity",
    fn: toEditorItem,
    preserveEnters: true,
    htmlAliases: [{
      tagName: "span",
      style: {
        fontFamily: "richtext-uu5string, monospace"
      },
      result: {
        tagName: "UU5.RichText.uu5StringEntity",
        style: undefined
      },
      order: 200
    }, {
      tagName: "code",
      style: {
        fontFamily: "richtext-uu5string, monospace"
      },
      result: {
        tagName: "UU5.RichText.uu5StringEntity",
        style: undefined
      },
      order: 200
    }]
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 50 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _bricks_uu5string_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(46);



var PLUGIN_NAME = "uu5StringBlock";

var toEditorItem = function toEditorItem() {
  return {
    display: "block",
    type: "uu5string",
    data: {},
    getChildren: function getChildren(uu5stringObject) {
      return {
        children: uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].UU5String.contentToString(uu5stringObject.children.map(function (child) {
          return Object(_bricks_uu5string_js__WEBPACK_IMPORTED_MODULE_2__["removeSpecialNodes"])(child);
        }))
      };
    }
  };
};

var pluginDef = immutable__WEBPACK_IMPORTED_MODULE_1___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_1___default.a.fromJS({
  name: PLUGIN_NAME,
  type: "block",
  toEditorItemDefs: {
    tagName: "UU5.Bricks.uu5StringBlock",
    fn: toEditorItem,
    preserveEnters: true,
    htmlAliases: [{
      tagName: "div",
      style: {
        fontFamily: "richtext-uu5string, monospace"
      },
      result: {
        tagName: "UU5.Bricks.uu5StringBlock",
        style: undefined
      },
      order: 201
    }, {
      tagName: "code",
      className: /uu5-richtext-editor-uu5string-block/,
      result: {
        tagName: "UU5.Bricks.uu5StringBlock",
        style: undefined
      },
      order: 201
    }]
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 51 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _editor_block_lazy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(28);
/* harmony import */ var _error_less__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(52);
/* harmony import */ var _error_less__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_error_less__WEBPACK_IMPORTED_MODULE_3__);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }





var ErrorPluginDef = immutable__WEBPACK_IMPORTED_MODULE_1___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_1___default.a.fromJS({
  name: "error",
  opts: {
    blockMap: {
      error: {
        component: function component(properties) {
          var dataProps = properties.blockProps;
          return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Div, null, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Code, _extends({}, dataProps, {
            className: "uu5-richtext-editor-error uu5-richtext-editor-error-block"
          }), uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(_editor_block_lazy_js__WEBPACK_IMPORTED_MODULE_2__["default"], properties)));
        },
        opt: {
          preserveEnters: true
        }
      }
    },
    entityMap: {
      error: {
        component: function component(properties) {
          var dataProps = properties.contentState.getEntity(properties.entityKey).getData();
          return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Code, _extends({}, dataProps, {
            className: "uu5-richtext-editor-error"
          }), properties.children);
        },
        opt: {
          preserveEnters: true
        }
      }
    }
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (ErrorPluginDef);

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(53);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":false}

options.transform = transform
options.insertInto = function anonymous(
) {
return __webpack_require__(15)();
};

var update = __webpack_require__(16)(content, options);

if(content.locals) module.exports = content.locals;



/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(14)(false);
// Module
exports.push([module.i, ".uu5-richtext-editor-error::before {\n  content: \"error: \";\n}\n.uu5-richtext-editor-error-block {\n  display: block;\n}\n", ""]);



/***/ }),
/* 54 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_0__);

var iterator = 0;
var map = {};
var pluginDef = immutable__WEBPACK_IMPORTED_MODULE_0___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_0___default.a.fromJS({
  name: "whitespace",
  type: "inline",
  toEditorItemDefs: [{
    tagName: "UU5.RichText.Whitespace",
    fn: function fn(tag, props, children) {
      map[iterator] = props.spaces; // iterator++;

      return {
        type: "whitespace.display:".concat(props.hidden ? "none" : "inline", ";#").concat(iterator++),
        display: "inline",
        children: children
      };
    }
  }],
  toObjectDefs: {
    type: "inline",
    prefix: "whitespace",
    tagName: "UU5.RichText.Whitespace",
    index: -1,
    fn: function fn(type, style) {
      return {
        replaceChar: function replaceChar(text) {
          var index = text.indexOf(" "); // no space to replace

          if (index < 0) return null;
          return {
            offset: index,
            replace: map[parseInt(style.match(/#(.+)$/)[1])],
            hidden: style.indexOf("display:none;") > 0
          };
        }
      };
    }
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 55 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bold_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(56);
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(57);
/* harmony import */ var _font_family_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(58);
/* harmony import */ var _font_size_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(59);
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(60);
/* harmony import */ var _italic_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(61);
/* harmony import */ var _strike_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(62);
/* harmony import */ var _underline_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(63);
/* harmony import */ var _uu5_remove_format_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(24);
/* harmony import */ var _uu5_whitespace_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(54);
/* harmony import */ var _uu5_text_align_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(25);
/* harmony import */ var _uu5_block_indent_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(26);
/* harmony import */ var _blockquote_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(64);
/* harmony import */ var _list_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(66);
/* harmony import */ var _paragraph_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(67);
/* harmony import */ var _unstyled_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(68);
/* harmony import */ var _html_fragment_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(69);
/* harmony import */ var _html_fragment_block_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(72);
/* harmony import */ var _html_fragment_entity_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(73);
/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(74);
/* harmony import */ var _image_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(75);
/* harmony import */ var _link_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(79);
/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(81);
// inline styles









 // block stlyes


 // blocks







 // entities





/* harmony default export */ __webpack_exports__["default"] = ({
  fontSIze: _font_size_js__WEBPACK_IMPORTED_MODULE_3__["default"],
  bold: _bold_js__WEBPACK_IMPORTED_MODULE_0__["default"],
  index: _index_js__WEBPACK_IMPORTED_MODULE_4__["default"],
  italic: _italic_js__WEBPACK_IMPORTED_MODULE_5__["default"],
  strike: _strike_js__WEBPACK_IMPORTED_MODULE_6__["default"],
  underline: _underline_js__WEBPACK_IMPORTED_MODULE_7__["default"],
  removeFormat: _uu5_remove_format_js__WEBPACK_IMPORTED_MODULE_8__["default"],
  textAlign: _uu5_text_align_js__WEBPACK_IMPORTED_MODULE_10__["default"],
  unstyled: _unstyled_js__WEBPACK_IMPORTED_MODULE_15__["default"],
  paragraph: _paragraph_js__WEBPACK_IMPORTED_MODULE_14__["default"],
  link: _link_js__WEBPACK_IMPORTED_MODULE_21__["default"],
  list: _list_js__WEBPACK_IMPORTED_MODULE_13__["default"],
  color: _color_js__WEBPACK_IMPORTED_MODULE_1__["default"],
  fontFamily: _font_family_js__WEBPACK_IMPORTED_MODULE_2__["default"],
  indent: _uu5_block_indent_js__WEBPACK_IMPORTED_MODULE_11__["default"],
  code: _code_js__WEBPACK_IMPORTED_MODULE_19__["default"],
  blockquote: _blockquote_js__WEBPACK_IMPORTED_MODULE_12__["default"],
  image: _image_js__WEBPACK_IMPORTED_MODULE_20__["default"],
  htmlFragment: _html_fragment_js__WEBPACK_IMPORTED_MODULE_16__["default"],
  whitespace: _uu5_whitespace_js__WEBPACK_IMPORTED_MODULE_9__["default"],
  htmlFragmentBlock: _html_fragment_block_js__WEBPACK_IMPORTED_MODULE_17__["default"],
  htmlFragmentEntity: _html_fragment_entity_js__WEBPACK_IMPORTED_MODULE_18__["default"],
  error: _error_js__WEBPACK_IMPORTED_MODULE_22__["default"]
});

/***/ }),
/* 56 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _uu5_bold_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7);

var pluginDef = _uu5_bold_js__WEBPACK_IMPORTED_MODULE_0__["default"].delete("toObjectDefs").deleteIn(["toEditorItemDefs", "1"]).deleteIn(["toEditorItemDefs", "2"]).deleteIn(["toEditorItemDefs", "3"]).setIn(["toEditorItemDefs", "0", "tagName"], "b").setIn(["toEditorItemDefs", "1", "tagName"], "strong");
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 57 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _uu5_color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9);

var pluginDef = _uu5_color_js__WEBPACK_IMPORTED_MODULE_0__["default"].setIn(["toEditorItemDefs", "0", "tagName"], "span").setIn(["toEditorItemDefs", "1", "tagName"], "span").setIn(["toObjectDefs", "0", "tagName"], "span").setIn(["toObjectDefs", "1", "tagName"], "span");
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 58 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _uu5_font_family_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18);

var pluginDef = _uu5_font_family_js__WEBPACK_IMPORTED_MODULE_0__["default"].setIn(["toEditorItemDefs", "tagName"], "span").setIn(["toObjectDefs", "tagName"], "span");
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 59 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _uu5_font_size_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(19);

var pluginDef = _uu5_font_size_js__WEBPACK_IMPORTED_MODULE_0__["default"].setIn(["toEditorItemDefs", "tagName"], "span").setIn(["toObjectDefs", "tagName"], "span");
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 60 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _uu5_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);


var pluginDef = _uu5_index_js__WEBPACK_IMPORTED_MODULE_1__["default"].setIn(["toEditorItemDefs", "0", "tagName"], "span").setIn(["toEditorItemDefs", "0", "inlineStyle"], _uu5_index_js__WEBPACK_IMPORTED_MODULE_1__["default"].getIn(["toEditorItemDefs", "0", "style"])).setIn(["toEditorItemDefs", "1", "tagName"], "span").setIn(["toEditorItemDefs", "2", "tagName"], "span").setIn(["toEditorItemDefs", "2", "inlineStyle"], _uu5_index_js__WEBPACK_IMPORTED_MODULE_1__["default"].getIn(["toEditorItemDefs", "1", "style"])).setIn(["toEditorItemDefs", "3", "tagName"], "span").setIn(["toEditorItemDefs", "4", "name"], _uu5_index_js__WEBPACK_IMPORTED_MODULE_1__["default"].getIn(["toEditorItemDefs", "0", "name"])).setIn(["toEditorItemDefs", "4", "tagName"], "sub").setIn(["toEditorItemDefs", "5", "name"], _uu5_index_js__WEBPACK_IMPORTED_MODULE_1__["default"].getIn(["toEditorItemDefs", "1", "name"])).setIn(["toEditorItemDefs", "5", "tagName"], "sup").set("toObjectDefs", immutable__WEBPACK_IMPORTED_MODULE_0___default.a.fromJS([{
  name: _uu5_index_js__WEBPACK_IMPORTED_MODULE_1__["default"].getIn(["toEditorItemDefs", "0", "name"]),
  tagName: "sub"
}, {
  name: _uu5_index_js__WEBPACK_IMPORTED_MODULE_1__["default"].getIn(["toEditorItemDefs", "2", "name"]),
  tagName: "sup"
}]));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 61 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _uu5_italic_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(21);

var pluginDef = _uu5_italic_js__WEBPACK_IMPORTED_MODULE_0__["default"].delete("toObjectDefs").deleteIn(["toEditorItemDefs", "1"]).deleteIn(["toEditorItemDefs", "2"]).deleteIn(["toEditorItemDefs", "3"]).setIn(["toEditorItemDefs", "0", "tagName"], "i").setIn(["toEditorItemDefs", "1", "tagName"], "em").setIn(["toEditorItemDefs", "0", "inlineStyle"], _uu5_italic_js__WEBPACK_IMPORTED_MODULE_0__["default"].getIn(["toEditorItemDefs", "1", "style"]));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 62 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _uu5_strike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(22);

var pluginDef = _uu5_strike_js__WEBPACK_IMPORTED_MODULE_0__["default"].delete("toObjectDefs").deleteIn(["toEditorItemDefs", "1"]).deleteIn(["toEditorItemDefs", "2"]).deleteIn(["toEditorItemDefs", "3"]).deleteIn(["toEditorItemDefs", "4"]).setIn(["toEditorItemDefs", "0", "tagName"], "s").setIn(["toEditorItemDefs", "1", "tagName"], "strike").setIn(["toEditorItemDefs", "2", "tagName"], "del").setIn(["toEditorItemDefs", "0", "inlineStyle"], _uu5_strike_js__WEBPACK_IMPORTED_MODULE_0__["default"].getIn(["toEditorItemDefs", "1", "style"]));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 63 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _uu5_underline_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(23);

var pluginDef = _uu5_underline_js__WEBPACK_IMPORTED_MODULE_0__["default"].delete("toObjectDefs").deleteIn(["toEditorItemDefs", "1"]).deleteIn(["toEditorItemDefs", "2"]).setIn(["toEditorItemDefs", "0", "tagName"], "u").setIn(["toEditorItemDefs", "0", "inlineStyle"], _uu5_underline_js__WEBPACK_IMPORTED_MODULE_0__["default"].getIn(["toEditorItemDefs", "1", "style"]));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 64 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _editor_block_lazy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(28);
/* harmony import */ var _uu5_blockquote_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(65);


var pluginDef = _uu5_blockquote_js__WEBPACK_IMPORTED_MODULE_1__["default"].setIn(["toEditorItemDefs", "tagName"], "blockquote").setIn(["toEditorItemDefs", "component"], function (properties) {
  return UU5.Common.Element.create("blockquote", properties.blockProps, UU5.Common.Element.create(_editor_block_lazy_js__WEBPACK_IMPORTED_MODULE_0__["default"], properties));
});
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 65 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _editor_block_lazy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(28);



var PLUGIN_NAME = "blockquote"; // cannot use "blockquote" as a block name, draft use it too. It causes render uu5blockquote inside draft blockquote

var BLOCK_NAME = "BLOCKQUOTE";
var pluginDef = immutable__WEBPACK_IMPORTED_MODULE_1___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_1___default.a.fromJS({
  name: PLUGIN_NAME,
  type: "block",
  buttonDefs: {
    name: "blockquote",
    icon: "mdi-format-quote-open",
    label: function label() {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Environment"].Lsi.RichText.plugins.blockquote.label;
    },
    type: "block",
    value: BLOCK_NAME
  },
  toEditorItemDefs: {
    name: BLOCK_NAME,
    tagName: "UU5.Bricks.Blockquote",
    htmlAliases: {
      tagName: "blockquote"
    },
    component: function component(properties) {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Blockquote, properties.blockProps, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(_editor_block_lazy_js__WEBPACK_IMPORTED_MODULE_2__["default"], properties));
    },
    element: "blockquote"
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 66 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _uu5_list_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(27);

var pluginDef = _uu5_list_js__WEBPACK_IMPORTED_MODULE_0__["default"].setIn(["toEditorItemDefs", "0", "name"], "ul").setIn(["toEditorItemDefs", "0", "tagName"], "ul").setIn(["toEditorItemDefs", "1", "name"], "ol").setIn(["toEditorItemDefs", "1", "tagName"], "ol").setIn(["toEditorItemDefs", "2", "tagName"], "li").setIn(["toEditorItemDefs", "2", "wrapperTagName"], "ol").setIn(["toEditorItemDefs", "3", "tagName"], "li").setIn(["toEditorItemDefs", "3", "wrapperTagName"], "ul");
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 67 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _editor_block_lazy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(28);
/* harmony import */ var _uu5_p_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(35);


var pluginDef = _uu5_p_js__WEBPACK_IMPORTED_MODULE_1__["default"].setIn(["toEditorItemDefs", "tagName"], "p").setIn(["toEditorItemDefs", "element"], "p").setIn(["toEditorItemDefs", "component"], function (properties) {
  return UU5.Common.Element.create(_editor_block_lazy_js__WEBPACK_IMPORTED_MODULE_0__["default"], properties);
});
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 68 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _uu5_unstyled_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(36);
/* harmony import */ var _editor_block_lazy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(28);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



var pluginDef = _uu5_unstyled_js__WEBPACK_IMPORTED_MODULE_0__["default"].setIn(["toObjectDefs", "tagName"], "div").setIn(["toEditorItemDefs", "0", "tagName"], "div").setIn(["toEditorItemDefs", "0", "component"], function (properties) {
  return UU5.Common.Element.create("div", _extends({}, properties.blockProps, {
    className: "uu5-common-div"
  }), UU5.Common.Element.create(_editor_block_lazy_js__WEBPACK_IMPORTED_MODULE_1__["default"], properties));
});
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 69 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _uu5_uu5string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(45);
/* harmony import */ var _editor_block_lazy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(28);
/* harmony import */ var _html_fragment_less__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(70);
/* harmony import */ var _html_fragment_less__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_html_fragment_less__WEBPACK_IMPORTED_MODULE_2__);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }




var pluginDef = _uu5_uu5string_js__WEBPACK_IMPORTED_MODULE_0__["default"].setIn(["buttonDefs", "name"], "htmlFragment").setIn(["buttonDefs", "icon"], "mdi-language-html5").setIn(["buttonDefs", "label"], "HTML fragment").deleteIn(["buttonDefs", "dropdownItemLabel"]).deleteIn(["buttonDefs", "tooltip"]).deleteIn(["buttonDefs", "props"]).setIn(["toEditorItemDefs", "0", "component"], function (properties) {
  var dataProps = properties.blockProps;
  return UU5.Common.Element.create("div", {
    className: "uu5-richtext-html-editor-fragment"
  }, UU5.Common.Element.create("code", dataProps, UU5.Common.Element.create(_editor_block_lazy_js__WEBPACK_IMPORTED_MODULE_1__["default"], properties)));
}).setIn(["toEditorItemDefs", "1", "component"], function (properties) {
  var dataProps = properties.contentState.getEntity(properties.entityKey).getData();
  return UU5.Common.Element.create("code", _extends({}, dataProps, {
    className: "uu5-richtext-html-editor-fragment"
  }), properties.children);
});
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(71);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":false}

options.transform = transform
options.insertInto = function anonymous(
) {
return __webpack_require__(15)();
};

var update = __webpack_require__(16)(content, options);

if(content.locals) module.exports = content.locals;



/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(14)(false);
// Module
exports.push([module.i, ".uu5-richtext-html-editor-fragment {\n  color: #D32F2F;\n  background-color: #FFEBEE;\n  font-family: richtext-html-fragment, monospace;\n}\n.uu5-richtext-html-editor-fragment::before {\n  content: \"<html />\";\n}\n", ""]);



/***/ }),
/* 72 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_1__);


var PLUGIN_NAME = "htmlFragmentBlock";

var toEditorItem = function toEditorItem(tag) {
  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var children = arguments.length > 2 ? arguments[2] : undefined;
  var wrapper = arguments.length > 3 ? arguments[3] : undefined;
  var wrapperProps = arguments.length > 4 ? arguments[4] : undefined;
  return {
    display: "block",
    type: "uu5string",
    data: {},
    getChildren: function getChildren(uu5stringObject) {
      return {
        children: uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].UU5String.contentToString(uu5stringObject.children)
      };
    }
  };
};

var pluginDef = immutable__WEBPACK_IMPORTED_MODULE_1___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_1___default.a.fromJS({
  name: PLUGIN_NAME,
  type: "block",
  toEditorItemDefs: {
    tagName: "UU5.Bricks.htmlFragmentBlock",
    fn: toEditorItem,
    preserveEnters: true,
    htmlAliases: [{
      tagName: "div",
      style: {
        fontFamily: "richtext-html-fragment, monospace"
      },
      result: {
        tagName: "UU5.Bricks.htmlFragmentBlock",
        style: undefined
      },
      order: 201
    }, {
      tagName: "code",
      className: /uu5-richtext-html-editor-fragment/,
      result: {
        tagName: "UU5.Bricks.htmlFragmentBlock",
        style: undefined
      },
      order: 201
    }]
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 73 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_1__);


var PLUGIN_NAME = "htmlFragmentEntity";

var toEditorItem = function toEditorItem(tag) {
  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var children = arguments.length > 2 ? arguments[2] : undefined;
  var wrapper = arguments.length > 3 ? arguments[3] : undefined;
  var wrapperProps = arguments.length > 4 ? arguments[4] : undefined;
  return {
    display: "entity",
    type: "uu5string",
    data: {},
    getChildren: function getChildren(uu5stringObject) {
      return {
        children: uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].UU5String.contentToString(uu5stringObject.children)
      };
    }
  };
};

var pluginDef = immutable__WEBPACK_IMPORTED_MODULE_1___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_1___default.a.fromJS({
  name: PLUGIN_NAME,
  type: "entity",
  toEditorItemDefs: {
    tagName: "UU5.RichText.htmlFragmentEntity",
    fn: toEditorItem,
    preserveEnters: true,
    htmlAliases: [{
      tagName: "span",
      style: {
        fontFamily: "richtext-html-fragment, monospace"
      },
      result: {
        tagName: "UU5.RichText.htmlFragmentEntity",
        style: undefined
      },
      order: 200
    }, {
      tagName: "code",
      style: {
        fontFamily: "richtext-html-fragment, monospace"
      },
      result: {
        tagName: "UU5.RichText.htmlFragmentEntity",
        style: undefined
      },
      order: 200
    }]
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 74 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _uu5_code_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37);

var pluginDef = _uu5_code_js__WEBPACK_IMPORTED_MODULE_0__["default"].setIn(["toEditorItemDefs", "tagName"], "code").setIn(["toEditorItemDefs", "component"], function (properties) {
  var dataProps = properties.contentState.getEntity(properties.entityKey).getData();
  return UU5.Common.Element.create("code", dataProps, properties.children);
});
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 75 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _internal_image_button_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }




var PLUGIN_NAME = "image";
var pluginDef = immutable__WEBPACK_IMPORTED_MODULE_1___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_1___default.a.fromJS({
  name: PLUGIN_NAME,
  type: "entity",
  buttonDefs: {
    name: "image",
    icon: "mdi-image",
    label: function label() {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Environment"].Lsi.RichText.htmlPlugins.image.label;
    },
    button: _internal_image_button_js__WEBPACK_IMPORTED_MODULE_2__["default"],
    props: {
      ruleName: "image"
    },
    getProps: function getProps() {
      return {
        onUpload: this.onUpload
      };
    }
  },
  toEditorItemDefs: {
    tagName: "img",
    component: function component(properties) {
      var dataProps = properties.contentState.getEntity(properties.entityKey).getData().props || {};
      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create("span", null, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create("img", _extends({
        className: "my-image"
      }, dataProps)), properties.children);
    },
    fn: function fn(tagName, props) {
      return {
        type: PLUGIN_NAME,
        display: "entity",
        children: ["\u200B"],
        props: props
      };
    },
    htmlAliases: {
      tagName: "img",
      style: true
    }
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 76 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(11);
/* harmony import */ var uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var uu5g04_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(39);
/* harmony import */ var uu5g04_forms__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(uu5g04_forms__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _image_button_less__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(77);
/* harmony import */ var _image_button_less__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_image_button_less__WEBPACK_IMPORTED_MODULE_3__);
//@@viewOn:imports



 //@@viewOff:imports

var ColorButton = uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].VisualComponent.create({
  displayName: "UU5.RichText.ImageButton",
  tagName: "UU5.RichText.ImageButton",
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].BaseMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].ElementaryMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    classNames: {
      main: "uu5-richtext-image-button"
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  propTypes: {
    getArea: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].func.isRequired,
    icon: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string,
    ruleName: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string,
    onUpload: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].func,
    baseline: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].bool,
    dropdownItem: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].bool,
    label: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string,
    dropdownItemLabel: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string,
    colorSchema: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string
  },
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      getArea: undefined,
      icon: "mdi-image",
      ruleName: "image",
      onUpload: null,
      baseline: undefined,
      dropdownItem: false,
      label: undefined,
      dropdownItemLabel: undefined,
      colorSchema: undefined
    };
  },
  //@@viewOff:getDefaultProps
  //@@viewOn:reactLifeCycle
  getInitialState: function getInitialState() {
    return {
      open: false
    };
  },
  //@@viewOff:reactLifeCycle
  //@@viewOn:interface
  //@@viewOff:interface
  //@@viewOn:overriding
  //@@viewOff:overriding
  //@@viewOn:private
  _onMouseDown: function _onMouseDown(e) {
    var _this = this;

    e.preventDefault();
    var area = this.props.getArea();

    if (this._picker && area) {
      if (this._picker.isOpen()) {
        area.setReadOnly(false, this._closePicker);
      } else {
        area.setReadOnly(true, function () {
          _this._picker.open({
            onClose: _this._onPickerClose,
            aroundElement: _this,
            position: "bottom",
            offset: 4,
            content: _this._renderForm()
          });

          _this.setState({
            open: true
          });
        });
      }
    }
  },
  _onSave: function _onSave(opt) {
    var _this2 = this;

    // load file by FileReader
    // https://stackoverflow.com/questions/20999205/get-file-input-value-as-binary-data
    var _opt$component$getVal = opt.component.getValues(),
        src = _opt$component$getVal.src;

    if (!src || this.state.loading) return;

    if (typeof this.props.onUpload === "function") {
      this.setState({
        loading: true
      });
      this.props.onUpload("image", {
        src: src
      }).then(function (result) {
        _this2._submitValueToArea(result.src);
      }, function (error) {
        // TODO - what to do when image cannot be uploaded
        console.log(error); // eslint-disable-line no-console
      }).finally(function () {
        _this2.setState({
          loading: false
        });
      });
    } else {
      // src is File object -> get binary from file
      var reader = new FileReader();

      reader.onloadend = function () {
        _this2._submitValueToArea("data:".concat(src.type || "image/jpeg", ";base64,").concat(btoa(reader.result)));
      }; // return opt.component.onChangeDefault(opt);


      reader.readAsBinaryString(src);
    }
  },
  _submitValueToArea: function _submitValueToArea(src) {
    var _this3 = this;

    var area = this.props.getArea();

    if (area) {
      area.setReadOnly(false, function () {
        var newEditorState = area.selectCurrentEntity(area.getEditorState(), _this3.props.ruleName);
        area.createEntity(newEditorState, undefined, _this3.props.ruleName, undefined, {
          props: {
            src: src
          }
        }, {
          isMutable: false
        });
      });
    }

    this._closePicker();
  },
  _onCancel: function _onCancel() {
    this._closePicker();
  },
  _closePicker: function _closePicker() {
    this._picker.close(this._onPickerClose);
  },
  _onPickerClose: function _onPickerClose() {
    this.setState({
      open: false
    });
  },
  _blockUU5Event: function _blockUU5Event(item, e) {
    this._blockEvent(e);
  },
  _blockEvent: function _blockEvent(e) {
    e.preventDefault();
    e.stopPropagation();
  },
  _stopEvent: function _stopEvent(e) {
    e.stopPropagation();
  },
  _registerPicker: function _registerPicker(picker) {
    this._picker = picker;
  },
  _renderForm: function _renderForm() {
    // TODO finish form
    return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Forms"].Form, {
      onSave: this._onSave,
      onCancel: this._onCancel,
      id: Date.now().toString()
    }, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Forms"].File, {
      name: "src",
      controlled: false
    }), uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Forms"].Controls, null));
  },
  //@@viewOff:private
  //@@viewOn:render
  render: function render() {
    return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Span, this.getMainPropsToPass(), uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Button, {
      pressed: this.state.open,
      mainAttrs: {
        onMouseDown: this._onMouseDown,
        tabIndex: -1
      },
      onClick: this._blockUU5Event,
      className: this.props.dropdownItem ? "uu5-richtext-toolbar-dropdown-button" : null,
      baseline: this.props.baseline,
      colorSchema: this.props.colorSchema
    }, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Icon, {
      icon: this.props.icon
    }), this.props.dropdownItem ? this.props.dropdownItemLabel || this.props.label : null), uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Popover, {
      ref_: this._registerPicker,
      controlled: false,
      mainAttrs: {
        onMouseDown: this._stopEvent,
        onClick: this._stopEvent
      }
    }));
  } //@@viewOff:render

});
/* harmony default export */ __webpack_exports__["default"] = (ColorButton);

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(78);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":false}

options.transform = transform
options.insertInto = function anonymous(
) {
return __webpack_require__(15)();
};

var update = __webpack_require__(16)(content, options);

if(content.locals) module.exports = content.locals;



/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(14)(false);
// Module
exports.push([module.i, ".uu5-richtext-image-button {\n  display: inline-block;\n}\n.uu5-richtext-image-button > button {\n  background: transparent;\n}\n.uu5-richtext-item-with-button .uu5-richtext-image-button > .uu5-bricks-button {\n  width: 100%;\n  -webkit-box-pack: start;\n          justify-content: flex-start;\n  padding: 6px 16px 7px 18px;\n}\n", ""]);



/***/ }),
/* 79 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _internal_link_form_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80);
/* harmony import */ var _uu5_link_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(43);



var pluginDef = _uu5_link_js__WEBPACK_IMPORTED_MODULE_2__["default"].setIn(["toEditorItemDefs", "tagName"], "a").setIn(["toEditorItemDefs", "component"], function (properties) {
  var linkProps = properties.contentState.getEntity(properties.entityKey).getData().props || {};
  return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create("a", linkProps, properties.children);
}).setIn(["toEditorItemDefs", "getEditationForm"], function (entityName, text, data, onSave, onCancel, isEdit) {
  // plugin register only entity LINK so its not needed to check entity
  return {
    header: uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Lsi, {
      lsi: uu5g04__WEBPACK_IMPORTED_MODULE_0__["Environment"].Lsi.RichText.htmlPlugins.link[isEdit ? "editationFormHeader" : "addFormHeader"]
    }),
    content: uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(_internal_link_form_js__WEBPACK_IMPORTED_MODULE_1__["default"], {
      data: data,
      text: text,
      onSave: onSave,
      onCancel: onCancel
    }),
    isPopover: true
  };
});
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 80 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(11);
/* harmony import */ var uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var uu5g04_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(39);
/* harmony import */ var uu5g04_forms__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(uu5g04_forms__WEBPACK_IMPORTED_MODULE_2__);
//@@viewOn:imports


 //@@viewOff:imports

var DEFAULT_VALUES = {
  href: "",
  target: "_self",
  download: false,
  smoothScroll: 1000,
  offset: 0
};
var HtmlLinkForm = uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].VisualComponent.create({
  displayName: "UU5.RichText.HtmlLinkForm",
  tagName: "UU5.RichText.HtmlLinkForm",
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].BaseMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    classNames: {
      main: "uu5-richtext-plugin-link-form"
    },
    lsi: function lsi() {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Environment"].Lsi.RichText.htmlPlugins.linkForm;
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  propTypes: {
    text: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string,
    data: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].object,
    onCancel: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].func,
    onSave: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].func
  },
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      text: "",
      data: {},
      onCancel: null,
      onSave: null
    };
  },
  //@@viewOff:getDefaultProps
  //@@viewOn:reactLifeCycle
  //@@viewOff:reactLifeCycle
  //@@viewOn:interface
  //@@viewOff:interface
  //@@viewOn:overriding
  //@@viewOff:overriding
  //@@viewOn:private
  _onSave: function _onSave(form) {
    if (!form.values.href) {
      if (typeof this.props.onSave === "function") {
        this.props.onSave(null, form.values.text);
      }

      return;
    }

    var data = uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Tools.merge({}, this.props.data);
    data.props = uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Tools.merge(data.props, form.values); // input with name text is handled separately as a children

    var text = data.props.text;
    delete data.props.text; // filter props with default values

    for (var propName in data.props) {
      if (data.props[propName] === DEFAULT_VALUES[propName]) {
        delete data.props[propName];
      }
    } // save form


    if (typeof this.props.onSave === "function") {
      this.props.onSave("link", text, data);
    }
  },
  _onCancel: function _onCancel() {
    if (typeof this.props.onCancel === "function") {
      var _this$props;

      (_this$props = this.props).onCancel.apply(_this$props, arguments);
    }
  },
  _setMessage: function _setMessage(opt) {
    var _this = this;

    opt.component.onChangeDefault(opt, function () {
      opt.component.setMessage(_this.getLsiComponent("hrefAttributeMessage"));
    });
  },
  //@@viewOff:private
  //@@viewOn:render
  render: function render() {
    var props = this.props.data.props || {};
    var href = props.href || DEFAULT_VALUES.href;
    var target = props.target || DEFAULT_VALUES.target;
    var download = props.download || DEFAULT_VALUES.download;
    return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Forms"].Form, {
      onSave: this._onSave,
      onCancel: this._onCancel,
      spacing: 16
    }, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Forms"].Text, {
      name: "text",
      label: "Text",
      value: this.props.text
    }), uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Forms"].Text, {
      name: "href",
      label: "Href",
      value: href,
      feedback: "initial",
      message: this.getLsiComponent("hrefAttributeMessage"),
      onChange: this._setMessage
    }), uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Forms"].Radios, {
      name: "target",
      label: "Target",
      inline: true,
      value: [{
        label: "Blank",
        name: "_blank",
        value: target === "_blank"
      }, {
        label: "Parent",
        name: "_parent",
        value: target === "_parent"
      }, {
        label: "Top",
        name: "_top",
        value: target === "_top"
      }, {
        label: "Self",
        name: "_self",
        value: target === "_self"
      }]
    }), uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Forms"].Checkbox, {
      label: "Download",
      name: "download",
      value: download
    }), uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Forms"].Controls, null));
  } //@@viewOff:render

});
/* harmony default export */ __webpack_exports__["default"] = (HtmlLinkForm);

/***/ }),
/* 81 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _editor_block_lazy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(28);
/* harmony import */ var _error_less__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(82);
/* harmony import */ var _error_less__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_error_less__WEBPACK_IMPORTED_MODULE_2__);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }




var ErrorPluginDef = immutable__WEBPACK_IMPORTED_MODULE_0___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_0___default.a.fromJS({
  name: "error",
  opts: {
    blockMap: {
      error: {
        component: function component(properties) {
          var dataProps = properties.blockProps;
          return UU5.Common.Element.create("div", {
            className: "uu5-richtext-html-editor-error"
          }, UU5.Common.Element.create("code", dataProps, UU5.Common.Element.create(_editor_block_lazy_js__WEBPACK_IMPORTED_MODULE_1__["default"], properties)));
        }
      }
    },
    entityMap: {
      error: {
        component: function component(properties) {
          var dataProps = properties.contentState.getEntity(properties.entityKey).getData();
          return UU5.Common.Element.create("code", _extends({}, dataProps, {
            className: "uu5-richtext-html-editor-error"
          }), properties.children);
        }
      }
    }
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (ErrorPluginDef);

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(83);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":false}

options.transform = transform
options.insertInto = function anonymous(
) {
return __webpack_require__(15)();
};

var update = __webpack_require__(16)(content, options);

if(content.locals) module.exports = content.locals;



/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(14)(false);
// Module
exports.push([module.i, ".uu5-richtext-html-editor-error {\n  color: #D32F2F;\n  background-color: #FFEBEE;\n  font-family: richtext-html-fragment, monospace;\n}\n.uu5-richtext-html-editor-error::before {\n  content: \"<html />\";\n}\n", ""]);



/***/ }),
/* 84 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "plugins", function() { return plugins; });
/* harmony import */ var _plugin_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(85);

var plugins = {
  link: Object(_plugin_factory_js__WEBPACK_IMPORTED_MODULE_0__["createEditablePlugin"])("link", "UuContentKit.Links.Link", {
    label: {
      en: "Link",
      cs: "Odkaz"
    },
    icon: "mdi-earth",
    name: "link"
  }, {
    renderTagName: "UU5.Bricks.Link",
    useContent: true
  }),
  fileLink: Object(_plugin_factory_js__WEBPACK_IMPORTED_MODULE_0__["createEditablePlugin"])("file-link", "UuContentKit.Links.FileLink", {
    label: {
      en: "File Link",
      cs: "Odkaz na soubor"
    },
    icon: "mdi-file-outline",
    name: "file-link"
  }, {
    renderTagName: "UU5.Bricks.Link",
    useContent: true
  })
};
/* harmony default export */ __webpack_exports__["default"] = (plugins);

/***/ }),
/* 85 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createEditablePlugin", function() { return createEditablePlugin; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_1__);
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }


 //default commands for changing styles, entites and blocks

var COMMANDS = {
  inline: function inline(editorState, area, name) {
    area.toggleInlineStyle(name);
    return true;
  },
  block: function block(editorState, area, blockName) {
    area.toggleBlockType(blockName);
    return true;
  },
  entity: function entity(editorState, area, entityName) {
    area.editSelectedComponent(entityName);
    return true;
  }
}; // for now is support only for one style

var generateType = function generateType(prefix, style, propsStyle) {
  var result = prefix + ".";
  var count = 0;

  for (var styleName in style) {
    result += "".concat(count > 0 ? ";" : "").concat(styleName, ":").concat(propsStyle[styleName]);
  }

  return result;
};

var toEditorItem = function toEditorItem(tag, props, children, wrapper, wrapperProps) {
  var returnProps = true;

  if (!props) {
    props = {};
    returnProps = false;
  }

  var result = null;
  var def;
  var maxMatchRate = 0;
  this.toEditorItemDefs && this.toEditorItemDefs.forEach(function (tagDef) {
    if (tagDef.tagName && (tagDef.tagName === true || tagDef.tagName === tag) && (!tagDef.wrapperTagName || tagDef.wrapperTagName === wrapper) && (tagDef.type !== "entity" || typeof tagDef.fn === "function" || children && children.length > 0)) {
      var matchRate = getMatchRate(tagDef.style, props.style);

      if (matchRate > maxMatchRate) {
        def = tagDef;
        maxMatchRate = matchRate;
      }
    }
  });

  if (def) {
    if (def.fn) {
      result = def.fn(tag, props, children, wrapper, wrapperProps);
      result.display = result.display || this.type;
      result.value = result.value || this.name;

      if (result.props) {
        result.data = result.data || {};
        result.data.props = result.props;
        delete result.props;
      }
    } else if (def.prefix && def.style && props.style && this.type === "inline") {
      result = {
        display: this.type,
        type: generateType(def.prefix, def.style, props.style)
      };
    } else {
      result = {
        display: def.type,
        type: def.name
      };

      if (returnProps) {
        result.data = {
          props: props
        };
      }
    }

    if (!def.preserveEnters) {
      result.children = result.children || children;

      if (Array.isArray(result.children)) {
        result.children = result.children.map(function (child) {
          if (child && child.tag === "br") {
            return "\n";
          }

          return child;
        });
      }
    }

    result.matchRate = maxMatchRate;
  }

  return result;
};

var toObject = function toObject(type, name) {
  var _this = this;

  var props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var parent = arguments.length > 3 ? arguments[3] : undefined;
  var parentProps = arguments.length > 4 ? arguments[4] : undefined;
  var isEmpty = arguments.length > 5 ? arguments[5] : undefined;
  var result; // find correct definition

  var def = this.toObjectDefs && this.toObjectDefs.find(function (def) {
    if (def.type !== type) return;

    if (def.name) {
      return def.name === name;
    } else if (def.prefix) {
      return def.prefix === name.split(".")[0];
    } else {
      return _this.name === name;
    }
  }); // use definition to return corret result

  if (def) {
    // use specific function of specific tagName and style
    if (def.fn) {
      result = def.fn(type, name, props, parent, parentProps, isEmpty);
    } else {
      result = {
        tag: def.tagName
      };

      if (def.order) {
        result.order = def.order;
      }

      if (def.wrapperTagName) {
        result.wrapper = def.wrapperTagName;
      }

      if (def.style) {
        var style = JSON.parse(JSON.stringify(def.style));

        if (def.prefix) {
          (function () {
            var parts = name.split(".");

            for (var key in style) {
              style[key] = style[key].replace(/\${([0-9]+)}/g, function (_, numstring) {
                var num = parseInt(numstring);
                var styleValue = numstring;

                if (parts[num]) {
                  var values = parts[num].split(":");
                  styleValue = values[values.length - 1];
                }

                return styleValue;
              });
            }
          })();
        }

        result.props = uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Tools.merge(props, {
          style: style
        });
      } else {
        result.props = props;
      }
    }

    result.opts = {
      preserveEnters: !!def.preserveEnters
    };
  }

  return result;
};

var getMatchRate = function getMatchRate(requestedStyle, propsStyle) {
  var maxWeight = propsStyle ? Object.keys(propsStyle).length : 0;
  var weight = 0;

  if (requestedStyle && propsStyle) {
    for (var style in requestedStyle) {
      if (!(requestedStyle[style] === true && propsStyle[style]) && propsStyle[style] !== requestedStyle[style]) {
        return 0;
      }

      weight++;
    }

    return weight / maxWeight;
  }

  return !requestedStyle ? 1 : 0; // return full conformity if any style is not requested
};

var getBlockMapItemFromDefinition = function getBlockMapItemFromDefinition(def) {
  var blockItem = {
    rendererFn: def.component
  };

  if (def.element || def.wrapper || def.wrapperName) {
    blockItem.renderMap = {
      element: def.element,
      wrapper: def.wrapper,
      wrapperName: def.wrapperName
    };
  }

  return blockItem;
};

var PluginCache = immutable__WEBPACK_IMPORTED_MODULE_1___default.a.Map();
var PluginFactory = {
  /* Create plugin and cache it. */
  createPluginFromDefinition: function createPluginFromDefinition(pluginDefinition) {
    // check if plugin is not already cached
    var result = PluginCache.get(pluginDefinition);
    if (result) return result; // check if plugin is defined by object or Immutable Map

    var json = immutable__WEBPACK_IMPORTED_MODULE_1___default.a.Map.isMap(pluginDefinition) ? pluginDefinition.toJSON() : pluginDefinition;
    result = PluginFactory.createPlugin(json.name, json.type, json.buttonDefs, json.toEditorItemDefs, json.toObjectDefs, json.commands, json.opts); // cache created plugin

    PluginCache = PluginCache.set(pluginDefinition, result);
    return result;
  },

  /*
  createPlugin
   @param name - name of the plugin
  @param buttonDefs ( optional )
    arrayOf objects or single object of type
      icon
      label
      name
      value
  @param toEditorItemDefs (optional)
    arrayOf object or single object of type:
      tagName - name of the tag in string representation
      style - map of styles and its values - if value of style is true, then any value is correct
      inlineStyle - map of styles for styleMap. These styles are not used for parsing text to editor items
      name - name of style/entity/block in Draft ( optional ) - if is not set it is used name of the plugin
      type - type of editor item
      fn - special fn to return editor item ( optional )
  @param toObjectDefs ( optional if plugin name is used as a name of the style )
    arrayOf objects or single object of type:
      name - name of the draft style/entity/block ( optional if plugin name is used as a name of the style )
      prefix - prefix of the draft style ( optional )
      tagName
      style
      fn - special function to return {tag, props} representation of the style ( optional if prefix is not set )
  @param opts ( optional )
    object of type:
      customStyleMap - style map for inline style elements
      htmlMappings - array of mappings from html to components
      blockMap - map of blocks
  */
  createPlugin: function createPlugin(name) {
    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "custom";
    var buttonDefs = arguments.length > 2 ? arguments[2] : undefined;
    var toEditorItemDefs = arguments.length > 3 ? arguments[3] : undefined;
    var toObjectDefs = arguments.length > 4 ? arguments[4] : undefined;
    var commands = arguments.length > 5 ? arguments[5] : undefined;
    var opts = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : {};
    var plugin = {
      name: name,
      type: type
    };

    if (commands) {
      plugin.commands = Array.isArray(commands) ? commands : [commands];
      plugin.commands = plugin.commands.map(function (cmd) {
        if (typeof cmd.fn !== "function") {
          var pluginType = cmd.type || type; // get default fn or set empty

          return _objectSpread({}, cmd, {
            fn: COMMANDS[pluginType] ? function (editorState, area) {
              return COMMANDS[pluginType](editorState, area, name);
            } : function () {
              return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Tools.warning("Command function for shortcut (".concat(cmd.altKey ? "ALT + " : "").concat(cmd.ctrlKey ? "CTRL + " : "").concat(cmd.shiftKey ? "SHIFT + " : "").concat(cmd.keyCode, ") in plugin ").concat(name, " does not found."));
            }
          });
        }

        return cmd;
      });
    }

    plugin.order = opts.order || 50;

    if (opts.htmlMappings) {
      plugin.htmlMappings = JSON.parse(JSON.stringify(opts.htmlMappings));
    }

    if (opts.customStyleMap) {
      plugin.customStyleMap = JSON.parse(JSON.stringify(opts.customStyleMap));
    }

    if (opts.blockMap) {
      plugin.blockMap = {};

      for (var defName in opts.blockMap) {
        var blockItem = getBlockMapItemFromDefinition(opts.blockMap[defName]);
        plugin.blockMap[defName] = blockItem;
      }
    }

    if (opts.entityMap) {
      // process entities
      plugin.entities = [];

      for (var entityName in opts.entityMap) {
        // if strategy is not defined, it will be added stadard strategy in plugin.processPlugins
        var def = opts.entityMap[entityName];
        plugin.entities.push({
          name: entityName,
          component: def.component,
          strategy: def.strategy
        });
      }
    } // init transform rules for editor


    if (toEditorItemDefs) {
      plugin.toEditorItemDefs = Array.isArray(toEditorItemDefs) ? toEditorItemDefs : [toEditorItemDefs]; // if rule does not contain name add it same as name of the plugin

      plugin.toEditorItemDefs = plugin.toEditorItemDefs.map(function (def) {
        // init definitions
        def.name = def.name || name;
        def.type = def.type || type; // process all definitions
        // process inline styles

        if (def.type === "inline" && (def.styleFn || def.style || def.inlineStyle)) {
          if (!plugin.customStyleMap) plugin.customStyleMap = {}; // don't rewrite existing styles

          if (!plugin.customStyleMap[def.name]) {
            plugin.customStyleMap[def.name] = def.styleFn || def.style || def.inlineStyle;
          }
        } // process entities


        if (def.type === "entity" && def.component) {
          if (!plugin.entities) plugin.entities = []; // if strategy is not defined, it will be added stadard strategy in plugin.processPlugins

          plugin.entities.push({
            component: def.component,
            strategy: def.strategy
          });
        } // process blocks


        if (def.type === "block" && def.component) {
          if (!plugin.blockMap) plugin.blockMap = {};

          var _blockItem = getBlockMapItemFromDefinition(def);

          plugin.blockMap[def.name] = _blockItem;
        }

        if (def.getEditationForm) {
          if (!plugin.getEditationFormMap) plugin.getEditationFormMap = {};
          plugin.getEditationFormMap[def.name] = def.getEditationForm;
        }

        if (def.htmlAliases) {
          // htmlAliases is array or single alias
          var aliases = Array.isArray(def.htmlAliases) ? def.htmlAliases : [def.htmlAliases]; // check if htmlMappings is already on plugin

          if (!plugin.htmlMappings) {
            plugin.htmlMappings = [];
          } // process all aliases and link them with current def


          aliases.forEach(function (alias) {
            var mapping = {
              tagName: alias.tagName,
              style: alias.style,
              className: alias.className,
              result: alias.result || {
                tagName: def.tagName,
                style: def.style
              },
              final: alias.final !== undefined ? alias.final : type !== "inline" // by default set entity and block mapping as final

            };

            if (alias.order) {
              mapping.order = alias.order;
            }

            plugin.htmlMappings.push(mapping);
          });
        } // return definition


        return def;
      }); // init map of toObjectDefs - add name same as plugin name if is not set

      if (toObjectDefs) {
        plugin.toObjectDefs = Array.isArray(toObjectDefs) ? toObjectDefs : [toObjectDefs];
        plugin.toObjectDefs = plugin.toObjectDefs.map(function (def) {
          // each definition must have defined prefix or name
          if (!def.prefix) {
            def.name = def.name || name;
          }

          def.type = def.type || type;
          return def;
        });
      } else {
        // create new set of definition from toEditorItemDefs
        plugin.toObjectDefs = [];
        plugin.toEditorItemDefs.forEach(function (def) {
          if (def.skipToObjectRule) return;
          plugin.toObjectDefs.push({
            name: def.name || name,
            tagName: def.tagName,
            style: def.style,
            type: def.type || type,
            wrapperTagName: def.wrapperTagName
          });
        });
      }
    } // process defined buttons


    if (buttonDefs) {
      if (!Array.isArray(buttonDefs)) {
        buttonDefs = [buttonDefs];
      }

      plugin.buttonMap = {};
      buttonDefs.forEach(function (button) {
        plugin.buttonMap[button.name || name] = {
          icon: button.icon,
          label: button.label,
          dropdownItemLabel: button.dropdownItemLabel || button.label,
          type: button.type || type,
          value: button.value || name,
          items: button.items,
          button: button.button,
          props: button.props,
          getProps: button.getProps,
          isSelected: button.isSelected,
          isDisabled: button.isDisabled,
          onClick: button.onClick,
          ignorePrefix: button.ignorePrefix,
          preserveStyle: button.preserveStyle
        };
      });
    }

    plugin.toEditorItem = toEditorItem;
    plugin.toUU5Item = toObject;
    return plugin;
  }
};
var createEditablePlugin = function createEditablePlugin(pluginName, tagName, buttonDef) {
  var opts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
  return immutable__WEBPACK_IMPORTED_MODULE_1___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_1___default.a.fromJS({
    name: pluginName,
    type: opts.type || "entity",
    buttonDefs: buttonDef,
    toEditorItemDefs: {
      tagName: tagName,
      component: function component(properties) {
        var dataProps = properties.contentState.getEntity(properties.entityKey).getData().props || {};
        return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Tools.findComponent(opts.renderTagName || tagName, dataProps, properties.children);
      },
      getEditationForm: function getEditationForm(entityName, text, data, onSave, onCancel, isEdit) {
        // plugin register only choosen entity so its not needed to check entity
        var props = _objectSpread({}, data.props);

        props[opts.useContent ? "content" : "children"] = text;

        props.ref_ = function (link) {
          link.startEditation(function (reference, newProps) {
            if (newProps) {
              // set render content into content props
              if (opts.useContent) {
                data.useContent = true;
              }

              data.props = _objectSpread({}, props, newProps);
              var _text = data.props.content; // delete props added for editation

              delete data.props[opts.useContent ? "content" : "children"];
              delete data.props.ref_;
              onSave(entityName, _text, data);
            } else {
              onCancel();
            }
          });
        };

        return {
          content: uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Tools.findComponent(tagName, props),
          disableBackdrop: true,
          dialogType: "hidden"
        };
      }
    }
  }));
};
/* harmony default export */ __webpack_exports__["default"] = (PluginFactory);

/***/ }),
/* 86 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditorContext", function() { return EditorContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HtmlEditorContext", function() { return HtmlEditorContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "withEditorContext", function() { return withEditorContext; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }


var EditorContext = uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Tools.createContext();
var HtmlEditorContext = uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Tools.createContext();
var withEditorContext = function withEditorContext(Component) {
  // disable context for jest tests - enzyme doesn't support React 16.3 Context API
  if (!uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Context.create) return Component;
  var forwardRef = uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Reference.forward(function (props, ref) {
    var definedProps = {};

    for (var propName in props) {
      if (props[propName] !== undefined) {
        definedProps[propName] = props[propName];
      }
    }

    return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(EditorContext.Consumer, null, function (context) {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(Component, _extends({
        ref: ref
      }, context, definedProps));
    });
  });
  forwardRef.isUu5PureComponent = true;
  forwardRef.displayName = "forwardRef(".concat(Component.displayName || Component.name || "Component", ")");
  forwardRef.tagName = Component.tagName;
  return forwardRef;
};

/***/ }),
/* 87 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AreaLazy", function() { return AreaLazy; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _internal_suspense_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(29);
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

//@@viewOn:imports


var Area = Object(_internal_suspense_js__WEBPACK_IMPORTED_MODULE_1__["lazy"])(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(__webpack_require__(88));
  });
}); //@@viewOff:imports

var AreaLazy = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.VisualComponent.create({
  displayName: "UU5.RichText.AreaLazy",
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.BaseMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    tagName: "UU5.RichText.AreaLazy",
    getDerivedStateFromError: function getDerivedStateFromError(error) {
      return {
        error: error
      };
    },
    opt: {
      hoc: true
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  //@@viewOff:getDefaultProps
  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    return {
      error: null
    };
  },
  //@@viewOff:standardComponentLifeCycle
  //@@viewOn:interface
  //@@viewOff:interface
  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods
  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers
  //@@viewOn:render
  render: function render() {
    var error = this.state.error;
    return error ? uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Error, {
      error: error,
      content: "UU5.RichText.Area failed to render.",
      moreInfo: true
    }) : uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(_internal_suspense_js__WEBPACK_IMPORTED_MODULE_1__["Suspense"], {
      fallback: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.Loading, null)
    }, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(Area, this.props));
  } //@@viewOff:render

});
/* harmony default export */ __webpack_exports__["default"] = (AreaLazy);

/***/ }),
/* 88 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Area", function() { return Area; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(11);
/* harmony import */ var uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(89);
/* harmony import */ var draft_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(31);
/* harmony import */ var draft_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(draft_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _bricks_entity_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(91);
/* harmony import */ var _bricks_selection_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(92);
/* harmony import */ var _bricks_style_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(93);
/* harmony import */ var _area_less__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(94);
/* harmony import */ var _area_less__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_area_less__WEBPACK_IMPORTED_MODULE_8__);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

//@@viewOn:imports








 //@@viewOff:imports

var MAX_DEPTH = 10;
var Area = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.BaseMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    tagName: _config_js__WEBPACK_IMPORTED_MODULE_2__["default"].TAG + "Area",
    classNames: {
      main: _config_js__WEBPACK_IMPORTED_MODULE_2__["default"].CSS + "area"
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  propTypes: {
    value: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string,
    onChange: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.func,
    onBlur: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.func,
    onFocus: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.func,
    onPaste: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.func,
    readOnly: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.bool,
    handleKeyCommand: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.bool,
    getToolbar: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.func,
    placeholder: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string,
    forceRenderModal: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.bool
  },
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      value: "",
      onChange: null,
      onBlur: null,
      onFocus: null,
      onPaste: null,
      readOnly: undefined,
      handleKeyCommand: false,
      getToolbar: null,
      forceRenderModal: false
    };
  },
  //@@viewOff:getDefaultProps
  //@@viewOn:reactLifeCycle
  // rename editorState to data
  getInitialState: function getInitialState() {
    this._enterCommands = [{
      shiftKey: true,
      fn: this._handleLineBreaks
    }];
    this._tabCommands = [];
    this._otherCommands = [];
    return {
      editorState: this.props.value ? draft_js__WEBPACK_IMPORTED_MODULE_3__["EditorState"].createWithContent(draft_js__WEBPACK_IMPORTED_MODULE_3__["ContentState"].createFromText(this.props.value)) : draft_js__WEBPACK_IMPORTED_MODULE_3__["EditorState"].createEmpty(),
      readOnly: this.props.readOnly,
      customStyleMap: {},
      customStyleFns: [],
      blockRenderMap: draft_js__WEBPACK_IMPORTED_MODULE_3__["DefaultDraftBlockRenderMap"],
      getEditationFormMap: {}
    };
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    if (nextProps.readOnly !== undefined && nextProps.readOnly !== this.props.readOnly) {
      this.setState({
        readOnly: nextProps.readOnly
      });
    }
  },
  componentDidMount: function componentDidMount() {
    this._updateStyles();
  },
  componentDidUpdate: function componentDidUpdate() {
    this._updateStyles();
  },
  //@@viewOff:reactLifeCycle
  //@@viewOn:interface
  setEditorState: function setEditorState(editorState) {
    var focus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
    var seStateCallback = arguments.length > 2 ? arguments[2] : undefined;

    if (!editorState) {
      editorState = draft_js__WEBPACK_IMPORTED_MODULE_3__["EditorState"].createEmpty();
    }

    var newState = {
      editorState: editorState
    }; // editorState may contain unknown inline styles, parse them and update customStyleMap if there is some unknown inline style with correct format

    var customStyleMap = this._updateCustomStyleMap(editorState);

    if (customStyleMap) {
      newState.customStyleMap = customStyleMap;
    }

    this._handleChangeState(newState, seStateCallback, focus);

    return this;
  },
  modifyEditorState: function modifyEditorState(editorState, updateObj, historyLog) {
    var currentContent = updateObj.currentContent,
        otherUpdates = _objectWithoutProperties(updateObj, ["currentContent"]);

    var newEditorState = editorState;

    if (otherUpdates) {
      newEditorState = draft_js__WEBPACK_IMPORTED_MODULE_3__["EditorState"].set(newEditorState, otherUpdates);
    }

    if (currentContent) {
      if (historyLog) {
        // save previous content to History
        newEditorState = draft_js__WEBPACK_IMPORTED_MODULE_3__["EditorState"].push(newEditorState, currentContent, historyLog);
      } else {
        // modify editorState without save to history
        newEditorState = draft_js__WEBPACK_IMPORTED_MODULE_3__["EditorState"].set(newEditorState, {
          currentContent: currentContent
        });
      }
    }

    return newEditorState;
  },
  updateEditorState: function updateEditorState(editorState, updateObj, focus, setStateCallback) {
    return this.setEditorState(draft_js__WEBPACK_IMPORTED_MODULE_3__["EditorState"].set(editorState, updateObj), focus, setStateCallback);
  },
  getEditorState: function getEditorState() {
    return this.state.editorState;
  },
  setReadOnly: function setReadOnly() {
    var readOnly = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
    var setStateCallback = arguments.length > 1 ? arguments[1] : undefined;
    this.setState({
      readOnly: readOnly
    }, setStateCallback);
    return this;
  },
  isReadOnly: function isReadOnly() {
    return this.state.readOnly;
  },
  addInlineStyle: function addInlineStyle(name, style) {
    this.setState(function (state) {
      // handle styles defined as a function
      if (typeof style === "function") {
        // check if style is not already exist
        if (state.customStyleFns.find(function (item) {
          return item.name === name;
        })) {
          return;
        }

        return {
          customStyleFns: [].concat(_toConsumableArray(state.customStyleFns), [{
            name: name,
            style: style
          }])
        };
      } // check if someone tries to change existing style


      if (state.customStyleMap && state.customStyleMap[name]) {
        return;
      }

      var newStyleMap = state.customStyleMap ? JSON.parse(JSON.stringify(state.customStyleMap)) : {};
      newStyleMap[name] = style;
      return {
        customStyleMap: newStyleMap
      };
    });
    return this;
  },
  setCustomStyleMap: function setCustomStyleMap(customStyleMap) {
    var styleMap = {};
    var styleFns = [];

    for (var name in customStyleMap) {
      var style = customStyleMap[name];

      if (typeof style === "function") {
        styleFns.push({
          name: name,
          style: style
        });
      } else {
        styleMap[name] = style;
      }
    }

    this.setState({
      customStyleMap: styleMap,
      customStyleFns: styleFns
    });
    return this;
  },
  setBlockRenderMap: function setBlockRenderMap(blockRenderMap) {
    // keep support for other draft default block types and add our myCustomBlock type
    this.setState({
      blockRenderMap: this._createBlockRenderMap(blockRenderMap)
    });
    return this;
  },
  setBlockRendererFn: function setBlockRendererFn(blockRendererFn) {
    this.setState({
      blockRendererFn: blockRendererFn
    });
    return this;
  },
  setDecorators: function setDecorators(decorators) {
    this.setState({
      editorState: this._createEditorStateWithDecorators(decorators)
    });
    return this;
  },
  set: function set(config) {
    var _this = this;

    var newState = {}; // process blockRendererFn

    if (config.blockRendererFn) {
      newState.blockRendererFn = config.blockRendererFn;
    } // process blockRenderMap


    if (config.blockRenderMap) {
      newState.blockRenderMap = this._createBlockRenderMap(config.blockRenderMap);
    } // customStyleMap


    if (config.customStyleMap) {
      var styleMap = {};
      var styleFns = [];

      for (var name in config.customStyleMap) {
        var style = config.customStyleMap[name];

        if (typeof style === "function") {
          styleFns.push({
            name: name,
            style: style
          });
        } else {
          styleMap[name] = style;
        }
      }

      newState.customStyleMap = styleMap;
      newState.customStyleFns = styleFns;
    } // getEditationFormMap - map of functions that returns editation form


    if (config.getEditationFormMap) {
      newState.getEditationFormMap = config.getEditationFormMap;
    } // process editorState and decorators


    if (config.editorState) {
      // dont process decorators - editor state contains information about decorators
      newState.editorState = config.editorState; // update customStyleMap - only if editor state was set

      var updatedStyleMap = this._updateCustomStyleMap(newState.editorState, newState.customStyleMap || this.state.customStyleMap);

      if (updatedStyleMap) {
        newState.customStyleMap = updatedStyleMap;
      }
    } else if (config.decorators) {
      newState.editorState = this._createEditorStateWithDecorators(config.decorators);
    } // empty commands


    this._enterCommands = [{
      shiftKey: true,
      fn: this._handleLineBreaks
    }];
    this._entityOptions = config.entityOptions; // error plugin does not send its options by this config - only decorator so we add it manually

    this._entityOptions.error = {
      preserveEnters: true
    };
    this._otherCommands = [];
    this._tabCommands = [];

    if (config.commands) {
      config.commands.forEach(function (command) {
        if (command.keyCode === 13) {
          _this._enterCommands.push(command);
        } else if (command.keyCode === 9) {
          _this._tabCommands.push(command);
        } else {
          _this._otherCommands.push(_objectSpread({}, command, {
            code: "cmd_" + _this._otherCommands.length
          }));
        }
      });
    }

    this.setState(newState);
    return this;
  },
  toggleInlineStyle: function toggleInlineStyle(inlineStyle, preserveStyle, focus) {
    var state = {
      editorState: _bricks_style_js__WEBPACK_IMPORTED_MODULE_7__["default"].toggleInline(this.getEditorState(), inlineStyle, preserveStyle)
    };
    var callback;

    if (focus) {
      callback = this.focus;
    } // check if inline style is defined
    // if doesn't try to parse style from its string representation


    if (!this.state.customStyleMap[inlineStyle]) {
      var styleParts = inlineStyle.match(/^[^.]+\.([^:]+):(.*)$/);

      if (styleParts) {
        var customStyleMap = JSON.parse(JSON.stringify(this.state.customStyleMap));
        var style = {};
        style[styleParts[1]] = styleParts[2];
        customStyleMap[inlineStyle] = style;
        state.customStyleMap = customStyleMap;
      }
    }

    this._handleChangeState(state, callback);

    return this;
  },
  toggleBlockStyle: function toggleBlockStyle(blockStyles, setStateCallback) {
    this._updateEditorStateByFn(setStateCallback, _bricks_style_js__WEBPACK_IMPORTED_MODULE_7__["default"].toggleSelectedBlocksStyles, blockStyles);

    return this;
  },
  toggleBlockType: function toggleBlockType(blockType, setStateCallback) {
    this._updateEditorStateByFn(setStateCallback, _bricks_style_js__WEBPACK_IMPORTED_MODULE_7__["default"].toggleBlock, blockType);

    return this;
  },
  editSelectedComponent: function editSelectedComponent(entityName, button, aroundElement, setStateCallback) {
    // check if some editation is already in propgress
    if (this._openedDialogParams) {
      var onlyCloseDialog = this._openedDialogParams.entityName === entityName;

      this._closeDialog(true); // if is started editation of the same component - only close dialog


      if (onlyCloseDialog) {
        return;
      }
    } // find selected entity - startOffset is inside entity


    var editorState = this.getEditorState();
    var entityKey = _bricks_entity_js__WEBPACK_IMPORTED_MODULE_5__["default"].getCurrentEntityKey(editorState);
    var entity = entityKey ? _bricks_entity_js__WEBPACK_IMPORTED_MODULE_5__["default"].getEntityByKey(editorState, entityKey) : null;
    var getEditationForm = this.state.getEditationFormMap[entityName]; // check if selected entity is the one we want to edit

    if (entity && entity.getType() === entityName) {
      // update selection to select whole entity - need to get text of entity
      var newEditorState = _bricks_entity_js__WEBPACK_IMPORTED_MODULE_5__["default"].seĺectEntity(editorState, entityKey);
      var data = entity.getData(); // show eidtation form

      newEditorState = this._showComponentForm(newEditorState, entityName, button, aroundElement, getEditationForm, data, true, setStateCallback) || newEditorState;
      this.setEditorState(newEditorState);
    } else {
      // show editation form
      this._showComponentForm(editorState, entityName, button, aroundElement, getEditationForm, undefined, false, setStateCallback);
    }
  },
  createEntity: function createEntity(editorState, setStateCallback, entityName) {
    var _this2 = this;

    var text = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "\u200B";
    var data = arguments.length > 4 ? arguments[4] : undefined;
    var opts = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};
    var entityKey = _bricks_entity_js__WEBPACK_IMPORTED_MODULE_5__["default"].create(editorState, entityName, opts.isMutable, data); // update inline component

    var newEditorState = draft_js__WEBPACK_IMPORTED_MODULE_3__["RichUtils"].toggleLink(editorState, editorState.getSelection(), entityKey); // replace text of selection

    if (text !== null) {
      var content = draft_js__WEBPACK_IMPORTED_MODULE_3__["Modifier"].replaceText(newEditorState.getCurrentContent(), newEditorState.getSelection(), text, undefined, entityKey); // update editor content

      newEditorState = draft_js__WEBPACK_IMPORTED_MODULE_3__["EditorState"].push(newEditorState, content, "create entity");
    } // update selection - set selection after component and update state


    if (!opts.preserveSelection) {
      _bricks_selection_js__WEBPACK_IMPORTED_MODULE_6__["default"].moveSelectionAfterEntity(newEditorState, entityKey, function (editorState) {
        return _this2.setEditorState(editorState, undefined, setStateCallback);
      });
    } else {
      this.setEditorState(newEditorState, undefined, setStateCallback);
    }
  },
  focus: function focus() {
    var _this3 = this;

    if (this.state.readOnly) {
      // prevent focusing readonly instance of editor
      return;
    }

    var editorState = this.getEditorState();
    var newEditorState = draft_js__WEBPACK_IMPORTED_MODULE_3__["EditorState"].set(editorState, {
      selection: editorState.getSelection().set("hasFocus", true),
      forceSelection: true,
      nativelyRenderedContent: null
    });
    this.setEditorState(newEditorState, false, function () {
      if (typeof _this3.props.onFocus === "function") {
        _this3.props.onFocus();
      }
    });
    return;
  },
  getStyles: function getStyles() {
    return this._styles;
  },
  // API for work with entity
  selectCurrentEntity: function selectCurrentEntity(editorState, entityName) {
    return _bricks_entity_js__WEBPACK_IMPORTED_MODULE_5__["default"].selectCurrentEntity(editorState, entityName);
  },
  // API for work with styles
  toggleBlockStyles: function toggleBlockStyles(editorState, block, blockStyle, toggleFn) {
    return _bricks_style_js__WEBPACK_IMPORTED_MODULE_7__["default"].toggleBlockStyles(editorState, block, blockStyle, toggleFn);
  },
  toggleSelectedBlocksStyles: function toggleSelectedBlocksStyles(editorState, blockStyle, toggleFn) {
    return _bricks_style_js__WEBPACK_IMPORTED_MODULE_7__["default"].toggleSelectedBlocksStyles(editorState, blockStyle, toggleFn);
  },
  getCurrentStylesWithPrefix: function getCurrentStylesWithPrefix(editorState, prefix) {
    return _bricks_style_js__WEBPACK_IMPORTED_MODULE_7__["default"].getCurrentStylesWithPrefix(editorState, prefix);
  },
  toggleBlock: function toggleBlock(editorState, blockType) {
    return _bricks_style_js__WEBPACK_IMPORTED_MODULE_7__["default"].toggleBlock(editorState, blockType);
  },
  removeInlineStyle: function removeInlineStyle(editorState, inlineStyle) {
    return _bricks_style_js__WEBPACK_IMPORTED_MODULE_7__["default"].removeInline(editorState, inlineStyle);
  },
  // API fro work with Selection
  updateSelection: function updateSelection(editorState, update) {
    return _bricks_selection_js__WEBPACK_IMPORTED_MODULE_6__["default"].updateSelection(editorState, update);
  },
  updateSelectedBlocks: function updateSelectedBlocks(editorState, update) {
    return _bricks_selection_js__WEBPACK_IMPORTED_MODULE_6__["default"].updateSelectedBlocks(editorState, update);
  },
  //@@viewOff:interface
  //@@viewOn:overriding
  //@@viewOff:overriding
  //@@viewOn:private
  _updateEditorStateByFn: function _updateEditorStateByFn(setStateCallback, fn) {
    var _this4 = this;

    for (var _len = arguments.length, params = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      params[_key - 2] = arguments[_key];
    }

    this.setState(function (state) {
      var newEditorState = fn.apply(void 0, [state.editorState].concat(params));

      if (newEditorState) {
        _this4._notifyOnChange(newEditorState);

        return {
          editorState: newEditorState
        };
      }
    }, setStateCallback);
  },
  _notifyOnChange: function _notifyOnChange(editorState) {
    // update toolbar
    if (typeof this.props.getToolbar === "function") {
      var toolbar = this.props.getToolbar();

      if (toolbar) {
        toolbar.update(editorState);
      }
    }
  },
  _onChange: function _onChange(editorState, setStateCallback, focusEditor) {
    this._handleChangeState({
      editorState: editorState
    }, setStateCallback, focusEditor);
  },
  _handleChangeState: function _handleChangeState(state, setStateCallback, focusEditor) {
    var _this5 = this;

    // call onChange props function
    if (typeof this.props.onChange === "function") {
      state.editorState = this.props.onChange(this, state.editorState) || state.editorState;
    }

    this.setState(state, function () {
      _this5._notifyOnChange(_this5.state.editorState);

      if (focusEditor && !_this5.state.readOnly) {
        _this5._editor.focus();
      }

      return typeof setStateCallback === "function" && setStateCallback();
    });
  },
  _handleTab: function _handleTab(event) {
    var editorState = this.getEditorState(); // call all commands

    for (var i = 0; i < this._tabCommands.length; i++) {
      var command = this._tabCommands[i];

      if ((command.shiftKey || false) === event.shiftKey && (command.ctrlKey || false) === event.ctrlKey && (command.altKey || false) === event.altKey) {
        var result = command.fn(editorState, this);

        if (result) {
          // command was handled -> prevent default behavior
          event.stopPropagation();
          event.preventDefault();
          return result;
        }
      }
    }

    var newEditorState = draft_js__WEBPACK_IMPORTED_MODULE_3__["RichUtils"].onTab(event, editorState, MAX_DEPTH);

    if (newEditorState !== editorState) {
      this.setEditorState(newEditorState);
    }
  },
  _handleKeyCommand: function _handleKeyCommand(command) {
    // run default key commands
    var editorState = draft_js__WEBPACK_IMPORTED_MODULE_3__["RichUtils"].handleKeyCommand(this.getEditorState(), command); // RichUtils.handleKeyCommand returns null as a result for Enter key

    if (editorState && editorState !== this.getEditorState()) {
      // update editorState and mark command as handled
      this.setEditorState(editorState);
      return "handled";
    } else {
      // apply custom commands
      for (var i = 0; i < this._otherCommands.length; i++) {
        var cmd = this._otherCommands[i];

        if (cmd.code === command) {
          editorState = cmd.fn(this.getEditorState(), this);

          if (editorState) {
            if (_typeof(editorState) === "object") {
              this.setEditorState(editorState);
            }

            return "handled";
          }
        }
      }
    }

    return "not-handled";
  },
  _handleReturn: function _handleReturn(event, editorState) {
    // call all commands
    for (var i = 0; i < this._enterCommands.length; i++) {
      var command = this._enterCommands[i];

      if ((command.shiftKey || false) === event.shiftKey && (command.ctrlKey || false) === event.ctrlKey && (command.altKey || false) === event.altKey) {
        var result = command.fn(editorState, this);

        if (result) {
          event.stopPropagation();
          event.preventDefault();
          return result;
        }
      }
    }

    if (event.shiftKey) {
      this._onChange(draft_js__WEBPACK_IMPORTED_MODULE_3__["RichUtils"].insertSoftNewline(editorState));

      return true;
    }

    return false;
  },
  _handleLineBreaks: function _handleLineBreaks(editorState, area) {
    // for shift + enter manually insert line break to prevent breaking entity into two parts
    // find entity and check if enter is pressed inside uu5string
    var selection = editorState.getSelection();
    var content = editorState.getCurrentContent();
    var block = content.getBlockForKey(selection.getStartKey());
    var entityKey = block.getEntityAt(selection.getEndOffset());

    if (entityKey) {
      var entity = content.getEntity(entityKey);

      var entityOptions = this._entityOptions[entity.getType()];

      if (entityOptions && entityOptions.preserveEnters) {
        // add \n char into text and move cursor after that character
        area.setEditorState(_bricks_selection_js__WEBPACK_IMPORTED_MODULE_6__["default"].insertText(editorState, "\n"));
        return true;
      }
    }

    return false;
  },
  _registerEditor: function _registerEditor(editor) {
    this._editor = editor;
  },
  _createEditorStateWithDecorators: function _createEditorStateWithDecorators(decorators) {
    var editorContent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getEditorState().getCurrentContent();
    var compositeDecorators = new draft_js__WEBPACK_IMPORTED_MODULE_3__["CompositeDecorator"](decorators);
    return draft_js__WEBPACK_IMPORTED_MODULE_3__["EditorState"].createWithContent(editorContent, compositeDecorators);
  },
  _createBlockRenderMap: function _createBlockRenderMap(blockRenderMap) {
    return blockRenderMap ? immutable__WEBPACK_IMPORTED_MODULE_4___default.a.Map(blockRenderMap) : draft_js__WEBPACK_IMPORTED_MODULE_3__["DefaultDraftBlockRenderMap"];
  },
  // component editation
  _showComponentForm: function _showComponentForm(editorState, entityName, button, aroundElement, getEditationForm) {
    var _this6 = this;

    var data = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};
    var isEdit = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;
    var setStateCallback = arguments.length > 7 ? arguments[7] : undefined;

    // handle non existing element - show form around selection
    if (!aroundElement) {
      // use native selection API to find selected node
      var selection = getSelection();
      var selectedNode = selection.anchorNode || selection.focusNode;

      while (selectedNode.nodeType !== 1) {
        selectedNode = selectedNode.parentNode;
      }

      aroundElement = selectedNode;
    } // get content for modal from plugin


    var text = _bricks_selection_js__WEBPACK_IMPORTED_MODULE_6__["default"].getSelectedText(editorState); // this._pluginMap[entityName].getEditationForm

    if (typeof getEditationForm === "function") {
      var formDef = getEditationForm(entityName, text, data, function () {
        for (var _len2 = arguments.length, props = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          props[_key2] = arguments[_key2];
        }

        _this6._addComponent.apply(_this6, [editorState, setStateCallback].concat(props)); // close modal


        _this6._closeDialog();
      }, function () {
        _this6._closeDialog();
      }, isEdit);

      this._openDialog(formDef, button, aroundElement, entityName);
    } else {
      if (isEdit) {
        // selection is inside existing entity => remove entity
        return _bricks_selection_js__WEBPACK_IMPORTED_MODULE_6__["default"].removeEntityFromSelection(editorState, editorState.getSelection());
      } else {
        this._addComponent(editorState, setStateCallback, entityName, text, data, {
          preserveSelection: true
        });
      }
    }
  },
  _addComponent: function _addComponent(editorState, setStateCallback, entityName, text, data, opts) {
    // update entity by new data
    this.createEntity(editorState, setStateCallback, entityName, text, data, opts);
  },
  _registerModal: function _registerModal(modal) {
    this._modal = modal;
  },
  _registerPopover: function _registerPopover(popover) {
    this._popover = popover;
  },
  _openDialog: function _openDialog(opts, button, aroundElement, entityName) {
    var _this7 = this;

    // close opened dialog
    if (this._openedDialogParams) {
      this._closeDialog(true);
    }

    this._openedDialogParams = {
      opts: opts,
      button: button,
      aroundElement: aroundElement,
      entityName: entityName
    }; // open new dialog

    this.setReadOnly(true, function () {
      var isPopover = opts.isPopover,
          dialogType = opts.dialogType,
          props = _objectWithoutProperties(opts, ["isPopover", "dialogType"]);

      isPopover = dialogType === undefined ? isPopover : dialogType === "popover";
      var isHidden = dialogType === "hidden";

      if (isPopover) {
        if (button && typeof button.press === "function") {
          button.press();
        }

        if (props.onClose) {
          props.onClose = function () {
            props.onClose.apply(props, arguments);

            _this7._onClosePopover.apply(_this7, arguments);
          };
        }

        _this7._popover.open(_objectSpread({
          onClose: _this7._onClosePopover,
          aroundElement: aroundElement,
          position: "bottom",
          offset: 4
        }, props));
      } else if (isHidden) {
        _this7.setState({
          hiddenContent: props.content
        });
      } else {
        _this7._modal.open(props);
      }
    });
  },
  _closeDialog: function _closeDialog(preventStateChange) {
    if (!this._openedDialogParams) return; // no opened dialog registered

    var isPopover = this._openedDialogParams.opts.dialogType === undefined ? this._openedDialogParams.opts.isPopover : this._openedDialogParams.opts.dialogType === "popover";
    var isHidden = this._openedDialogParams.opts.dialogType === "hidden";

    if (isHidden) {
      this._closeHidden();
    } else {
      isPopover ? this._closePopover() : this._closeModal(preventStateChange);
    }
  },
  _closeHidden: function _closeHidden() {
    var _this8 = this;

    this.setReadOnly(false, function () {
      _this8.setState({
        hiddenContent: null
      }, _this8.focus);
    });
    delete this._openedDialogParams;
  },
  _closeModalAndEnableEditor: function _closeModalAndEnableEditor() {
    this._closeModal();
  },
  _closeModal: function _closeModal(preventStateChange) {
    var _this9 = this;

    if (preventStateChange) {
      this._modal.close(false);
    } else {
      this.setReadOnly(false, function () {
        _this9._modal.close(false);

        _this9.focus();
      });
    }

    delete this._openedDialogParams;
  },
  _closePopover: function _closePopover() {
    var _this10 = this;

    this.setReadOnly(false, function () {
      _this10._popover.close();

      _this10._onClosePopover(true);

      _this10.focus();
    });
  },
  _onClosePopover: function _onClosePopover(preventStateChange) {
    if (!this._openedDialogParams) return; // no opened dialog registered
    // enable editor

    if (!preventStateChange) {
      this.setReadOnly(false);
    }

    if (this._openedDialogParams.button && typeof this._openedDialogParams.button.pressUp === "function") {
      this._openedDialogParams.button.pressUp();
    }

    delete this._openedDialogParams;
  },
  _updateCustomStyleMap: function _updateCustomStyleMap() {
    var editorState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state.editorState;
    var customStyleMap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state.customStyleMap;
    var raw = Object(draft_js__WEBPACK_IMPORTED_MODULE_3__["convertToRaw"])(editorState.getCurrentContent());
    var updated = false;

    for (var i = 0; i < raw.blocks.length; i++) {
      var block = raw.blocks[i];

      if (block.inlineStyleRanges) {
        for (var styleIndex = 0; styleIndex < block.inlineStyleRanges.length; styleIndex++) {
          var styleName = block.inlineStyleRanges[styleIndex].style; // check if style is already in styleMap

          if (!customStyleMap[styleName]) {
            // try to parse style
            var postfix = styleName.match(/^[^.]+\.(.*)$/);
            if (!postfix) continue;
            var parts = postfix[1].split(";");
            var styleDefinition = {};

            for (var partIndex = 0; partIndex < parts.length; partIndex++) {
              var styleParts = parts[partIndex].match(/^([^:]+):(.+)$/); // let styleParts = styleName.match(/^[^.]+\.([^:]+):(.*)$/);

              if (styleParts) {
                // add style into styleMap
                if (!updated) {
                  updated = true; // clone customStyleMap - only first time

                  customStyleMap = JSON.parse(JSON.stringify(customStyleMap));
                }

                styleDefinition[styleParts[1]] = styleParts[2];
              }
            } // update style map


            if (Object.keys(styleDefinition).length) {
              customStyleMap[styleName] = styleDefinition;
            }
          }
        }
      }
    }

    if (updated) {
      return customStyleMap;
    }
  },
  _keyBindingFn: function _keyBindingFn(e) {
    var _this11 = this;

    if (draft_js__WEBPACK_IMPORTED_MODULE_3__["KeyBindingUtil"].hasCommandModifier(e)) {
      for (var i = 0; i < this._otherCommands.length; i++) {
        var cmd = this._otherCommands[i];
        if (cmd.alt && !e.altKey) continue;
        if (cmd.keyCode !== e.which) continue;
        return cmd.code;
      } // handle CTRL/CMD + X to to fix default Draft's behavior


      if (e.keyCode === 88
      /* X key */
      ) {
          // draft reads scroll position from our inner scrollbar and after cut of text draft updates scroll position on parent scrollbar
          // to disable this behavior we need to temporary overwrite method restoreEditorDOM to remove input paramter scrollPosition
          var fn = this._editor.restoreEditorDOM;

          this._editor.restoreEditorDOM = function () {
            _this11._editor.restoreEditorDOM = fn;

            _this11._editor.restoreEditorDOM();
          };

          return null; // let process standart cut operation by draft
        } // block key for command "code" - creates code block
      // we want to allow only inline formatting - bold, italic, underline


      if (e.keyCode === 74
      /* J key */
      ) {
          return null;
        }
    }

    return Object(draft_js__WEBPACK_IMPORTED_MODULE_3__["getDefaultKeyBinding"])(e);
  },
  _handlePaste: function _handlePaste(text, html, editorState) {
    if (typeof this.props.onPaste === "function") {
      return this.props.onPaste(text, html, editorState);
    }

    return false; // not handled
  },
  _showPlaceholder: function _showPlaceholder() {
    var editorState = this.getEditorState();
    var content = editorState.getCurrentContent();
    var blocks = content.getBlocksAsArray();

    if (blocks.length === 1 && blocks[0].getType() === "unstyled" && !blocks[0].getText()) {
      return this.props.placeholder;
    }
  },
  _updateStyles: function _updateStyles() {
    // eslint-disable-next-line react/no-find-dom-node
    this._styles = getComputedStyle(this.findDOMNode());
  },
  _customStyleFn: function _customStyleFn(styleSet, block) {
    var _this12 = this;

    var styleObj = {};
    var result = {};
    styleSet.forEach(function (item) {
      var style = _this12.state.customStyleMap[item];

      if (style) {
        styleObj = _objectSpread({}, styleObj, style);
      }
    });

    for (var i = 0; i < this.state.customStyleFns.length; i++) {
      var styleFn = this.state.customStyleFns[i];

      if (styleSet.get(styleFn.name)) {
        var res = styleFn.style(styleObj, block);

        if (res) {
          result = _objectSpread({}, result, res);
          styleObj = _objectSpread({}, styleObj, res);
        }
      }
    }

    return result;
  },
  //@@viewOff:private
  //@@viewOn:render
  render: function render() {
    return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Fragment, null, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(draft_js__WEBPACK_IMPORTED_MODULE_3__["Editor"], _extends({
      ref: this._registerEditor
    }, this.getMainAttrs(), {
      placeholder: this._showPlaceholder(),
      readOnly: this.isReadOnly(),
      editorState: this.getEditorState(),
      onChange: this._onChange,
      onTab: this._handleTab,
      customStyleMap: this.state.customStyleMap,
      customStyleFn: this._customStyleFn,
      blockRendererFn: this.state.blockRendererFn,
      blockRenderMap: this.state.blockRenderMap,
      keyBindingFn: this.props.handleKeyCommand ? this._keyBindingFn : undefined,
      handleKeyCommand: this.props.handleKeyCommand ? this._handleKeyCommand : undefined,
      onBlur: this.props.onBlur,
      onFocus: this.props.onFocus,
      handlePastedText: this._handlePaste,
      handleReturn: this._handleReturn
    })), uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.PortalModal, {
      ref_: this._registerModal,
      onClose: this._closeModalAndEnableEditor,
      forceRender: this.props.forceRenderModal
    }), uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.PortalPopover, {
      ref: this._registerPopover
    }), uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.Div, {
      hidden: true,
      key: "hiddenArea"
    }, this.state.hiddenContent));
  } //@@viewOff:render

});
/* harmony default export */ __webpack_exports__["default"] = (Area);

/***/ }),
/* 89 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _config_config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(90);
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }


/* harmony default export */ __webpack_exports__["default"] = (_objectSpread({}, _config_config_js__WEBPACK_IMPORTED_MODULE_0__["default"], {
  TAG: _config_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].TAG + "RichText.",
  CSS: _config_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].CSS + "richtext-"
}));

/***/ }),
/* 90 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// This file was auto-generated according to the "namespace" setting in package.json.
// Manual changes to this file are discouraged, if values are inconsistent with package.json setting.
/* harmony default export */ __webpack_exports__["default"] = ({
  TAG: "UU5.",
  CSS: "uu5-"
});

/***/ }),
/* 91 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var draft_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(31);
/* harmony import */ var draft_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(draft_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _selection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(92);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_2__);



var Entity = {
  getDefaultStrategy: function getDefaultStrategy(entityName) {
    return function (contentBlock, callback, content) {
      contentBlock.findEntityRanges(function (character) {
        var entityKey = character.getEntity();
        return entityKey !== null && content.getEntity(entityKey).getType() === entityName;
      }, callback);
    };
  },
  getDefaultEntityForm: function getDefaultEntityForm(_ref) {
    var tag = _ref.tag,
        props = _ref.props,
        _onSave = _ref.onSave,
        _onCancel = _ref.onCancel,
        text = _ref.text;
    return uu5g04__WEBPACK_IMPORTED_MODULE_2__["Common"].UU5String.toChildren("<uu5string />\n      <UU5.Forms.Form onSave=\"${onSave}\" onCancel=\"${onCancel}\">\n      <UU5.Forms.Text label=\"Tag name\" name=\"tag\" value=\"${tag}\" disabled />\n      <UU5.CodeKit.JsonEditor label=\"Props\" name=\"props\" ".concat(props ? 'value="${props}"' : "", " />\n      <UU5.Forms.Text label=\"content\" name=\"text\" ").concat(text ? 'value="${text}"' : "", " />\n      <UU5.Forms.Controls /></UU5.Forms.Form>"), {
      onSave: function onSave() {
        return _onSave;
      },
      onCancel: function onCancel() {
        return _onCancel;
      },
      tag: tag,
      props: JSON.stringify(props || {}),
      text: text
    });
  },
  getCurrentEntityKey: function getCurrentEntityKey(editorState) {
    var selection = editorState.getSelection();
    var content = editorState.getCurrentContent();
    var blockKey = selection.getStartKey();
    var block = content.getBlockForKey(blockKey);
    return block.getEntityAt(selection.getStartOffset());
  },
  getEntityByKey: function getEntityByKey(editorState, entityKey) {
    return editorState.getCurrentContent().getEntity(entityKey);
  },
  getCurrentEntity: function getCurrentEntity(editorState) {
    var entityKey = Entity.getCurrentEntityKey(editorState);
    return entityKey && Entity.getEntityByKey(editorState, entityKey);
  },
  seĺectEntity: function seEctEntity(editorState, entityKey) {
    var newEditorState = editorState;
    var selection = editorState.getSelection();
    var content = editorState.getCurrentContent();
    var blockKey = selection.getStartKey();
    var block = content.getBlockForKey(blockKey); // update selection - select whole component

    block.findEntityRanges(function (character) {
      return character.getEntity() === entityKey;
    }, function (startOffset, endOffset) {
      newEditorState = _selection_js__WEBPACK_IMPORTED_MODULE_1__["default"].updateSelection(editorState, {
        startOffset: startOffset,
        endOffset: endOffset
      });
    });
    return newEditorState;
  },
  selectCurrentEntity: function selectCurrentEntity(editorState, entityName) {
    var selection = editorState.getSelection();
    var content = editorState.getCurrentContent();
    var block = content.getBlockForKey(selection.getAnchorKey());
    var entityKey = block.getEntityAt(selection.getStartOffset());
    var entity = entityKey && content.getEntity(entityKey);

    if (entity && entity.getType() === entityName) {
      // update selection over whole entity
      return Entity.seĺectEntity(editorState, entityKey);
    }

    return editorState;
  },
  toggle: function toggle(editorState, entityName, props, data) {
    var content = editorState.getCurrentContent();
    content.createEntity(entityName, "MUTABLE", {
      props: props,
      data: data
    });
    var compKey = content.getLastCreatedEntityKey(); // update inline component

    editorState = draft_js__WEBPACK_IMPORTED_MODULE_0__["RichUtils"].toggleLink(editorState, editorState.getSelection(), compKey);
  },
  remove: function remove(editorState) {
    return editorState;
  },
  create: function create(editorState, entityName) {
    var isMutable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
    var data = arguments.length > 3 ? arguments[3] : undefined;
    var content = editorState.getCurrentContent();
    content.createEntity(entityName, isMutable ? "MUTABLE" : "IMMUTABLE", data);
    return content.getLastCreatedEntityKey();
  }
};
/* harmony default export */ __webpack_exports__["default"] = (Entity);

/***/ }),
/* 92 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var draft_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(31);
/* harmony import */ var draft_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(draft_js__WEBPACK_IMPORTED_MODULE_0__);

var Selection = {
  getSelectedText: function getSelectedText() {
    var editorState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state.editorState;
    var selection = editorState.getSelection();
    var text = "";

    if (selection.isCollapsed()) {
      return text;
    }

    var isInside = false;
    var content = editorState.getCurrentContent();
    var blocks = content.getBlocksAsArray();

    for (var index in blocks) {
      var block = blocks[index];

      if (block.getKey() === selection.getStartKey()) {
        isInside = true;

        if (block.getKey() === selection.getEndKey()) {
          text = block.getText().substring(selection.getStartOffset(), selection.getEndOffset());
          break;
        }

        text = block.getText().substring(selection.getStartOffset());
        continue;
      } // skip block if is outside of selection


      if (!isInside) continue;

      if (block.getKey() === selection.getEndKey()) {
        text += block.getText().substring(0, selection.getEndOffset());
        isInside = false;
        break;
      } // append text


      text += block.getText();
    }

    return text;
  },
  moveSelectionAfterEntity: function moveSelectionAfterEntity(editorState, entityKey, callback) {
    var contentBlock = Selection.getSelectedBlock(editorState);
    contentBlock.findEntityRanges(function (character) {
      return character.getEntity() === entityKey;
    }, function (startOffset, endOffset) {
      callback(Selection.updateSelection(editorState, {
        startOffset: endOffset,
        endOffset: endOffset
      }));
    });
  },
  getSelectedBlock: function getSelectedBlock(editorState) {
    var selection = editorState.getSelection();
    var content = editorState.getCurrentContent();
    var blockKey = selection.getAnchorKey();
    return content.getBlockForKey(blockKey);
  },
  updateSelection: function updateSelection(editorState, _ref) {
    var startOffset = _ref.startOffset,
        endOffset = _ref.endOffset,
        startKey = _ref.startKey,
        endKey = _ref.endKey;
    var selection = editorState.getSelection();

    if (selection.getIsBackward()) {
      selection = Selection.modifySelection(editorState, {
        focusOffset: startOffset,
        focusKey: startKey,
        anchorOffset: endOffset,
        anchorKey: endKey
      });
    } else {
      selection = Selection.modifySelection(editorState, {
        focusOffset: endOffset,
        focusKey: endKey,
        anchorOffset: startOffset,
        anchorKey: startKey
      });
    }

    return draft_js__WEBPACK_IMPORTED_MODULE_0__["EditorState"].forceSelection(editorState, selection);
  },
  moveSelectionToEnd: function moveSelectionToEnd(editorState) {
    var blocks = editorState.getCurrentContent().getBlocksAsArray();
    var lastBlock = blocks[blocks.length - 1];
    var textLength = lastBlock.getText().length;
    return Selection.updateSelection(editorState, {
      startKey: lastBlock.getKey(),
      endKey: lastBlock.getKey(),
      startOffset: textLength,
      endOffset: textLength
    });
  },
  moveSelectionToStart: function moveSelectionToStart(editorState) {
    var blocks = editorState.getCurrentContent().getBlocksAsArray();
    var firstBlock = blocks[0];
    return Selection.updateSelection(editorState, {
      startKey: firstBlock.getKey(),
      endKey: firstBlock.getKey(),
      startOffset: 0,
      endOffset: 0
    });
  },
  modifySelection: function modifySelection(editorState, opts) {
    var selection = editorState.getSelection();
    return Selection.modify(selection, opts);
  },
  modify: function modify(selection, _ref2) {
    var anchorKey = _ref2.anchorKey,
        anchorOffset = _ref2.anchorOffset,
        focusKey = _ref2.focusKey,
        focusOffset = _ref2.focusOffset;
    selection = anchorKey ? selection.set("anchorKey", anchorKey) : selection;
    selection = anchorOffset !== undefined ? selection.set("anchorOffset", anchorOffset) : selection;
    selection = focusKey ? selection.set("focusKey", focusKey) : selection;
    return focusOffset !== undefined ? selection.set("focusOffset", focusOffset) : selection;
  },
  removeEntityFromSelection: function removeEntityFromSelection(editorState, selection) {
    var contentState = editorState.getCurrentContent();
    var blockMap = contentState.getBlockMap();
    var block = blockMap.get(selection.getAnchorKey());
    var chars = block.getCharacterList();
    var start = selection.getStartOffset();
    var end = selection.getEndOffset();
    var current;

    while (start < end) {
      current = chars.get(start);
      chars = chars.set(start, draft_js__WEBPACK_IMPORTED_MODULE_0__["CharacterMetadata"].applyEntity(current, null));
      start++;
    }

    var updatedBlock = block.set("characterList", chars);
    var newContentState = contentState.merge({
      blockMap: blockMap.set(updatedBlock.getKey(), updatedBlock)
    });
    return draft_js__WEBPACK_IMPORTED_MODULE_0__["EditorState"].push(editorState, newContentState, "remove entity from selection");
  },
  collapse: function collapse(selection) {
    var toStart = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
    // if selection is backward then focus is earlier in the document than anchor
    var newSelection = selection.isBackward === toStart ? Selection.modify(selection, {
      anchorKey: selection.focusKey,
      anchorOffset: selection.focusOffset,
      focusKey: selection.focusKey,
      focusOffset: selection.focusOffset
    }) : Selection.modify(selection, {
      anchorKey: selection.anchorKey,
      anchorOffset: selection.anchorOffset,
      focusKey: selection.anchorKey,
      focusOffset: selection.anchorOffset
    });
    return newSelection.set("isBackward", false);
  },
  collapseToStart: function collapseToStart(selection) {
    return Selection.collapse(selection);
  },
  collapseToEnd: function collapseToEnd(selection) {
    return Selection.collapse(selection, false);
  },
  insertText: function insertText(editorState, text) {
    var selection = editorState.getSelection();
    var content = editorState.getCurrentContent();
    var block = content.getBlockForKey(selection.getStartKey()); // let entityKey = block.getEntityAt(selection.getEndOffset());

    var startOffset = selection.getStartOffset();
    var endOffset = selection.getEndOffset();
    var newCharacterList = block.getCharacterList(); // remove all deleted characters

    for (var i = endOffset; i > startOffset; i--) {
      newCharacterList = newCharacterList.remove(i);
    } // add new character to correctly shift styles and entities


    newCharacterList = newCharacterList.insert(startOffset + 1, newCharacterList.get(startOffset)); // update text

    var newBlock = block.set("text", block.getText().substring(0, startOffset) + "\n" + block.getText().substring(endOffset)); // update character list

    newBlock = newBlock.set("characterList", newCharacterList); // move selection after enter key

    var newSelection = selection.set("anchorOffset", startOffset + 1).set("focusOffset", startOffset + 1); // replace original block in content by new one

    var newContent = content.setIn(["blockMap", block.getKey()], newBlock);
    return draft_js__WEBPACK_IMPORTED_MODULE_0__["EditorState"].push(draft_js__WEBPACK_IMPORTED_MODULE_0__["EditorState"].set(editorState, {
      selection: newSelection
    }), newContent, "insert text");
  },

  /**
   * Walk through all blocks in editor and for each selected block call updateFn with block as a parameter.
   *
   * @param editorState - state of an editor
   * @param updateFn - function, which takes block as first parameter, index in blocks array as second parameter and array of blocks as third parameter. Method returns updated block or null.
   *
   * @returns new editorState with updated blocks.
   */
  updateSelectedBlocks: function updateSelectedBlocks(editorState, updateFn) {
    var selection = editorState.getSelection();
    var content = editorState.getCurrentContent();
    var newContent = content;
    var blocks = editorState.getCurrentContent().getBlocksAsArray();
    var isInsideSelection = false;

    for (var i = 0; i < blocks.length; i++) {
      var block = blocks[i]; // current block is first processed block

      if (block.getKey() === selection.getStartKey()) {
        isInsideSelection = true;
      } // current block is before first selected block


      if (!isInsideSelection) continue; // update current block

      var newBlock = updateFn(block, i, blocks); // replace original block by updated => if block was updated then returned block is new object, because block is immutable object

      if (newBlock && newBlock !== block) {
        newContent = newContent.setIn(["blockMap", newBlock.getKey()], newBlock); // add new block to processed array to allow get changed object in next iteration

        blocks[i] = newBlock;
      } // current block was last processed block => break loop


      if (block.getKey() === selection.getEndKey()) {
        break;
      }
    } // return new editorState with updated content


    return draft_js__WEBPACK_IMPORTED_MODULE_0__["EditorState"].push(editorState, newContent, "updateSelectedBlocks");
  }
};
/* harmony default export */ __webpack_exports__["default"] = (Selection);

/***/ }),
/* 93 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Style", function() { return Style; });
/* harmony import */ var draft_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(31);
/* harmony import */ var draft_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(draft_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _selection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(92);


var UL_TYPE = "unordered-list-item";
var OL_TYPE = "ordered-list-item";

var checkListItemsLevel = function checkListItemsLevel(block, anotherBlock) {
  return block && anotherBlock && anotherBlock.getDepth() >= block.getDepth() && (anotherBlock.getDepth() !== 0 && (anotherBlock.getType() === UL_TYPE || anotherBlock.getType() === OL_TYPE) || anotherBlock.getDepth() === 0 && anotherBlock.getType() === block.getType());
};

var Style = {
  /*
    @param editorState [EditorState] - state of the editor
    @param styleName [string] - name of the style
    @returns new editor state
  */
  toggleInline: function toggleInline(editorState, styleName, preserveStyle) {
    var separatorIndex = styleName.indexOf("."); // at first remove all styles from same style group - styleName is defined like a StyleGroup.Name

    if (separatorIndex !== -1) {
      // get name of prefix
      var prefix = styleName.substr(0, separatorIndex);
      var regExp = new RegExp("^".concat(prefix, "\\.")); // find all styles in selection with prefix

      var toRemove = Style.getStylesFromSelection(editorState).filter(function (item) {
        return item.match(regExp);
      }); // add set styleName only if it isn't on start of selection

      var addStyleName = preserveStyle || !editorState.getCurrentInlineStyle().has(styleName); // remove all founded styles with same prefix

      editorState = Style.removeInline(editorState, toRemove); // add style if it wasn't set before

      if (addStyleName && styleName.length > separatorIndex + 1) {
        editorState = draft_js__WEBPACK_IMPORTED_MODULE_0__["RichUtils"].toggleInlineStyle(editorState, styleName);
      }

      return editorState;
    }

    return draft_js__WEBPACK_IMPORTED_MODULE_0__["RichUtils"].toggleInlineStyle(editorState, styleName);
  },

  /* 
    @param editorState [EditorState] - state of editor
    @param styleNames [string or array of strings] - inline styles to remove from editor state
    @returns new editor state
   */
  removeInline: function removeInline(editorState, styleNames) {
    if (typeof styleNames === "string") {
      if (styleNames === "*") {
        styleNames = Style.getAllStyleNamesFromSelection(editorState);
      } else {
        styleNames = [styleNames];
      }
    }

    var newEditorState = editorState; // filter whitespace formating -> this format sets only meta information about original structure

    styleNames = styleNames.filter(function (style) {
      return !style.match(/^whitespace\./);
    }); // remove all inline styles from array

    styleNames.forEach(function (item) {
      // only cursor without selection
      if (newEditorState.getSelection().isCollapsed()) {
        if (newEditorState.getCurrentInlineStyle().has(item)) {
          newEditorState = draft_js__WEBPACK_IMPORTED_MODULE_0__["RichUtils"].toggleInlineStyle(newEditorState, item);
        }
      } else {
        // remove inline from whole selection
        var content = draft_js__WEBPACK_IMPORTED_MODULE_0__["Modifier"].removeInlineStyle(newEditorState.getCurrentContent(), newEditorState.getSelection(), item);
        newEditorState = draft_js__WEBPACK_IMPORTED_MODULE_0__["EditorState"].set(newEditorState, {
          currentContent: content
        });
      }
    }); // switch editorState contents to enable push new content into history

    var newContent = newEditorState.getCurrentContent();
    newEditorState = draft_js__WEBPACK_IMPORTED_MODULE_0__["EditorState"].set(newEditorState, {
      currentContent: editorState.getCurrentContent()
    });
    return draft_js__WEBPACK_IMPORTED_MODULE_0__["EditorState"].push(newEditorState, newContent, "remove inline styles");
  },

  /*
    @param editorState [EditorState] - state of editor
    @param blockType [string] - type of new block
    @returns [EditorState] updated editor state
   */
  toggleBlock: function toggleBlock(editorState, blockType) {
    var newEditorState = editorState;
    var selection = editorState.getSelection();
    var currentContent = editorState.getCurrentContent();
    var block = currentContent.getBlockForKey(selection.getStartKey()); // handle change of list types block

    if ((block.getType() === UL_TYPE || block.getType() === OL_TYPE) && (blockType === UL_TYPE || blockType === OL_TYPE) && block.getType() !== blockType) {
      var blockDepth = block.getDepth(); // find all blocks in this level and change blockType for all of this blocks

      var blockKeysToProcess = [block.getKey()]; // process list blocks before current block

      var blockBefore = currentContent.getBlockBefore(block.getKey());

      while (checkListItemsLevel(block, blockBefore)) {
        if (blockBefore.getDepth() === blockDepth) {
          blockKeysToProcess.push(blockBefore.getKey());
        }

        blockBefore = currentContent.getBlockBefore(blockBefore.getKey());
      } // process list block after current block


      var blockAfter = currentContent.getBlockAfter(block.getKey());

      while (checkListItemsLevel(block, blockAfter)) {
        if (blockAfter.getDepth() === blockDepth) {
          blockKeysToProcess.push(blockAfter.getKey());
        }

        blockAfter = currentContent.getBlockAfter(blockAfter.getKey());
      } // store original selection


      var originalSelection = editorState.getSelection(); // update block types

      for (var i = 0; i < blockKeysToProcess.length; i++) {
        var key = blockKeysToProcess[i]; // select blocks

        var newSelection = _selection_js__WEBPACK_IMPORTED_MODULE_1__["default"].modifySelection(editorState, {
          anchorKey: key,
          anchorOffset: 0,
          focusKey: key,
          focusOffset: currentContent.getBlockForKey(key).getText().length
        }); // update selected block type

        newEditorState = draft_js__WEBPACK_IMPORTED_MODULE_0__["RichUtils"].toggleBlockType(draft_js__WEBPACK_IMPORTED_MODULE_0__["EditorState"].set(newEditorState, {
          selection: newSelection
        }), blockType);
      } // return original selection


      newEditorState = draft_js__WEBPACK_IMPORTED_MODULE_0__["EditorState"].set(newEditorState, {
        selection: originalSelection
      }); // update depth of changed block - draft reset block's depth to 0

      var newContent = newEditorState.getCurrentContent();
      var blockMap = newContent.getBlockMap();

      for (var _i = 0; _i < blockKeysToProcess.length; _i++) {
        var _key = blockKeysToProcess[_i]; // update depth of the block

        var updatedBlock = newContent.getBlockForKey(_key).set("depth", blockDepth); // update blockMap

        blockMap = blockMap.set(_key, updatedBlock);
      } // set updated block map back to content


      newContent = newContent.set("blockMap", blockMap);
      newEditorState = draft_js__WEBPACK_IMPORTED_MODULE_0__["EditorState"].push(newEditorState, newContent, "toggle block");
    } else {
      newEditorState = draft_js__WEBPACK_IMPORTED_MODULE_0__["RichUtils"].toggleBlockType(editorState, blockType);
    }

    return newEditorState;
  },
  toggleSelectedBlocksStyles: function toggleSelectedBlocksStyles(editorState, blockStyles, updateStyleFn) {
    var newEditorState = editorState;
    _selection_js__WEBPACK_IMPORTED_MODULE_1__["default"].updateSelectedBlocks(editorState, function (block) {
      newEditorState = Style.toggleBlockStyles(newEditorState, block, blockStyles, updateStyleFn); // all changes in editorState is made locally here => return null to block updates of unused editorState ( optimalization )

      return null;
    });
    return newEditorState;
  },

  /*
    @param editorState
    @param blockStyles [array of objects] - array contains objects defining styles to update. Each object is composited by name of css style and its value
    @returns [EditorState] updated editor state
  */
  toggleBlockStyles: function toggleBlockStyles(editorState, block, blockStyles, updateStyleFn) {
    var selection = editorState.getSelection(); // update only for first block of selection

    selection = _selection_js__WEBPACK_IMPORTED_MODULE_1__["default"].modifySelection(editorState, {
      anchorKey: block.getKey(),
      anchorOffset: 0,
      focusKey: block.getKey(),
      focusOffset: 0
    });
    var currentContent = editorState.getCurrentContent();
    var data = block.getData().toJSON();
    data.props = data.props || {};
    var props = data.props;
    props.style = props.style || {};
    var style = props.style;

    if (typeof updateStyleFn === "function") {
      props.style = updateStyleFn(style) || style;
    } else {
      if (blockStyles.every(function (item) {
        return style[item.name] === item.value;
      })) {
        // remove styles
        blockStyles.forEach(function (item) {
          return delete style[item.name];
        });
      } else {
        blockStyles.forEach(function (item) {
          return style[item.name] = item.value;
        });
      }
    }

    if (Object.keys(style).length === 0) {
      delete props.style;
    }

    var newContent = draft_js__WEBPACK_IMPORTED_MODULE_0__["Modifier"].setBlockData(currentContent, selection, data);
    return draft_js__WEBPACK_IMPORTED_MODULE_0__["EditorState"].push(editorState, newContent, "toggle block style");
  },

  /*
    @param editorState [EditorState] - state of editor
    @param type ["inline" or "block"] - type of style to check
    @param name [string] - name of a style or block or entity to check
    @return bool
   */
  isSelected: function isSelected(editorState, type, name) {
    if (!editorState) return false;
    var block;
    var entity;
    var entityKey;
    var selection = editorState.getSelection();
    var content = editorState.getCurrentContent();
    var result = false;

    switch (type) {
      case "inline":
        result = editorState.getCurrentInlineStyle().has(name);
        break;

      case "block":
        block = content.getBlockForKey(selection.getAnchorKey());
        result = !!block && block.getType() === name;
        break;

      case "entity":
        block = content.getBlockForKey(selection.getAnchorKey());
        entityKey = block && block.getEntityAt(selection.getStartOffset());

        if (entityKey) {
          entity = content.getEntity(entityKey);
          result = entity.type === name;
        }

        break;
    }

    return result;
  },

  /*
    Returns all inline styles used in selection.
     @param editorState [EditorState] - state of editor
    @returns [array of strings] - array of styles used in selection
   */
  getStylesFromSelection: function getStylesFromSelection(editorState) {
    var result = [];
    var selection = editorState.getSelection();

    if (selection.isCollapsed()) {
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = editorState.getCurrentInlineStyle().keys()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var style = _step.value;
          result.push(style);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    } else {
      (function () {
        var startKey = selection.getStartKey();
        var endKey = editorState.getSelection().getEndKey();
        var content = editorState.getCurrentContent();
        var block = content.getBlockForKey(startKey);
        var styles = {}; // iterate through all blocks in selection

        while (block) {
          block.getCharacterList().forEach(function (character) {
            return character.getStyle().forEach(function (style) {
              return styles[style] = true;
            });
          });
          var currentKey = block.getKey();
          block = currentKey === endKey ? null : content.getBlockAfter(currentKey);
        }

        for (var _style in styles) {
          result.push(_style);
        }
      })();
    }

    return result;
  },
  getCurrentStylesWithPrefix: function getCurrentStylesWithPrefix(editorState, prefix) {
    var result = [];
    var regexp = new RegExp("^".concat(prefix, "\\."));
    var styles = editorState.getCurrentInlineStyle().keys();
    var _iteratorNormalCompletion2 = true;
    var _didIteratorError2 = false;
    var _iteratorError2 = undefined;

    try {
      for (var _iterator2 = styles[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
        var style = _step2.value;

        if (style.match(regexp)) {
          result.push(style);
        }
      }
    } catch (err) {
      _didIteratorError2 = true;
      _iteratorError2 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
          _iterator2.return();
        }
      } finally {
        if (_didIteratorError2) {
          throw _iteratorError2;
        }
      }
    }

    return result;
  },
  getAllStyleNamesFromSelection: function getAllStyleNamesFromSelection(editorState) {
    var result = [];
    var selection = editorState.getSelection();
    var insideSelection = false;
    var singleBlockSelection = selection.getEndKey() === selection.getStartKey();
    var startOffset = selection.getStartOffset();
    var endOffset = selection.getEndOffset();

    if (singleBlockSelection) {
      var block = editorState.getCurrentContent().getBlockForKey(editorState.getSelection().anchorKey);
      var styles;
      block.findStyleRanges(function (charMetaData) {
        styles = charMetaData.getStyle().toJS();
        return styles.length > 0;
      }, function (startIndex, endIndex) {
        if (startIndex >= startOffset && startIndex < endOffset || endIndex > startOffset && endIndex <= endOffset || startIndex < startOffset && endIndex > endOffset) {
          result = result.concat(styles);
        }
      });
    } else {
      (function () {
        var resultMap = {};
        var blocks = editorState.getCurrentContent().getBlocksAsArray();

        var _loop2 = function _loop2(i) {
          var block = blocks[i]; // process first block

          if (block.getKey() === selection.getStartKey()) {
            var _styles;

            block.findStyleRanges(function (charMetaData) {
              _styles = charMetaData.getStyle().toJS();
              return true;
            }, function (startIndex) {
              if (startIndex >= selection.getStartOffset()) {
                _styles.forEach(function (styleName) {
                  return resultMap[styleName] = true;
                });
              }
            });
            insideSelection = true;

            if (block.getKey() === selection.getEndKey()) {
              return "break";
            } else {
              return "continue";
            }
          } // process last block


          if (block.getKey() === selection.getEndKey()) {
            var _styles2;

            block.findStyleRanges(function (charMetaData) {
              _styles2 = charMetaData.getStyle().toJS();
              return true;
            }, function (startIndex) {
              if (startIndex < selection.getEndOffset()) {
                _styles2.forEach(function (styleName) {
                  return resultMap[styleName] = true;
                });
              }
            });
            return "break";
          } // skip blocks before selected block


          if (!insideSelection) return "continue"; // process blocks inside selection

          var styles = void 0;
          block.findStyleRanges(function (charMetaData) {
            return styles = charMetaData.getStyle().toJS();
          }, function (startIndex) {
            if (startIndex < selection.getEndOffset()) {
              styles.forEach(function (styleName) {
                return resultMap[styleName] = true;
              });
            }
          });
        };

        _loop: for (var i = 0; i < blocks.length; i++) {
          var _ret = _loop2(i);

          switch (_ret) {
            case "break":
              break _loop;

            case "continue":
              continue;
          }
        }

        for (var styleName in resultMap) {
          result.push(styleName);
        }
      })();
    }

    return result;
  }
};
/* harmony default export */ __webpack_exports__["default"] = (Style);

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(95);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":false}

options.transform = transform
options.insertInto = function anonymous(
) {
return __webpack_require__(15)();
};

var update = __webpack_require__(16)(content, options);

if(content.locals) module.exports = content.locals;



/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(14)(false);
// Module
exports.push([module.i, "/* Following variables are available to uuApps / libraries using uu5g04 library.\n   This file can be imported using:\n    import \"~uu5g04/dist/tools.less\";\n*/\n/***************** FLEX start *****************/\n/* @deprecated */\n/***************** FLEX end *****************/\n/***************** ANIMATIONS start *****************/\n/* @deprecated */\n/***************** ANIMATIONS end *****************/\n/***************** LAYOUT start *****************/\n/* @deprecated */\n/***************** LAYOUT end *****************/\n.uu5-common-temp-textarea {\n  opacity: 0;\n  position: absolute;\n  left: -1000px;\n  top: -1000px;\n}\n.public-DraftEditor-content {\n  min-height: 72px;\n  padding: 6px 8px 7px;\n  background: #fff;\n  border: 1px solid #BDBDBD;\n  border-radius: 2px;\n}\n.public-DraftEditor-content:focus {\n  border-color: #2196F3;\n  box-shadow: none;\n  outline: none;\n}\n.DraftEditor-root {\n  position: relative;\n}\n.public-DraftEditorPlaceholder-root {\n  position: absolute;\n  left: 0;\n  right: 0;\n  pointer-events: none;\n  color: #A8A8A8;\n  padding-left: 8px;\n  padding-top: 8px;\n  padding-right: 8px;\n}\n/* hide first and last help space in the block */\n.public-DraftStyleDefault-block > span[style*=\"display: none;\"]:first-child,\n.public-DraftStyleDefault-block > span[style*=\"display: none;\"]:last-child {\n  display: inline !important;\n}\n.public-DraftStyleDefault-block > span[style*=\"display: none;\"]:only-child,\n.DraftEditor-editorContainer [data-block]:not(:only-child) .public-DraftStyleDefault-block > span[style*=\"display:;\"]:only-child {\n  display: none !important;\n}\n", ""]);



/***/ }),
/* 96 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Block", function() { return Block; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(11);
/* harmony import */ var uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _internal_suspense_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(29);
/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(86);
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(89);
/* harmony import */ var _plugins_uu5_save_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(110);
/* harmony import */ var _block_less__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(111);
/* harmony import */ var _block_less__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_block_less__WEBPACK_IMPORTED_MODULE_6__);
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

//@@viewOn:imports





var Editor = Object(_internal_suspense_js__WEBPACK_IMPORTED_MODULE_2__["lazy"])(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(__webpack_require__(97));
  });
}); // import { Editor } from "./editor.js";


 //@@viewOff:imports

var lazyLoaded = false;
var Block = Object(_context_js__WEBPACK_IMPORTED_MODULE_3__["withEditorContext"])(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.BaseMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.EditableMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.NestingLevelMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    tagName: _config_js__WEBPACK_IMPORTED_MODULE_4__["default"].TAG + "Block",
    nestingLevelList: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.getNestingLevelList("bigBoxCollection", "inline"),
    classNames: {
      main: _config_js__WEBPACK_IMPORTED_MODULE_4__["default"].CSS + "block",
      closeButton: _config_js__WEBPACK_IMPORTED_MODULE_4__["default"].CSS + "block-close-button",
      largeScreenEditor: _config_js__WEBPACK_IMPORTED_MODULE_4__["default"].CSS + "large-screen-editor"
    },
    getDerivedStateFromError: function getDerivedStateFromError(error) {
      return {
        error: error
      };
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  propTypes: {
    uu5string: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.arrayOf(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.object]))]),
    buttons: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.any,
    plugins: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.any,
    placeholder: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string,
    getToolbar: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.func,
    forceRenderModal: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.bool,
    readOnly: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.bool,
    bgStyle: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOf(["outline", "transparent"]),
    editorHeight: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.number]),
    editorMinHeight: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.number]),
    editorMaxHeight: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.number])
  },
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      uu5string: undefined,
      buttons: undefined,
      plugins: undefined,
      placeholder: undefined,
      getToolbar: undefined,
      forceRenderModal: undefined,
      readOnly: undefined,
      bgStyle: "transparent",
      editorHeight: undefined,
      editorMinHeight: undefined,
      editorMaxHeight: undefined
    };
  },
  //@@viewOff:getDefaultProps
  //@@viewOn:reactLifeCycle
  getInitialState: function getInitialState() {
    var _this = this;

    this._savePlugin = _plugins_uu5_save_js__WEBPACK_IMPORTED_MODULE_5__["default"].setIn(["commands", "fn"], function () {
      _this._editor.setInfo(_this.getLsiItem(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.Lsi.RichText.block.saving));

      _this.saveEditation({
        uu5string: _this._editor.getValue()
      });

      return true;
    });
    return {
      uu5string: this._getUu5String(),
      lazyLoaded: false
    };
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    var nextUu5String = this._getUu5String(nextProps);

    if (nextUu5String !== this.state.uu5string) {
      this.setState({
        uu5string: nextUu5String
      });
    }
  },
  //@@viewOff:reactLifeCycle
  //@@viewOn:interface
  setCursorPosition: function setCursorPosition(cursorPosition) {
    if (this.state.editation) {
      return this._editor ? this._editor.setCursorPosition(cursorPosition) : null;
    }
  },
  //@@viewOff:interface
  //@@viewOn:overriding
  onBeforeForceEndEditation_: function onBeforeForceEndEditation_() {
    return {
      uu5string: this._editor.getValue()
    };
  },
  //@@viewOff:overriding
  //@@viewOn:private
  _registerNull: function _registerNull(inst) {
    // unmount of component means that suspense is loaded and component should be rendered
    if (!inst) {
      this.setState(function (state) {
        if (state.lazyLoaded) return; // Editor is loaded - need to set to static variable because other Editor does not render fallback component
        // lazyLoaded is stored in both state and static for cases when more editors is loaded in same time

        lazyLoaded = true;
        return {
          lazyLoaded: true
        };
      });
    }
  },
  _isLazyLoaded: function _isLazyLoaded() {
    return lazyLoaded;
  },
  _getUu5String: function _getUu5String() {
    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;

    if (props.getEditablePropValue) {
      return props.getEditablePropValue(this, "uu5string") || props.uu5string;
    }

    return props.uu5string;
  },
  _endEditation: function _endEditation() {
    var uu5string = this._editor.getValue();

    this.endEditation({
      uu5string: uu5string
    });
    this.setState({
      uu5string: uu5string
    });
  },
  _cancelEditaiton: function _cancelEditaiton() {
    this.endEditation();
  },
  _registerEditor: function _registerEditor(editor) {
    this._editor = editor;
  },
  _getLsiItem: function _getLsiItem(name) {
    return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.Lsi, {
      lsi: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.Lsi.RichText.block[name]
    });
  },
  _renderContent: function _renderContent(isLarge, isInline) {
    return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Fragment, null, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(Editor, {
      key: "editor",
      className: isLarge ? this.getClassName("largeScreenEditor") : undefined,
      value: this.state.uu5string,
      ref_: this._registerEditor,
      placeholder: this.props.placeholder,
      getToolbar: this.props.getToolbar,
      forceRenderModal: this.props.forceRenderModal,
      readOnly: this.props.readOnly,
      inline: isInline,
      plugins: Array.isArray(this.props.plugins) ? [].concat(_toConsumableArray(this.props.plugins), [{
        save: this._savePlugin
      }]) : _objectSpread({}, this.props.plugins, {
        save: this._savePlugin
      }),
      bgStyle: this.props.bgStyle,
      buttons: this.props.buttons,
      animatedToolbar: false,
      dynamicToolbar: false,
      height: this.props.editorHeight,
      minHeight: this.props.editorMinHeight,
      maxHeight: this.props.editorMaxHeight
    }), !isInline ? uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.Button, {
      key: "end-button",
      className: this.getClassName("closeButton"),
      onClick: this._endEditation,
      bgStyle: "transparent",
      colorSchema: "green",
      borderRadius: "12px",
      size: "s"
    }, isLarge ? this._getLsiItem("endEditation") : uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.Icon, {
      icon: "mdi-check-circle-outline"
    })) : null);
  },
  _modalRender: function _modalRender() {
    return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Forms.ContextModal, {
      key: "modal-editation-mode",
      shown: true,
      offsetTop: "auto",
      size: "l",
      header: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Forms.ContextHeader, {
        content: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.Lsi, {
          lsi: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.Lsi.RichText.block.modalHeader
        }),
        info: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.Lsi, {
          lsi: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.Lsi.RichText.block.modalInfo
        })
      }),
      footer: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Forms.ContextControls, {
        buttonSubmitProps: {
          content: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.Lsi, {
            lsi: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.Lsi.RichText.block.modalSubmitButton
          })
        },
        buttonCancelProps: {
          content: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.Lsi, {
            lsi: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.Lsi.RichText.block.modalCancelButton
          })
        }
      })
    }, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Forms.ContextForm, {
      onSave: this._endEditation,
      onCancel: this._cancelEditaiton
    }, this._renderContent(undefined, true)));
  },
  _standardRender: function _standardRender() {
    return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.Div, _extends({
      key: "standard-editation-mode"
    }, this.getMainPropsToPass()), uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.Resize, null, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.Resize.Item, {
      max: 768,
      key: "resize-item"
    }, this._renderContent()), uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.Resize.Item, {
      key: "resize-item"
    }, this._renderContent(true))));
  },
  //@@viewOff:private
  //@@viewOn:render
  render: function render() {
    if (this.state.error) {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Error, {
        error: this.state.error,
        content: "UU5.RichText.Block failed to render.",
        moreInfo: true
      });
    }

    var components = [];
    var showInline = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.nestingLevelList.indexOf("box") < uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.nestingLevelList.indexOf(this.getNestingLevel()); // inline editation is done in modal so component renders its content always

    if (showInline) {
      components.push(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.Span, _extends({
        key: "standard-mode"
      }, this.getMainPropsToPass(), {
        content: this.state.uu5string
      })));
    } else if (!this.state.editation || !this._isLazyLoaded()) {
      {
        components.push(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.Div, _extends({
          key: "standard-mode"
        }, this.getMainPropsToPass(), {
          content: this.state.uu5string
        })));
      }
    }

    if (this.state.editation) {
      components.push(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(_internal_suspense_js__WEBPACK_IMPORTED_MODULE_2__["Suspense"], {
        fallback: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create("span", {
          ref: this._registerNull
        }),
        key: "editation-mode-suspense"
      }, showInline ? this._modalRender() : this._standardRender()));
    }

    return components;
  } //@@viewOff:render

}));
/* harmony default export */ __webpack_exports__["default"] = (Block);

/***/ }),
/* 97 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Editor", function() { return Editor; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(11);
/* harmony import */ var uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var draft_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(31);
/* harmony import */ var draft_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(draft_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(86);
/* harmony import */ var _bricks_defaults_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(98);
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(89);
/* harmony import */ var _toolbar_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(99);
/* harmony import */ var _area_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(88);
/* harmony import */ var _bricks_data_conversion_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(105);
/* harmony import */ var _bricks_plugin_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(106);
/* harmony import */ var _bricks_selection_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(92);
/* harmony import */ var _plugins_plugin_factory_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(85);
/* harmony import */ var _plugins_uu5_plugins_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(6);
/* harmony import */ var _editor_less__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(108);
/* harmony import */ var _editor_less__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_editor_less__WEBPACK_IMPORTED_MODULE_13__);
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

//@@viewOn:imports








 // bricks





 //@@viewOff:imports

var IS_IE = navigator.userAgent.match("Trident");
var EmptyUU5String = /^<uu5string\s*\/>$/;
var Editor = Object(_context_js__WEBPACK_IMPORTED_MODULE_3__["withEditorContext"])(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.BaseMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    tagName: _config_js__WEBPACK_IMPORTED_MODULE_5__["default"].TAG + "Editor",
    classNames: {
      main: function main(props, state) {
        return _config_js__WEBPACK_IMPORTED_MODULE_5__["default"].CSS + "editor" + (state.customToolbar && state.focused && props.dynamicToolbar || !props.dynamicToolbar ? " " + uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Css.css("\n                .public-DraftEditor-content,\n                .public-DraftEditorPlaceholder-root {\n                  padding-top: 40px;\n                }\n\n                && .public-DraftEditor-content::before {\n                  width: calc(100% + 16px);\n                  ".concat(props.animatedToolbar ? "transition-delay: 0.5s;" : "", "\n                }\n              ")) : "") + " " + uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Css.css("\n            .public-DraftEditorPlaceholder-root {\n              line-height: 1.5;\n            }\n\n            .public-DraftEditor-content {\n              ".concat(IS_IE ? "\n                    overflow-x: hidden;\n                    overflow-y: auto;\n                  " : "\n                    display: flex;\n                    flex-direction: column;\n                    align-items: stretch;\n\n                    & > div {\n                      overflow-x: hidden;\n                      overflow-y: auto;\n                    }\n                  ", "\n              height: ").concat(typeof props.height === "number" ? props.height + "px" : props.height, ";\n              min-height: ").concat(typeof props.minHeight === "number" ? props.minHeight + "px" : props.minHeight, ";\n              max-height: ").concat(typeof props.maxHeight === "number" ? props.maxHeight + "px" : props.maxHeight, ";\n            }\n          ")) + (props.animatedToolbar ? " " + uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Css.css("\n                .public-DraftEditor-content,\n                .public-DraftEditorPlaceholder-root {\n                  transition: padding-top 0.5s;\n                }\n              ") : "") + (props.readOnly ? " " + uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Css.css("\n                .public-DraftEditor-content {\n                  border-color: rgba(189, 189, 189, .24);\n                  background-color: rgba(255, 255, 255, .24);\n                }\n              ") : "");
      },
      bgstyleTransparent: _config_js__WEBPACK_IMPORTED_MODULE_5__["default"].CSS + "editor-transparent"
    },
    lsi: function lsi() {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.Lsi.RichText.editor;
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  propTypes: {
    value: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string,
    buttons: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.arrayOf(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string),
    plugins: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.arrayOf(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.object), uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.object]),
    readOnly: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.bool,
    onChange: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.func,
    onBlur: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.func,
    onFocus: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.func,
    pluginExtensions: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.object,
    handleKeyCommand: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.bool,
    getToolbar: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.func,
    placeholder: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string,
    forceRenderModal: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.bool,
    bgStyle: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOf(["outline", "transparent"]),
    height: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.number, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string]),
    minHeight: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.number, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string]),
    maxHeight: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.number, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string]),
    animatedToolbar: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.bool,
    dynamicToolbar: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.bool,
    inline: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.bool
  },
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      value: "",
      buttons: undefined,
      readOnly: undefined,
      onChange: null,
      onBlur: null,
      onFocus: null,
      plugins: null,
      pluginExtensions: undefined,
      handleKeyCommand: true,
      getToolbar: null,
      forceRenderModal: false,
      bgStyle: "outline",
      height: "auto",
      minHeight: "106px",
      maxHeight: "none",
      animatedToolbar: true,
      dynamicToolbar: true,
      inline: false
    };
  },
  //@@viewOff:getDefaultProps
  //@@viewOn:reactLifeCycle
  getInitialState: function getInitialState() {
    // process plugins - add UU5StringPlugin to be the last plugin - it returns universal component for each style, entity or block
    this._plugins = _bricks_plugin_js__WEBPACK_IMPORTED_MODULE_9__["default"].mergePlugins(this.props, _plugins_uu5_plugins_js__WEBPACK_IMPORTED_MODULE_12__["default"]).map(function (plugin) {
      return _plugins_plugin_factory_js__WEBPACK_IMPORTED_MODULE_11__["default"].createPluginFromDefinition(plugin);
    }); // sort plugins from the highest order to the lowest

    this._plugins.sort(function (p1, p2) {
      return p2.order - p1.order;
    });

    var config = _bricks_plugin_js__WEBPACK_IMPORTED_MODULE_9__["default"].processPlugins(this._plugins, this.props.pluginExtensions);

    var _buttonMap = config.buttonMap || {}; // map of button definitions fro toolbar


    this._areaConfig = config.areaConfig; // configuration for editor

    this._htmlMappings = config.htmlMappings; // mapping from html to components
    // get data for buttons from buttons defined by plugins

    var _toolbarButtons = this.props.buttons === undefined ? _bricks_defaults_js__WEBPACK_IMPORTED_MODULE_4__["EDITOR_BUTTONS"] : this.props.buttons;

    _toolbarButtons = _toolbarButtons && _toolbarButtons.reduce(function (toolbarButtons, buttonName) {
      if (_buttonMap[buttonName]) {
        toolbarButtons.push(_buttonMap[buttonName]);
      }

      return toolbarButtons;
    }, []);
    return {
      areaLoaded: false,
      buttons: _toolbarButtons,
      customToolbar: false
    };
  },
  componentDidCatch: function componentDidCatch(error) {
    // all components is unmounted ... we need to save error data to local variables and wait for call of register functions
    // in them set data to editor and show error message
    var editorState = this.getArea().getEditorState();
    uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Tools.error(error, {
      editorState: editorState
    }); // save previous editor state

    this._errorEditorState = draft_js__WEBPACK_IMPORTED_MODULE_2__["EditorState"].redo(editorState); // save error to alert bus

    this._errorMsg = this.getLsiValue("editorError"); // forse rerender of component - all child components will be mounted again

    this.forceUpdate();
  },
  //@@viewOff:reactLifeCycle
  //@@viewOn:interface
  setValue: function setValue(uu5string, opt, setStateCallback) {
    var focus = false;
    var propsFormatter;

    switch (_typeof(opt)) {
      case "object":
        if (opt) {
          focus = opt.focus !== undefined ? opt.focus : focus;
          propsFormatter = opt.propsFormatter;
        }

        break;

      case "function":
        propsFormatter = opt;
        break;

      case "boolean":
        focus = opt;
        break;
    }

    var editorState;

    if (!uu5string || EmptyUU5String.test(uu5string)) {
      editorState = draft_js__WEBPACK_IMPORTED_MODULE_2__["EditorState"].createEmpty(new draft_js__WEBPACK_IMPORTED_MODULE_2__["CompositeDecorator"](this._areaConfig.decorators));
    } else {
      try {
        editorState = _bricks_data_conversion_js__WEBPACK_IMPORTED_MODULE_8__["default"].uu5stringToEditorState(uu5string, this._areaConfig.decorators, this._getEditorItem, propsFormatter);
      } catch (e) {
        this.setError(this.getLsiValue("uu5stringToEditorError"), {
          e: e,
          uu5string: uu5string
        });
      }
    }

    this._area.setEditorState(editorState, focus, setStateCallback);

    return editorState;
  },
  getValue: function getValue() {
    var editorState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._area.getEditorState();
    var formatter = arguments.length > 1 ? arguments[1] : undefined;

    try {
      return _bricks_data_conversion_js__WEBPACK_IMPORTED_MODULE_8__["default"].editorStateToUU5String(editorState, this._getUU5Item, formatter);
    } catch (e) {
      this.setError(this.getLsiValue("editorStateToUu5stringError"), {
        editorState: editorState,
        e: e
      });
    }
  },
  getArea: function getArea() {
    return this._area;
  },
  focus: function focus() {
    this._focus();
  },
  setCursorPosition: function setCursorPosition(cursorPosition) {
    this._focus(cursorPosition);
  },
  isMultiline: function isMultiline() {
    var uu5stringOrEditorState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._area.getEditorState();
    return Editor.isMultiline(uu5stringOrEditorState, this._plugins);
  },
  setError: function setError(msg, e) {
    if (this._alertBus) {
      this._alertBus.setAlert({
        content: msg
      });
    }

    uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Tools.error(msg, e);
  },
  setInfo: function setInfo(msg) {
    if (this._alertBus) {
      this._alertBus.setAlert({
        content: msg,
        colorSchema: "primary"
      });
    }
  },
  //@@viewOff:interface
  //@@viewOn:overriding
  //@@viewOff:overriding
  //@@viewOn:private
  _focus: function _focus() {
    var cursorPosition = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "default";
    this.getArea().focus();

    if (cursorPosition === "start") {
      this.getArea().setEditorState(_bricks_selection_js__WEBPACK_IMPORTED_MODULE_10__["default"].moveSelectionToStart(this.getArea().getEditorState()));
    } else if (cursorPosition === "end") {
      this.getArea().setEditorState(_bricks_selection_js__WEBPACK_IMPORTED_MODULE_10__["default"].moveSelectionToEnd(this.getArea().getEditorState()));
    }
  },
  _onChange: function _onChange(area, editorState) {
    if (typeof this.props.onChange === "function") {
      editorState = this.props.onChange(this, editorState) || editorState;
    }

    return editorState;
  },
  _onBlur: function _onBlur(e) {
    if (typeof this.props.onBlur === "function") {
      this.props.onBlur(e, this);
    }

    if (typeof this.props.getToolbar === "function") {
      var toolbar = this.props.getToolbar();
      if (toolbar) toolbar.setItems(this, []);
    } else {
      this.setState({
        focused: false
      });
    }
  },
  _registerToolbar: function _registerToolbar(toolbar) {
    this._toolbar = toolbar;

    if (this.props.getToolbar !== "function") {
      if (!this.props.dynamicToolbar) {
        this._toolbar.setItems(this, this.state.buttons);
      }

      this.setState({
        customToolbar: true
      });
    }
  },
  _registerArea: function _registerArea(area) {
    this._area = area; // init area

    if (this._errorEditorState) {
      this._areaConfig.editorState = this._errorEditorState;
      delete this._errorEditorState;
    } else if (this.props.value) {
      try {
        this._areaConfig.editorState = _bricks_data_conversion_js__WEBPACK_IMPORTED_MODULE_8__["default"].uu5stringToEditorState(this.props.value, this._areaConfig.decorators, this._getEditorItem);
      } catch (e) {
        this.setError(this.getLsiValue("uu5stringToEditorError"), {
          e: e,
          value: this.props.value
        });
      }
    }

    this._area.set(this._areaConfig);

    this.setState({
      areaLoaded: true
    });
  },
  _registerAlertBus: function _registerAlertBus(alertBus) {
    this._alertBus = alertBus;

    if (this._errorMsg) {
      this._alertBus.setAlert({
        content: this._errorMsg
      });

      delete this._errorMsg;
    }
  },
  _getArea: function _getArea() {
    return this._area;
  },
  _getToolbar: function _getToolbar() {
    if (typeof this.props.getToolbar === "function") {
      return this.props.getToolbar();
    }

    return this._toolbar;
  },
  _getUU5Item: function _getUU5Item(type, name, props, wrapper, wrapperProps, isEmpty) {
    var result;

    for (var index = 0; index < this._plugins.length; index++) {
      var plugin = this._plugins[index];

      if (typeof plugin.toUU5Item === "function") {
        result = plugin.toUU5Item(type, name, props, wrapper, wrapperProps, isEmpty);
        if (result) break;
      }
    }

    return result;
  },
  _getEditorItem: function _getEditorItem(name, props, children, wrapper, wrapperProps) {
    return Editor._getEditorItem(this._plugins, name, props, children, wrapper, wrapperProps);
  },
  _handlePaste: function _handlePaste(text, html, editorState) {
    var uu5string;

    if (html) {
      var fragment = document.createElement("html");
      fragment.innerHTML = html; // build tag props tree and process by standard data conversion from html to content

      var body = fragment.getElementsByTagName("body")[0];

      if (body) {
        try {
          // eslint-disable-next-line react/no-find-dom-node
          var currentNode = this.findDOMNode(); // find content root node - contains better styles to filter

          var contentNode = currentNode && currentNode.querySelector(".public-DraftEditor-content");
          uu5string = _bricks_data_conversion_js__WEBPACK_IMPORTED_MODULE_8__["default"].parseHtmlNodeListToUu5stringObject(body.childNodes, this._htmlMappings, currentNode ? getComputedStyle(contentNode || currentNode) : null);
        } catch (e) {
          this.setError(this.getLsiValue("htmlParseError"), {
            html: body,
            e: e
          });
        }
      }
    } else if (uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.UU5String.isValid(text)) {
      uu5string = text;
    }

    if (uu5string) {
      var newSelection;
      var blockDataMap = {};
      var raw;

      try {
        raw = _bricks_data_conversion_js__WEBPACK_IMPORTED_MODULE_8__["default"].uu5stringToRaw(uu5string, blockDataMap, this._getEditorItem);
      } catch (e) {
        this.setError(this.getLsiValue("uu5stringToEditorError"), {
          uu5string: uu5string,
          e: e
        });
        return;
      }

      var toRemove = [];

      for (var i = 0; i < raw.blocks.length; i++) {
        var block = raw.blocks[i];

        if (!block.text && block._uu5richTextDataCollector) {
          toRemove.push(i);
        }
      } // remove empty helping blocks ( uu5richTextDataCollector )


      for (var _i = toRemove.length - 1; _i >= 0; _i--) {
        var indexToRemove = toRemove[_i];
        raw.blocks.splice(indexToRemove, 1);
      }

      var newContentState = editorState.getCurrentContent();
      var selection = editorState.getSelection(); // add current content state into history stack

      var undoStack = editorState.getUndoStack().push(newContentState);

      if (!editorState.getSelection().isCollapsed()) {
        newContentState = draft_js__WEBPACK_IMPORTED_MODULE_2__["Modifier"].removeRange(newContentState, selection, selection.isBackward ? "backward" : "forward");
        selection = _bricks_selection_js__WEBPACK_IMPORTED_MODULE_10__["default"].collapseToStart(selection);
      } // check if all of created blocks are unstyled or artificial -> insert whole content into current block and dont split blocks


      var shouldSplitBLocks = !raw.blocks.every(function (block) {
        return block.type === "unstyled" && !block._uu5richTextDataCollector && !blockDataMap[block.key] || blockDataMap[block.key] && blockDataMap[block.key].artificial && Object.keys(blockDataMap[block.key]).length === 1;
      }); // if all text will be pasted into current block, empty blockDataMap

      if (!shouldSplitBLocks) {
        blockDataMap = {};
      }

      if (shouldSplitBLocks) {
        // not needed to slit block if cursor is at the end of the selected block
        if (newContentState.getBlockForKey(selection.getStartKey()).getText().length > selection.getStartOffset()) {
          newContentState = draft_js__WEBPACK_IMPORTED_MODULE_2__["Modifier"].splitBlock(newContentState, selection);
        }
      } // merge raw


      var currentRaw = Object(draft_js__WEBPACK_IMPORTED_MODULE_2__["convertToRaw"])(newContentState); // find block with focus

      var selectedBlockIndex = currentRaw.blocks.findIndex(function (block) {
        return block.key === selection.anchorKey;
      });
      var directionMap = editorState.getDirectionMap();
      var direction = directionMap.get(selection.anchorKey); // update entity map

      var entityKeyOffset = Object.keys(currentRaw.entityMap).length;

      for (var index = 0; index < raw.blocks.length; index++) {
        var _block = raw.blocks[index]; // update entity keys to prevent colisions with raw and current raw

        for (var eIndex = 0; eIndex < _block.entityRanges.length; eIndex++) {
          var entityRange = _block.entityRanges[eIndex];
          entityRange.key += entityKeyOffset;
        } // prepare map of block directions when we add block into content


        if (shouldSplitBLocks) {
          directionMap = directionMap.set(_block.key, direction);
        }
      } // merge entities from raw to currentRaw


      for (var entityKey in raw.entityMap) {
        currentRaw.entityMap[parseInt(entityKey) + entityKeyOffset + ""] = raw.entityMap[entityKey];
      }

      if (shouldSplitBLocks) {
        // splice blocks into current raw
        if (currentRaw.blocks[selectedBlockIndex].text) {
          var _currentRaw$blocks;

          (_currentRaw$blocks = currentRaw.blocks).splice.apply(_currentRaw$blocks, [selectedBlockIndex + 1, 0].concat(_toConsumableArray(raw.blocks)));
        } else {
          var _currentRaw$blocks2;

          // replace empty block
          (_currentRaw$blocks2 = currentRaw.blocks).splice.apply(_currentRaw$blocks2, [selectedBlockIndex, 1].concat(_toConsumableArray(raw.blocks)));
        } // move cursor after last added block


        var lastAddedBlock = raw.blocks[raw.blocks.length - 1];
        newSelection = {
          startOffset: lastAddedBlock.text.length,
          endOffset: lastAddedBlock.text.length,
          startKey: lastAddedBlock.key,
          endKey: lastAddedBlock.key
        };
      } else {
        var _selectedBlock$inline;

        // insert text into current block
        var selectedBlock = currentRaw.blocks[selectedBlockIndex];
        var resultText = selectedBlock.text.substring(0, selection.anchorOffset);
        var textOffset = resultText.length;
        var pastedTextLength = 0;
        var pasteInsideEntity = false;
        raw.blocks.forEach(function (block) {
          return pastedTextLength += block.text.length;
        }); // update positions of all styles and entities in block

        selectedBlock.entityRanges.forEach(function (range) {
          if (range.offset >= textOffset) {
            // entity is after cursor -> move start of entity after end of inserted text
            range.offset += pastedTextLength;
          } else if (range.offset + range.length >= textOffset) {
            // paste inside entity -> update length of entity to contain pasted text and mark paste as inside entity to remove all entities from pasted text
            pasteInsideEntity = true;
            range.length += pastedTextLength;
          }
        }); // update inline styles

        var splitStyles = [];

        for (var _i2 = 0; _i2 < selectedBlock.inlineStyleRanges.length; _i2++) {
          var range = selectedBlock.inlineStyleRanges[_i2];

          if (range.offset >= textOffset) {
            // style is after cursor -> move style after end of inserted text
            range.offset += pastedTextLength;
          } else if (range.offset + range.length >= textOffset) {
            // paste text inside style - split style into two parts
            var styleBeforeLength = textOffset - range.offset;
            var styleAfterLength = range.length - styleBeforeLength;
            range.length = styleBeforeLength;

            var newRange = _objectSpread({}, range);

            newRange.offset = textOffset + pastedTextLength;
            newRange.length = styleAfterLength;
            splitStyles.push(newRange);
          }
        } // add splited parts of inline styles into inlineStyleRanges


        (_selectedBlock$inline = selectedBlock.inlineStyleRanges).push.apply(_selectedBlock$inline, splitStyles);

        for (var blockIndex = 0; blockIndex < raw.blocks.length; blockIndex++) {
          textOffset = resultText.length;
          var _block2 = raw.blocks[blockIndex];
          resultText += _block2.text;

          if (!pasteInsideEntity) {
            for (var entityIndex = 0; entityIndex < _block2.entityRanges.length; entityIndex++) {
              var _range = _block2.entityRanges[entityIndex];
              _range.offset += textOffset;
              selectedBlock.entityRanges.push(_range);
            }
          }

          for (var styleIndex = 0; styleIndex < _block2.inlineStyleRanges.length; styleIndex++) {
            var style = _block2.inlineStyleRanges[styleIndex];
            style.offset += textOffset;
            selectedBlock.inlineStyleRanges.push(style);
          }
        }

        resultText += selectedBlock.text.substring(selection.anchorOffset);
        selectedBlock.text = resultText;
        var newSelectionOffset = selection.getStartOffset() + pastedTextLength;
        newSelection = {
          startOffset: newSelectionOffset,
          endOffset: newSelectionOffset,
          startKey: selection.getStartKey(),
          endKey: selection.getEndKey()
        };
      }

      newContentState = Object(draft_js__WEBPACK_IMPORTED_MODULE_2__["convertFromRaw"])(currentRaw);

      if (newSelection) {
        // update selection and selection history
        var _newEditorState = _bricks_selection_js__WEBPACK_IMPORTED_MODULE_10__["default"].updateSelection(editorState, newSelection);

        newSelection = _newEditorState.getSelection();
        newContentState = newContentState.set("selectionBefore", editorState.getSelection());
        newContentState = newContentState.set("selectionAfter", _newEditorState.getSelection());
      }

      var newEditorState = draft_js__WEBPACK_IMPORTED_MODULE_2__["EditorState"].set(editorState, {
        currentContent: newContentState,
        selection: newSelection || selection,
        directionMap: directionMap,
        undoStack: undoStack
      }); // set data into editor state

      for (var blockKey in blockDataMap) {
        var content = draft_js__WEBPACK_IMPORTED_MODULE_2__["Modifier"].setBlockData(newEditorState.getCurrentContent(), _bricks_selection_js__WEBPACK_IMPORTED_MODULE_10__["default"].modifySelection(editorState, {
          anchorKey: blockKey,
          focusKey: blockKey,
          anchorOffset: 0,
          focusOffset: 0
        }), blockDataMap[blockKey]);
        newEditorState = draft_js__WEBPACK_IMPORTED_MODULE_2__["EditorState"].set(newEditorState, {
          currentContent: content
        });
      }

      var newContent = newEditorState.getCurrentContent();
      newContent = newContent.set("selectionAfter", newEditorState.getSelection());
      newEditorState = draft_js__WEBPACK_IMPORTED_MODULE_2__["EditorState"].set(newEditorState, {
        currentContent: editorState.getCurrentContent(),
        selection: editorState.getSelection()
      });
      newEditorState = draft_js__WEBPACK_IMPORTED_MODULE_2__["EditorState"].push(newEditorState, newContent, "paste uu5string");
      this.getArea().setEditorState(newEditorState);
      return true; // handled
    }

    return false; // let handling of text to draft
  },
  _showToolbar: function _showToolbar() {
    return typeof this.props.getToolbar !== "function";
  },
  _handleFocus: function _handleFocus(event) {
    if (typeof this.props.onFocus === "function") this.props.onFocus(event);

    if (typeof this.props.getToolbar === "function") {
      var toolbar = this.props.getToolbar();
      if (toolbar) toolbar.setItems(this, this.state.buttons);
    } else {
      this.setState({
        focused: true
      });
    }
  },
  //@@viewOff:private
  //@@viewOn:render
  render: function render() {
    var mainAttrs = this.getMainAttrs();

    if (this.props.bgStyle === "transparent") {
      mainAttrs.className += " ".concat(this.getClassName("bgstyleTransparent"));
    }

    return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create("div", mainAttrs, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.AlertBus, {
      ref_: this._registerAlertBus,
      colorSchema: "danger",
      closeTimer: 5000
    }), uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(_area_js__WEBPACK_IMPORTED_MODULE_7__["default"], {
      ref_: this._registerArea,
      onChange: this._onChange,
      onBlur: this._onBlur,
      onFocus: this._handleFocus,
      readOnly: this.props.readOnly,
      getToolbar: this._getToolbar,
      handleKeyCommand: this.props.handleKeyCommand,
      onPaste: this._handlePaste,
      placeholder: this.props.placeholder,
      forceRenderModal: this.props.forceRenderModal,
      key: "area",
      id: "area"
    }), this._showToolbar() && uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(_toolbar_js__WEBPACK_IMPORTED_MODULE_6__["default"], {
      ref_: this._registerToolbar,
      className: this.getClassName("toolbar"),
      items: this.state.focused ? this.state.buttons : undefined,
      getArea: this._getArea,
      disabled: !this.state.areaLoaded || this.props.readOnly,
      key: "toolbar",
      id: "toolbar",
      animated: this.props.animatedToolbar,
      dynamic: this.props.dynamicToolbar
    }));
  } //@@viewOff:render

}));

Editor.isMultiline = function (uu5stringOrEditorState, plugins) {
  // uu5stringOrEditorState and plugins are mandatory
  if (!uu5stringOrEditorState || !plugins) {
    var msg = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Tools.getLSIItemByLanguage(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.Lsi.RichText.editor.mandatoryMethodParams);
    uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Tools.error(msg, {
      uu5string: uu5stringOrEditorState ? "OK" : "Missing",
      plugins: plugins ? "OK" : "Missing"
    });
    throw msg;
  }

  var editorState;

  if (typeof uu5stringOrEditorState === "string") {
    var mergedPlugins = _bricks_plugin_js__WEBPACK_IMPORTED_MODULE_9__["default"].mergePlugins({
      plugins: plugins
    }, _plugins_uu5_plugins_js__WEBPACK_IMPORTED_MODULE_12__["default"]).map(function (plugin) {
      return _plugins_plugin_factory_js__WEBPACK_IMPORTED_MODULE_11__["default"].createPluginFromDefinition(plugin);
    }); // sort plugins from the highest order to the lowest

    mergedPlugins.sort(function (p1, p2) {
      return p2.order - p1.order;
    });
    var config = _bricks_plugin_js__WEBPACK_IMPORTED_MODULE_9__["default"].processPlugins(mergedPlugins);

    try {
      editorState = _bricks_data_conversion_js__WEBPACK_IMPORTED_MODULE_8__["default"].uu5stringToEditorState(uu5stringOrEditorState, config.areaConfig.decorators, function () {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        return Editor._getEditorItem.apply(Editor, [mergedPlugins].concat(args));
      });
    } catch (e) {
      var _msg = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Tools.getLSIItemByLanguage(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.Lsi.RichText.editor.uu5stringToEditorError);

      uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Tools.error(_msg, {
        e: e,
        uu5string: uu5stringOrEditorState
      });
      throw _msg;
    }
  } else {
    editorState = uu5stringOrEditorState;
  } // check if editorState has more blocks


  var blocks = editorState.getCurrentContent().getBlocksAsArray();

  if (blocks.length > 1) {
    return true;
  }

  return !!blocks[0].getText().match(/\n/);
};

Editor._getEditorItem = function (plugins, name, props, children, wrapper, wrapperProps) {
  var result = {
    matchRate: 0
  };

  var _res;

  for (var index = 0; index < plugins.length; index++) {
    var plugin = plugins[index];

    if (typeof plugin.toEditorItem === "function") {
      _res = plugin.toEditorItem(name, props, children, wrapper, wrapperProps);

      if (_res && _res.matchRate === undefined) {
        return _res;
      } else if (_res && _res.matchRate > result.matchRate) {
        result = _res;
        if (result.matchRate === 1) break;
      }
    }
  }

  return result.matchRate ? result : undefined;
};

/* harmony default export */ __webpack_exports__["default"] = (Editor);

/***/ }),
/* 98 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EDITOR_BUTTONS", function() { return EDITOR_BUTTONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HTML_EDITOR_BUTTONS", function() { return HTML_EDITOR_BUTTONS; });
var EDITOR_BUTTONS = ["bold", "italic", "underline", "strike", "removeFormat", "sub", "sup", "fontSize", "textAlign", "paragraph", "link", "ol", "ul", "textColor", "backgroundColor", "fontFamily", "blockIndentIncrease", "blockIndentDecrease", "code", "uu5string", "icon"];
var HTML_EDITOR_BUTTONS = ["bold", "italic", "underline", "strike", "removeFormat", "sub", "sup", "fontSize", "textAlign", "paragraph", "link", "ol", "ul", "textColor", "backgroundColor", "fontFamily", "blockIndentIncrease", "blockIndentDecrease", "code", "blockquote", "image", "htmlFragment"];
/* harmony default export */ __webpack_exports__["default"] = ({
  EDITOR_BUTTONS: EDITOR_BUTTONS
});

/***/ }),
/* 99 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Toolbar", function() { return Toolbar; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(89);
/* harmony import */ var _toolbar_button_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(100);
/* harmony import */ var _bricks_style_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(93);
/* harmony import */ var _toolbar_less__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(103);
/* harmony import */ var _toolbar_less__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_toolbar_less__WEBPACK_IMPORTED_MODULE_4__);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }






var iconWidth = 32;
var Toolbar = uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].LsiMixin.withContext(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].VisualComponent.create({
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].BaseMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].ElementaryMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].ResizeMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].LsiMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    tagName: _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].TAG + "Toolbar",
    classNames: {
      main: function main(props, state) {
        return _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].CSS + "toolbar " + uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Css.css("\n            max-height: 34px;\n            border: 1px solid #BDBDBD;\n            ".concat(props.dynamic && state.empty ? "height: 0; border: none;" : "", "\n            pointer-events: ").concat(state.empty && props.dynamic ? "none" : "auto", ";\n            overflow: ").concat(state.empty && props.dynamic ? "hidden" : "visible", ";\n            ").concat(!state.empty && props.dynamic && props.animated ? "animation-name: uu5-richtext-toolbar-show; animation-duration: 0.5s;" : "", ";\n\n            & > * {\n              position: relative;\n              ").concat(props.animated && props.dynamic ? "transition: top 0.5s;" : "", "\n            }\n\n            && > * {\n              top: ").concat(props.dynamic && state.empty ? -35 : 0, "px;\n            }\n          "));
      },
      invisible: function invisible() {
        return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Css.css("visibility: hidden;");
      },
      background: function background() {
        return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Css.css("\n            height: 32px;\n            background: #FFFFFF;\n          ");
      }
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  propTypes: {
    items: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].arrayOf(uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].shape({
      icon: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string,
      items: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].arrayOf(uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].shape({
        label: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string, uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].object, uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].func]),
        value: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string,
        usePrefix: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].bool
      })),
      label: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string, uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].object, uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].func]),
      type: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].oneOf(["inline", "block", "entity", "custom", "customEntity", "customBlock"]),
      value: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string
    })),
    getArea: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].func,
    animated: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].bool,
    dynamic: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].bool
  },
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      items: [],
      getArea: null,
      animated: false,
      dynamic: true
    };
  },
  //@@viewOff:getDefaultProps
  //@@viewOn:reactLifeCycle
  getInitialState: function getInitialState() {
    this._buttons = new Array(this.props.items.length);
    return {
      maxIcons: 9999,
      editorState: null,
      getArea: this.props.getArea,
      items: this.props.items,
      visible: false,
      // hide toolbar before first measure, otherwise icons overflow from container
      empty: !this.props.items || !this.props.items.length
    };
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    // eslint-disable-next-line react/prop-types
    if (this.props.controlled) {
      var newState = {};

      if (nextProps.getArea !== this.state.getArea && typeof nextProps.getArea === "function") {
        var area = nextProps.getArea();
        var nextEditorState = area.getEditorState();

        if (area && this.state.editorState !== nextEditorState) {
          newState.editorState = nextEditorState;
        }

        newState.getArea = nextProps.getArea;
      }

      if (nextProps.items.length > this.props.items.length) {
        var _buttons = new Array(nextProps.items.length);

        for (var i = 0; i < this._buttons.length; i++) {
          _buttons[i] = this._buttons[i];
        }

        this._buttons = _buttons;
      }

      if (nextProps.items && nextProps.items.length) {
        newState.items = nextProps.items;
        newState.empty = false; // indicates that toolbar will be animated
      } else {
        newState.empty = true;
      }

      this.setState(newState);
    }
  },
  //@@viewOff:reactLifeCycle
  //@@viewOn:interface
  update: function update(editorState) {
    var _this = this;

    this.setState({
      editorState: editorState
    }, function () {
      for (var i = 0; i < _this._buttons.length; i++) {
        var button = _this._buttons[i]; // not each button should have API for opening and closing button

        if (button && typeof button.isOpen === "function" && button.isOpen()) {
          button.close();
        }
      }
    });
  },
  setItems: function setItems(editor, items) {
    var _this2 = this;

    this.setState(function (state) {
      var newState = {
        getArea: editor.getArea,
        items: items && items.length ? items : _this2.props.dynamic ? state.items : items,
        empty: !items || !items.length,
        editorState: editor.getArea().getEditorState()
      };
      return newState;
    });
  },
  //@@viewOff:interface
  //@@viewOn:overriding
  onResize_: function onResize_(oldWidth, newWidth) {
    var newMaxIcons = Math.max(Math.floor(newWidth / iconWidth), 0);
    var oldMaxIcons = this.state.maxIcons;

    if (newMaxIcons && newMaxIcons !== oldMaxIcons) {
      // it will always be lower after first render (if any icons are set) - this ensure set state visible to true
      if (oldMaxIcons !== newMaxIcons) {
        this.setState({
          maxIcons: newMaxIcons,
          visible: true
        });
      }
    }
  },
  //@@viewOff:overriding
  //@@viewOn:private
  _onButtonClick: function _onButtonClick(opt, callback) {
    if (typeof this.state.getArea !== "function") return;
    var area = this.state.getArea();
    if (!area) return;

    if (typeof opt.onClick === "function") {
      // process specific logic set by button
      var newEditorState = area.getEditorState();
      newEditorState = opt.onClick(newEditorState, area) || newEditorState; // update editor state

      area.setEditorState(newEditorState, callback);
    } else {
      // process standard change of editor state by inline styles, blocks or entities
      switch (opt.type) {
        case "inline":
          area.toggleInlineStyle(opt.value, opt.preserveStyle, opt.focus);
          break;

        case "block":
          area.toggleBlockType(opt.value);
          break;

        case "entity":
          // this method will set new editor state itself => stop next processing
          area.editSelectedComponent(opt.value, opt.component, opt.component, opt.onClick);
          break;
      }
    }
  },
  _isItemSelected: function _isItemSelected(editorState, item) {
    return !this.isDisabled() && (editorState ? typeof item.isSelected === "function" ? item.isSelected(editorState, item) : _bricks_style_js__WEBPACK_IMPORTED_MODULE_3__["default"].isSelected(editorState, item.type, item.value) : false);
  },
  _getItems: function _getItems() {
    var _this3 = this;

    var editorState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state.editorState;
    var items = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state.items;
    var parentItem = arguments.length > 2 ? arguments[2] : undefined;
    var newItems = [];
    items.forEach(function (item, index) {
      var result = uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Tools.mergeDeep(item);
      result.props = result.props || {};

      if (parentItem) {
        result.value = parentItem.ignorePrefix ? result.value : "".concat(parentItem.value, ".").concat(result.value);
        result.type = result.type || parentItem.type;
      }

      result.disabled = _this3.isDisabled() || (editorState ? typeof item.isDisabled === "function" ? item.isDisabled(editorState) : false : true);
      result.selected = _this3._isItemSelected(editorState, result);

      if (typeof result.getProps === "function") {
        result.props = uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Tools.merge(result.props, result.getProps(editorState, _this3.props.getArea, _this3));
      }

      result.label = _this3._getLsiItem(result.label);
      result.dropdownItemLabel = _this3._getLsiItem(result.dropdownItemLabel);

      if (result.props.items || result.items) {
        result.items = _this3._getItems(editorState, result.props.items || result.items, result);
        delete result.props.items;
      }

      if (!parentItem && index >= _this3.state.maxIcons) {
        if (index === _this3.state.maxIcons) {
          // pop last item in array and replace it by more item. Reset label of last item too.
          var lastItem = newItems.pop();
          newItems.push({
            value: "",
            icon: "mdi-dots-horizontal",
            items: [lastItem],
            props: {
              buttonProps: {
                pullRight: true
              }
            },
            disabled: _this3.isDisabled()
          });
        }

        newItems[_this3.state.maxIcons - 1].items.push(result);
      } else {
        newItems.push(result);
      }
    });
    return newItems;
  },
  _getLsiItem: function _getLsiItem(lsi) {
    if (lsi && _typeof(lsi) === "object") {
      return this.getLsiItem(lsi);
    } else if (typeof lsi === "function") {
      return this.getLsiItem(lsi());
    } else {
      return lsi;
    }
  },
  _getLocalizedItems: function _getLocalizedItems(items) {
    if (!items || !Array.isArray(items)) {
      return items;
    }

    var result = [];

    for (var index = 0; index < items.length; index++) {
      var item = items[index];
      var resultItem = {};

      for (var propName in item) {
        if (propName === "label" || propName === "tooltip") {
          resultItem[propName] = this._getLsiItem(item[propName]);
          continue;
        }

        if (propName === "items") {
          resultItem[propName] = this._getLocalizedItems(item[propName]);
        }

        resultItem[propName] = item[propName];
      }

      result.push(resultItem);
    }

    return result;
  },
  _registerButton: function _registerButton(index, button) {
    this._buttons[index] = button;
  },
  _renderButtons: function _renderButtons() {
    var _this4 = this;

    return this._getItems().map(function (item, index) {
      var ButtonComponent = item.button || _toolbar_button_js__WEBPACK_IMPORTED_MODULE_2__["default"];

      var onClick = function onClick(opt) {
        opt.onClick = opt.onClick || item.onClick;

        _this4._onButtonClick(opt);
      };

      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(ButtonComponent // eslint-disable-next-line react/jsx-no-bind
      , _extends({
        ref_: function ref_(button) {
          return _this4._registerButton(index, button);
        },
        key: index,
        className: "uu5-richtext-toolbar-button",
        icon: item.icon,
        onClick: onClick,
        type: item.type || "custom",
        value: item.value,
        getArea: _this4.state.getArea,
        disabled: item.disabled,
        pressed: item.selected,
        label: _this4._getLsiItem(item.label),
        items: _this4._getLocalizedItems(item.items),
        colorSchema: "custom",
        tooltip: _this4._getLsiItem(item.tooltip || item.label),
        preserveStyle: item.preserveStyle
      }, item.props, {
        baseline: true
      }));
    });
  },
  //@@viewOff:private
  //@@viewOn:render
  render: function render() {
    // if (!this.state.items || !this.state.items.length) return null;
    var mainProps = this.getMainPropsToPass();
    mainProps.disabled = false;

    if (!this.state.visible) {
      mainProps.className += " ".concat(this.getClassName("invisible"));
    }

    return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Div, mainProps, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create("div", {
      className: this.getClassName("background")
    }, this.state.items && this.state.items.length ? this._renderButtons() : null));
  } //@@viewOff:render

}));
/* harmony default export */ __webpack_exports__["default"] = (Toolbar);

/***/ }),
/* 100 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(89);
/* harmony import */ var _toolbar_button_less__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(101);
/* harmony import */ var _toolbar_button_less__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_toolbar_button_less__WEBPACK_IMPORTED_MODULE_2__);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




var ToolbarButton = uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].VisualComponent.create({
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].BaseMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].ElementaryMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].ColorSchemaMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    tagName: _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].TAG + "Toolbar.Button",
    classNames: {
      main: _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].CSS + "toolbar-button",
      dropdownItemIcon: _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].CSS + "toolbar-dropdown-item-icon",
      dropdownItemLabel: _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].CSS + "toolbar-dropdown-item-label" + " " + _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].CSS + "toolbar-dropdown-item-icon",
      dropdownButton: _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].CSS + "toolbar-dropdown-button",
      itemWithButton: _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].CSS + "item-with-button"
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  propTypes: {
    onClick: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].func,
    type: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string.isRequired,
    value: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string.isRequired,
    pressed: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].bool,
    items: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].array,
    label: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string,
    icon: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string,
    getArea: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].func,
    baseline: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].bool,
    buttonProps: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].object,
    preserveStyle: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].bool
  },
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      onClick: null,
      type: "",
      value: "",
      pressed: false,
      items: null,
      label: undefined,
      icon: undefined,
      getArea: null,
      baseline: false,
      buttonProps: undefined,
      preserveStyle: false
    };
  },
  //@@viewOff:getDefaultProps
  //@@viewOn:reactLifeCycle
  componentWillUnmount: function componentWillUnmount() {
    /* eslint-disable react/prop-types */
    // prop ref_ is defined in base-mixin
    if (typeof this.props.ref_ === "function") {
      this.props.ref_(null);
    }
    /* eslint-enable */

  },
  //@@viewOff:reactLifeCycle
  //@@viewOn:interface
  press: function press() {
    if (this._button) {
      this._button.press();
    }
  },
  pressUp: function pressUp() {
    if (this._button) {
      this._button.pressUp();
    }
  },
  isPressed: function isPressed() {
    return this._button ? this._button.isPressed() : this.props.pressed;
  },
  isDropdown: function isDropdown() {
    return this._dropdown && this._dropdown.isDropdown();
  },
  isOpen: function isOpen() {
    return this.isDropdown() && this._dropdown.isOpen();
  },
  open: function open() {
    return this._dropdown ? this._dropdown.open() : null;
  },
  close: function close() {
    return this._dropdown ? this._dropdown.close() : null;
  },
  //@@viewOff:interface
  //@@viewOn:overriding
  //@@viewOff:overriding
  //@@viewOn:private
  _onClick: function _onClick(e) {
    if (this._blockEditorBlur(this.props.type)) this._blockEvent(e);

    if (typeof this.props.onClick === "function") {
      this.props.onClick({
        component: this,
        type: this.props.type,
        value: this.props.value,
        preserveStyle: this.props.preserveStyle
      });
    }
  },
  _onItemClick: function _onItemClick(e, item) {
    var opt = {
      component: this,
      type: item.type || this.props.type,
      value: item.value,
      preserveStyle: this.props.preserveStyle
    };

    if (typeof item.onClick === "function") {
      opt.onClick = item.onClick;
    }

    if (typeof this.props.onClick === "function") {
      this.props.onClick(opt);
    }
  },
  _blockEvent: function _blockEvent(e) {
    e.preventDefault();
    e.stopPropagation();
  },
  _blockUU5Click: function _blockUU5Click(button, e) {
    this._blockEvent(e);
  },
  _blockEditorBlur: function _blockEditorBlur(type) {
    return true;
  },
  _registerButton: function _registerButton(button) {
    this._button = button;
  },
  _registerDropdown: function _registerDropdown(dropdown) {
    this._dropdown = dropdown;
  },
  _getItemClickFn: function _getItemClickFn(item) {
    var _this = this;

    return function (e) {
      return _this._onItemClick(e, item);
    };
  },
  //@@viewOff:private
  //@@viewOn:render
  _renderDropDownItems: function _renderDropDownItems() {
    var _this2 = this;

    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.items;
    var useIcon = items.some(function (item) {
      return item.icon;
    });
    return items.map(function (item) {
      var props = item.props;

      if (item.props) {
        item = _objectSpread({}, item, props);
      }

      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Dropdown.Item, {
        key: item.label,
        className: (item.className || "") + (item.button ? _this2.getClassName("itemWithButton") : ""),
        label: item.button ? uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(item.button, _extends({
          className: _this2.getClassName("dropdownButton"),
          label: item.dropdownItemLabel || item.label,
          icon: item.icon,
          onClick: _this2.props.onClick,
          selected: item.selected,
          disabled: item.disabled,
          dropdownItem: true,
          getArea: _this2.props.getArea,
          colorSchema: _this2.props.colorSchema // eslint-disable-line react/prop-types
          ,
          preserveStyle: _this2.props.preserveStyle
        }, props)) : uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Fragment, null, useIcon && (item.icon ? uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Icon, {
          className: _this2.getClassName("dropdownItemIcon"),
          icon: item.icon || "mdi-blank"
        }) : item.dropdownItemLabel ? uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create("span", {
          className: _this2.getClassName("dropdownItemLabel")
        }, item.label) : uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Icon, {
          className: _this2.getClassName("dropdownItemIcon"),
          icon: "mdi-blank"
        })), item.dropdownItemLabel || item.label),
        linkProps: _this2._blockEditorBlur(item.type) ? {
          mainAttrs: {
            onMouseDown: _this2._blockEvent
          }
        } : undefined,
        selected: item.selected,
        onClick: item.button || item.items ? _this2._blockUU5Click : _this2._getItemClickFn(item)
      }, item.items ? _this2._renderDropDownItems(item.items) : undefined);
    });
  },
  render: function render() {
    var mainProps = this.getMainPropsToPass();

    if (Array.isArray(this.props.items) && this.props.items.length > 0) {
      var iconLabel = this.props.icon && "<uu5string /><UU5.Bricks.Icon icon=\"".concat(this.props.icon, "\" />");
      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Dropdown, _extends({}, mainProps, this.props.buttonProps, {
        ref_: this._registerDropdown,
        label: iconLabel || this.props.label,
        iconHidden: true,
        buttonProps: {
          mainAttrs: {
            onMouseDown: this._blockEvent,
            tabIndex: -1
          }
        },
        baseline: this.props.baseline,
        colorSchema: this.props.colorSchema // eslint-disable-line react/prop-types

      }), this._renderDropDownItems());
    } else {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Button, _extends({
        ref_: this._registerButton
      }, mainProps, {
        pressed: this.props.pressed,
        mainAttrs: {
          onMouseDown: this._onClick,
          tabIndex: -1
        },
        onClick: this._blockUU5Click,
        baseline: this.props.baseline,
        colorSchema: this.props.colorSchema // eslint-disable-line react/prop-types

      }, this.props.buttonProps), this.props.icon ? uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Icon, {
        icon: this.props.icon
      }) : this.props.label);
    }
  } //@@viewOff:render

});
/* harmony default export */ __webpack_exports__["default"] = (ToolbarButton);

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(102);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":false}

options.transform = transform
options.insertInto = function anonymous(
) {
return __webpack_require__(15)();
};

var update = __webpack_require__(16)(content, options);

if(content.locals) module.exports = content.locals;



/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(14)(false);
// Module
exports.push([module.i, ".uu5-richtext-toolbar-dropdown-item-label {\n  width: 22px;\n  font-size: 14px;\n}\n", ""]);



/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(104);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":false}

options.transform = transform
options.insertInto = function anonymous(
) {
return __webpack_require__(15)();
};

var update = __webpack_require__(16)(content, options);

if(content.locals) module.exports = content.locals;



/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(14)(false);
// Module
exports.push([module.i, ".uu5-richtext-toolbar {\n  text-align: left;\n  border-radius: 2px;\n  white-space: nowrap;\n  font-family: ClearSans, sans-serif;\n  font-size: 14px;\n  position: relative;\n}\n.uu5-richtext-toolbar .uu5-richtext-toolbar-button.uu5-bricks-button,\n.uu5-richtext-toolbar .uu5-richtext-toolbar-button.uu5-bricks-dropdown > div > button {\n  padding: 0 4px;\n}\n.uu5-richtext-toolbar .uu5-richtext-toolbar-button.uu5-bricks-button,\n.uu5-richtext-toolbar .uu5-richtext-toolbar-button.uu5-bricks-dropdown .uu5-richtext-toolbar-button,\n.uu5-richtext-toolbar .uu5-richtext-toolbar-button.uu5-bricks-dropdown > div > .uu5-bricks-button {\n  border-radius: 0;\n  height: 32px;\n  width: 32px;\n}\n.uu5-richtext-toolbar .uu5-richtext-toolbar-button.uu5-bricks-button:not(.active):not(:hover),\n.uu5-richtext-toolbar .uu5-richtext-toolbar-button.uu5-bricks-dropdown .uu5-richtext-toolbar-button:not(.active):not(:hover),\n.uu5-richtext-toolbar .uu5-richtext-toolbar-button.uu5-bricks-dropdown > div > .uu5-bricks-button:not(.active):not(:hover) {\n  background: transparent;\n}\n.uu5-richtext-toolbar .uu5-richtext-toolbar-button.uu5-bricks-dropdown a .uu5-richtext-toolbar-dropdown-button {\n  background: transparent;\n}\n.uu5-richtext-toolbar .uu5-richtext-item-with-button > a {\n  padding: 0;\n}\n.uu5-richtext-toolbar .uu5-richtext-toolbar-button.uu5-bricks-dropdown .uu5-richtext-toolbar-dropdown-button {\n  width: 100%;\n  height: 100%;\n  display: inline-block;\n  text-align: left;\n}\n.uu5-richtext-toolbar .uu5-richtext-toolbar-dropdown-item-icon {\n  margin: 0 8px 0 -8px;\n}\n.uu5-richtext-toolbar .uu5-bricks-dropdown-item:not(.uu5-richtext-item-with-button) > .uu5-bricks-dropdown-item-link {\n  display: -webkit-box;\n  display: flex;\n}\n.uu5-richtext-toolbar .uu5-bricks-dropdown-item-submenu .uu5-bricks-dropdown-item-link {\n  -webkit-box-pack: start;\n          justify-content: flex-start;\n}\n.uu5-richtext-toolbar .uu5-bricks-dropdown-item-submenu .uu5-bricks-dropdown-item-link > .mdi-menu-right {\n  -webkit-box-flex: 1;\n          flex: 1 1 auto;\n  -webkit-box-pack: end;\n          justify-content: flex-end;\n}\n.uu5-richtext-toolbar .uu5-bricks-dropdown-item-submenu .uu5-bricks-dropdown-submenu.uu5-bricks-dropdown-menu.uu5-bricks-dropdown-menu {\n  left: 0;\n  width: 100%;\n  top: 100%;\n}\n@-webkit-keyframes uu5-richtext-toolbar-show {\n  0% {\n    overflow: hidden;\n  }\n  100% {\n    overflow: hidden;\n  }\n}\n@keyframes uu5-richtext-toolbar-show {\n  0% {\n    overflow: hidden;\n  }\n  100% {\n    overflow: hidden;\n  }\n}\n", ""]);



/***/ }),
/* 105 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var draft_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(31);
/* harmony import */ var draft_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(draft_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _bricks_uu5string_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(46);
/* harmony import */ var _bricks_selection_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(92);
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }





var DEFAULT_TAG_ORDER = 50;

var getEmptyRaw = function getEmptyRaw() {
  return {
    blocks: [{
      type: "unstyled",
      text: "",
      inlineStyleRanges: [],
      entityRanges: [],
      depth: 0,
      key: Object(draft_js__WEBPACK_IMPORTED_MODULE_1__["genKey"])()
    }],
    entityMap: {}
  };
};

var createPropsFormatterFn = function createPropsFormatterFn(propsFormatter) {
  return function (props) {
    if (typeof propsFormatter === "function") {
      return propsFormatter(props);
    }

    return props;
  };
};

var removeInputSupportCharacters = function removeInputSupportCharacters(string) {
  return string.replace(/[\u200b-\u200d]/g, "");
};

var formatInputString = function formatInputString(string) {
  return string.replace(/&gt;/g, ">").replace(/&lt;/g, "<").replace(/&amp;/g, "&");
};

var removeOutputSupportCharacters = function removeOutputSupportCharacters(string) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
    escapeXml: true,
    preserveEnters: false
  },
      _ref$escapeXml = _ref.escapeXml,
      escapeXml = _ref$escapeXml === void 0 ? true : _ref$escapeXml,
      _ref$preserveEnters = _ref.preserveEnters,
      preserveEnters = _ref$preserveEnters === void 0 ? false : _ref$preserveEnters;

  // remove zero width spaces
  var result = string.replace(/[\u200b-\u200d]/g, "");

  if (escapeXml) {
    // escape all & characters
    result = result.replace(/&/g, "&amp;"); // escape < and > characters

    result = result.replace(/</g, "&lt;").replace(/>/g, "&gt;");
  }

  if (!preserveEnters) {
    result = result.replace(/\n/g, "<br />");
  } // replace newlines


  return result;
};

var shouldReplaceBrForEnter = function shouldReplaceBrForEnter(raw, uu5stringObject, parentBlock, blockDataMap) {
  // check if uu5stringObject is br tag
  if (uu5stringObject.tag !== "br") return false; // if br has parent block it is break line not empty block

  if (parentBlock) return true; // check if it is not first block

  if (raw.blocks.length === 0) return false; // check if br is a part of artificail block

  var lastBlockKey = raw.blocks[raw.blocks.length - 1].key;
  return blockDataMap[lastBlockKey].artificial;
};

var printOpeningTag = function printOpeningTag(tag, props, isSelfClosing, blockData) {
  if (!tag || blockData && blockData.artificial) return "";

  if (blockData && blockData.isEmpty && !isSelfClosing) {
    return "<".concat(tag).concat(printProps(props), ">\u200B</").concat(tag, ">");
  }

  return "<".concat(tag).concat(printProps(props)).concat(isSelfClosing ? " />" : ">");
};

var printClosingTag = function printClosingTag(tag, blockData) {
  if (!tag || blockData && blockData.artificial) return "";
  return "</".concat(tag, ">");
};

var printProps = function printProps(props) {
  if (!props) return "";
  var stringProps = "";

  for (var name in props) {
    var value = props[name];

    var type = _typeof(value); // handle number and boolean


    if (type === "number" || value === false) {
      stringProps += " ".concat(name, "=").concat(value);
      continue;
    } else if (value === true) {
      stringProps += " ".concat(name);
      continue;
    } // convert objects except null to uu5json


    if (type === "object" && value) {
      value = "<uu5json />".concat(JSON.stringify(value));
      type = "string";
    } // handle string - escape double quotes


    if (type === "string") {
      stringProps += " ".concat(name, "=\"").concat(value.replace(/(\\)*"/g, '$1$1\\"'), "\""); // escape double quotes
    }
  }

  return stringProps;
};

var tagComparator = function tagComparator(tag1, tag2) {
  if (tag1.offset !== tag2.offset) {
    return tag1.offset - tag2.offset;
  } // sort closing tags before opening


  if (tag1.type === "closing" && tag2.type === "opening") return -1;
  if (tag2.type === "closing" && tag1.type === "opening") return 1;

  if (tag1.type === "opening") {
    // both opening tags
    if (tag1.startOffset === tag2.startOffset) {
      // sort components before styles if they starts on tha same character
      if (tag1.componentType === "component" && tag2.componentType === "style") {
        return -1;
      }

      if (tag2.componentType === "component" && tag1.componentType === "style") {
        return 1;
      } // order style elements


      if (tag1.order !== tag2.order) {
        return tag2.order - tag1.order;
      } else {
        if (tag2.endOffset === tag1.endOffset) {
          return tag1.index - tag2.index;
        } else {
          return tag2.endOffset - tag1.endOffset;
        }
      }
    }

    return tag1.startOffset - tag2.startOffset;
  } else {
    // both closing tags
    if (tag1.endOffset === tag2.endOffset) {
      // sort components before styles if they starts on tha same character
      if (tag1.componentType === "component" && tag2.componentType === "style") {
        return 1;
      }

      if (tag2.componentType === "component" && tag1.componentType === "style") {
        return -1;
      } // order style elements


      if (tag1.order !== tag2.order) {
        return tag1.order - tag2.order;
      } else {
        if (tag2.startOffset === tag1.startOffset) {
          return tag2.index - tag1.index;
        } else {
          return tag2.startOffset - tag1.startOffset;
        }
      }
    }

    return tag1.endOffset - tag2.endOffset;
  }
};

var groupSeparatorMap = {
  wrapper: 4,
  block: 3,
  entity: 2,
  inline: 1
};

var getDisplayLevel = function getDisplayLevel(display) {
  // unknown component is count as an entity
  return groupSeparatorMap[display] || groupSeparatorMap["entity"];
};

var validateChildrenDisplay = function validateChildrenDisplay(parent, parentProps, children, getEditorItem, propsFormatter) {
  var maxLevel = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : "block";
  // create propsFormatter function
  var propsFormatterFn = createPropsFormatterFn(propsFormatter);
  var maxDisplayLevel = getDisplayLevel(maxLevel);
  var isValid = true;
  children.forEach(function (child) {
    if (typeof child === "string") return;
    var ancestors = child.props.toObject().content || child.children;
    var childEditorItem = child.cachedEditorItem || getEditorItem(child.tag, propsFormatterFn(child.props.toObject()), ancestors, parent, parentProps);
    child.cachedEditorItem = childEditorItem;
    var childLevel = getDisplayLevel(childEditorItem.display);

    if (childLevel >= maxDisplayLevel) {
      isValid = false;
    }
  });
  return isValid;
};

var removeWhiteSpacesFromChildren = function removeWhiteSpacesFromChildren(string, children, prevWhiteSpace) {
  var parts = string.split(/(\s{2,})/g);

  if (parts) {
    // parts always have odd count of items
    if (parts[0]) {
      children.push(parts[0]);
      prevWhiteSpace.value = false;
    }

    for (var i = 1; i < parts.length; i += 2) {
      children.push(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].UU5String.parse("<uu5string /><UU5.RichText.Whitespace spaces=\"".concat(parts[i], "\" hidden=").concat(prevWhiteSpace.value, ">").concat(parts[i][0], "</UU5.RichText.Whitespace>"))[0]);
      prevWhiteSpace.value = true;

      if (parts[i + 1]) {
        children.push(parts[i + 1]);
        prevWhiteSpace.value = false;
      }
    }
  } else {
    children.push(string);
  }
};

var removeWhiteSpace = function removeWhiteSpace(uu5stringObject) {
  var prevWhiteSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
    value: false
  };

  // children
  if (uu5stringObject.children) {
    var children = [];
    uu5stringObject.children.forEach(function (child) {
      if (typeof child === "string") {
        removeWhiteSpacesFromChildren(child, children, prevWhiteSpace);
      } else {
        children.push(removeWhiteSpace(child, prevWhiteSpace));
      }
    });
    uu5stringObject.children = children;
  } // content


  var contentProps = uu5stringObject.props && uu5stringObject.props.props.find(function (item) {
    return item.name === "content";
  });

  if (contentProps) {
    var content = [];
    var value = typeof contentProps.value === "string" ? [contentProps.value] : contentProps.value;
    value.forEach(function (child) {
      if (typeof child === "string") {
        // content.push(
        //   ...UU5.Common.UU5String.parse(
        //     "<uu5string />" +
        //       child.replace(/(\s{2,})/g, '<UU5.RichText.Whitespace spaces="$1"> </UU5.RichText.Whitespace>')
        //   )
        // );
        removeWhiteSpacesFromChildren(child, content, prevWhiteSpace);
      } else {
        content.push(removeWhiteSpace(child));
      }
    });
    contentProps.value = content;
  }

  return uu5stringObject;
};

var processBlockToRaw = function processBlockToRaw(raw, editorItem, children, blockDataMap, getEditorItem, propsFormatter, parentBlock) {
  var block = {
    key: Object(draft_js__WEBPACK_IMPORTED_MODULE_1__["genKey"])(),
    text: "",
    type: "unstyled",
    depth: parentBlock ? parentBlock.depth + 1 : 0,
    inlineStyleRanges: [],
    entityRanges: []
  };
  raw.blocks.push(block); // if editorItem is block component create block by defined type, otherwise create unstyled block

  if (editorItem && editorItem.display === "block") {
    block.type = editorItem.type;
    blockDataMap[block.key] = editorItem.data;
  } else {
    blockDataMap[block.key] = {
      artificial: true
    };
  }

  if (children) {
    if (!Array.isArray(children)) {
      children = [children];
    }

    appendChildrenToBlock(raw, editorItem, children, blockDataMap, getEditorItem, propsFormatter, parentBlock);
  }

  return "";
};

var processEntityToRaw = function processEntityToRaw(raw, editorItem, children, getEditorItem, propsFormatter, parentBlock) {
  var textOffset = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;
  var text = ""; // check content of entity - all nodes must be texts or inline components

  if (!validateChildrenDisplay(editorItem.type, editorItem.data ? editorItem.data.props : {}, children, getEditorItem, propsFormatter, "entity")) {
    throw "Unsupported structure of uu5string. Entity can contain only text or inline styles.";
  } // process all children


  children.forEach(function (child) {
    return text += processUU5StringObjectToRaw(raw, child, null, getEditorItem, propsFormatter, parentBlock, textOffset + text.length);
  }); // register entity to raw

  var data = editorItem.data; // inline component

  var entity = {
    offset: parentBlock.text.length + textOffset,
    length: text.length,
    key: raw.entityArray.length
  };
  parentBlock.entityRanges.push(entity);
  raw.entityArray.push({
    mutability: "MUTABLE",
    type: editorItem.type,
    data: data
  }); // cannot return empty text - that entity will not be rendered by editor. Add zws character as a content of selfclosed tags

  return text || "\u200B";
};

var processInlineToRaw = function processInlineToRaw(raw, editorItem, children, getEditorItem, propsFormatter, parentBlock) {
  var textOffset = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;
  var text = ""; // check content of entity - all nodes must be texts or inline components

  if (!validateChildrenDisplay(editorItem.type, editorItem.data ? editorItem.data.props : {}, children, getEditorItem, propsFormatter, "block")) {
    throw "Unsupported structure of uu5string. Inline styles cannot contain blocks or wrappers.";
  } // process all children


  var offset = parentBlock.text.length;
  children.forEach(function (child) {
    return text += processUU5StringObjectToRaw(raw, child, null, getEditorItem, propsFormatter, parentBlock, textOffset + text.length);
  });
  var inlineStyle = {
    offset: offset + textOffset,
    length: text.length,
    style: editorItem.type
  };
  parentBlock.inlineStyleRanges.push(inlineStyle);
  return text;
};

var appendChildrenToBlock = function appendChildrenToBlock(raw, editorItem, children, blockDataMap, getEditorItem, propsFormatter, parentBlock) {
  var block = raw.blocks[raw.blocks.length - 1];
  children.forEach(function (child) {
    try {
      block.text += processUU5StringObjectToRaw(raw, child, blockDataMap, getEditorItem, propsFormatter, block);
    } catch (e) {
      var textLength;
      var textOffset = block.text.length;
      var key = raw.entityArray.length; // remove from raw all elements added by processing block

      if (typeof child === "string") {
        textLength = child.length;
        block.text += child;
      } else {
        var text = Object(_bricks_uu5string_js__WEBPACK_IMPORTED_MODULE_2__["removeSpecialNodes"])(child).toString();
        textLength = text.length;
        block.text += text;

        if (block.entityRanges) {
          block.entityRanges = block.entityRanges.filter(function (range) {
            var result = range.offset < textOffset;

            if (!result) {
              raw.entityarray[range.key] = undefined;
            }

            return result;
          });
        }

        if (block.inlineStyleRanges) {
          block.inlineStyleRanges = block.inlineStyleRanges.filter(function (range) {
            return range.offset < textOffset;
          });
        }
      }

      block.entityRanges = block.entityRanges || []; // add entity to block

      block.entityRanges.push({
        offset: textOffset,
        length: textLength,
        key: key
      }); // add entity

      raw.entityArray.push({
        type: "error",
        mutability: "MUTABLE"
      });
    }
  });
};

var appendUU5StringObjectToBlock = function appendUU5StringObjectToBlock(raw, uu5stringObject, blockDataMap, getEditorItem, propsFormatter) {
  // try to append node into previous block node if last added block was added by algorithm
  var lastBlock = raw.blocks.length === 0 ? undefined : raw.blocks[raw.blocks.length - 1];
  var lastBlockData = lastBlock ? blockDataMap[lastBlock.key] : undefined;

  if (lastBlockData && lastBlockData.artificial || lastBlock && lastBlock._uu5richTextDataCollector) {
    if (typeof uu5stringObject === "string") {
      lastBlock.text += uu5stringObject;
    } else {
      appendChildrenToBlock(raw, undefined, [uu5stringObject], blockDataMap, getEditorItem, propsFormatter, lastBlock);
    }

    return lastBlock;
  }

  return processBlockToRaw(raw, undefined, [uu5stringObject], blockDataMap, getEditorItem, propsFormatter);
};

var processUU5StringObjectToRaw = function processUU5StringObjectToRaw(raw, uu5stringObject, blockDataMap, getEditorItem, propsFormatter, parentBlock) {
  var textOffset = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;
  // create propsFormatter function
  var propsFormatterFn = createPropsFormatterFn(propsFormatter); // handle string node

  if (typeof uu5stringObject === "string") {
    if (!parentBlock) {
      return appendUU5StringObjectToBlock(raw, uu5stringObject, blockDataMap, getEditorItem, propsFormatter);
    }

    return formatInputString(uu5stringObject);
  } else if (!parentBlock && shouldReplaceBrForEnter(raw, uu5stringObject, parentBlock, blockDataMap)) {
    return appendUU5StringObjectToBlock(raw, "\n", blockDataMap, getEditorItem, propsFormatter);
  } // handle uu5string node props - try to take props from cache


  var props = uu5stringObject.cachedEditorItem ? uu5stringObject.cachedEditorItem.props : propsFormatterFn(uu5stringObject.props.toObject());
  if (!props) props = {};
  var children = props.content || uu5stringObject.children || [];
  var useContent = !!props.content;

  if (!Array.isArray(children)) {
    children = [children];
  }

  delete props.content; // get type of node - at first try to get item from cache, it can be set after check of children types by parent component

  var editorItem = uu5stringObject.cachedEditorItem;

  if (!editorItem) {
    editorItem = parentBlock ? getEditorItem(uu5stringObject.tag, props, children, parentBlock.type, (blockDataMap[parentBlock.key] || {}).props) : getEditorItem(uu5stringObject.tag, props, children);
  }

  uu5stringObject.cachedEditorItem = editorItem; // inline text cannot be nested right inside wrapper (e.g. ul, ol) - it should be text format

  if (parentBlock && parentBlock.display === "wrapper" && editorItem.display === "inline") {
    parentBlock.data = parentBlock.data || {};
    parentBlock.data.delimiters = parentBlock.data.delimiters || [];
    parentBlock.data.delimiters.push(children);
    return null;
  }

  if (typeof editorItem.getChildren === "function") {
    var resultChildren = editorItem.getChildren(uu5stringObject);
    editorItem.children = resultChildren.children;
    useContent = resultChildren.useContent;
    delete editorItem.getChildren;
  } // children must be an array


  if (editorItem.children && !Array.isArray(editorItem.children)) {
    editorItem.children = [editorItem.children];
  }

  if (editorItem.children) {
    children = editorItem.children;
  } else {
    editorItem.children = children;
  } // mark if result shloud be saved as a content or as a children


  if (editorItem.data && useContent) {
    editorItem.data.useContent = useContent;
  } // handle situation if input data is incorrect - for example all entites and inline styles must be defined inside block component


  if (editorItem.display !== "block" && editorItem.display !== "wrapper" && !parentBlock) {
    return appendUU5StringObjectToBlock(raw, uu5stringObject, blockDataMap, getEditorItem, propsFormatter);
  }

  switch (editorItem.display) {
    case "wrapper":
      // set depth to wrapper
      // if wrapper has no parent (is top level component) set depth to -1 because its child needs to have set depth 0 ( they haven"t any parent component )
      // if wrapper has parent block, takes parent block's depth and its child will rise depth by 1
      editorItem.depth = parentBlock ? parentBlock.depth : -1; // only process child nodes - wrapper is skipped

      children.forEach(function (child) {
        return processUU5StringObjectToRaw(raw, child, blockDataMap, getEditorItem, propsFormatter, editorItem, textOffset);
      });
      return "";

    case "block":
      return processBlockToRaw(raw, editorItem, children, blockDataMap, getEditorItem, propsFormatter, parentBlock);

    case "entity":
      return processEntityToRaw(raw, editorItem, children, getEditorItem, propsFormatter, parentBlock, textOffset);

    case "inline":
      return processInlineToRaw(raw, editorItem, children, getEditorItem, propsFormatter, parentBlock, textOffset);

    default:
      // process as unknown entity
      editorItem.type = parentBlock ? "unknown" : "unstyled";
      editorItem.display = parentBlock ? "entity" : "block";
      editorItem.data = editorItem.data || {};
      editorItem.data.tag = uu5stringObject.tag; // show content of unknown tag as a string

      return parentBlock ? processEntityToRaw(raw, editorItem, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].UU5String.contentToString(children), getEditorItem, parentBlock, textOffset) : processBlockToRaw(raw, editorItem, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].UU5String.contentToString(children), getEditorItem, parentBlock);
  }
};

var normalizeStyleName = function normalizeStyleName(styleName) {
  // translate from font-size to fontSize
  return styleName.replace(/-([a-z])/g, function (_, $1) {
    return $1.toUpperCase();
  }).trim();
};

var nodeAttributesToProps = function nodeAttributesToProps(nodeAttributes) {
  if (!nodeAttributes || nodeAttributes.length === 0) return {};
  var props = {};

  for (var i = 0; i < nodeAttributes.length; i++) {
    var propName = nodeAttributes[i].name; // handle change name of attributes class and for to correct JS attribute/prop names

    if (propName === "class") propName = "className";
    if (propName === "for") propName = "htmlFor";
    props[propName] = nodeAttributes[i].value;
  } // parse style attribute to object


  if (props.style) {
    var propsStyle = {};
    var styles = props.style.split(";");

    for (var _i = 0; _i < styles.length; _i++) {
      if (!styles[_i]) continue;

      var match = styles[_i].match(/^\s*(.*?):\s*(.*?)\s*$/);

      if (match) {
        propsStyle[normalizeStyleName(match[1])] = match[2];
      }
    }

    props.style = propsStyle;
  }

  return props;
};

var translateComponents = function translateComponents(comp, htmlMappings, stylesFilter, parentNode, trimSpaces) {
  if (!htmlMappings) return;
  var resultComp = new uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].UU5String.Object();
  var usedStyles = {};
  var handledProps = {
    style: true,
    className: true
  }; // possible filtering styles by stylesFilter ( styles from editor's root )

  if (comp.props.style && stylesFilter) {
    for (var styleName in comp.props.style) {
      if (comp.props.style[styleName] === stylesFilter[styleName]) {
        usedStyles[styleName] = true;
      }
    }
  }

  var lastAncestor;

  for (var index = 0; index < htmlMappings.length; index++) {
    var rule = htmlMappings[index]; // check tagName

    if (rule.tagName && rule.tagName !== true && rule.tagName !== comp.tagName) {
      // comp does not match tagName with rule
      continue;
    } // possible to check className - not needed now


    if (rule.className) {
      // check if element has class name
      if (!comp.props.className) {
        continue;
      } // check className of the component


      if (typeof rule.className === "string" && rule.className !== comp.props.className) {
        continue;
      } else if (_typeof(rule.className) === "object" && rule.className instanceof RegExp && !comp.props.className.match(rule.className)) {
        continue;
      }
    }

    var matchedStyle = {}; // check styles

    if (rule.style) {
      if (rule.style === true) {
        // copy all unused styles into style prop
        if (comp.props && comp.props.style) {
          for (var _styleName in comp.props.style) {
            if (usedStyles[_styleName]) {
              continue;
            }

            usedStyles[_styleName] = true;
            matchedStyle[_styleName] = comp.props.style[_styleName];
          }
        }
      } else {
        if (!comp.props || !comp.props.style) {
          // cannot match style
          continue;
        }

        var matchStyles = true;
        var compStyle = comp.props.style;

        for (var _styleName2 in rule.style) {
          if (usedStyles[_styleName2]) {
            // this rule try to use same style as another successful processed rule. Any style cannot be used twice.
            matchStyles = false;
            break;
          }

          var value = rule.style[_styleName2];

          if (compStyle[_styleName2]) {
            if (_typeof(value) === "object" && value instanceof RegExp) {
              if (compStyle[_styleName2].match(value)) {
                matchedStyle[_styleName2] = value;
              } else {
                matchStyles = false;
                break;
              }
            } else if (value === true || value === compStyle[_styleName2]) {
              matchedStyle[_styleName2] = true; // only mark style to be used if
            } else {
              matchStyles = false;
              break;
            }
          } else {
            matchStyles = false;
            break;
          }
        } // styles does not match -> process next rule


        if (!matchStyles) continue;
      }
    }

    var processingComponent = resultComp; // process rule result

    var ruleResult = typeof rule.result === "function" ? rule.result(comp) : rule.result;

    if (!ruleResult) {
      continue;
    } // rule match - add tagName and styles into resultNode


    if (rule.tagName !== true) {
      if (rule.final) {
        resultComp.tag = ruleResult.tagName;
      } else {
        processingComponent = new uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].UU5String.Object(ruleResult.tagName, undefined, resultComp.children);
        resultComp.children = [processingComponent];

        if (!lastAncestor) {
          lastAncestor = processingComponent;
        }
      }
    } // add all props to result component


    if (ruleResult.props) {
      var _loop = function _loop(propName) {
        // add prop as handled to prevent rewrite set value from comp
        handledProps[propName] = true;
        var prop = processingComponent.props.props.find(function (prop) {
          return prop.name === propName;
        });
        var propValue = ruleResult.props[propName];

        var propValueType = _typeof(propValue); // create new prop if does not exists


        if (!prop) {
          prop = {
            name: propName
          };
          processingComponent.props.props.push(prop);
        } // set new value and value type to prop


        prop.value = propValueType === "object" ? "<uu5json />".concat(JSON.stringify(propValue)) : propValue;
        prop.valueType = propValueType;
      };

      for (var propName in ruleResult.props) {
        _loop(propName);
      }
    } // add all styles to result component and remove them from original


    if (ruleResult.style || rule.style === true) {
      // find property style or create new one if does not exists
      var styleProp = processingComponent.props.props.find(function (prop) {
        return prop.name === "style";
      });

      if (!styleProp) {
        // create new empty style property
        styleProp = {
          name: "style",
          valueType: "uu5json",
          value: {}
        };
        processingComponent.props.props.push(styleProp);
      }

      var styleSource = ruleResult.style ? ruleResult.style : matchedStyle;

      for (var _styleName3 in styleSource) {
        var styleValue = styleSource[_styleName3];
        if (styleValue === true) styleValue = comp.props.style[_styleName3];
        styleProp.value[_styleName3] = styleValue;
      }
    }

    for (var _styleName4 in matchedStyle) {
      var matchedStyleValue = matchedStyle[_styleName4];

      if (matchedStyleValue === true) {
        usedStyles[_styleName4] = true;
      } else if (_typeof(matchedStyleValue) === "object" && matchedStyleValue instanceof RegExp) {
        // remove matched style from attribute
        comp.props.style[_styleName4] = comp.props.style[_styleName4].replace(matchedStyleValue, ""); // if whitepsaces are only characters left in style after remove, then mark style as used to disallow match in another rule

        if (comp.props.style[_styleName4].match(/^\s*$/)) {
          usedStyles[_styleName4] === true;
        }
      }
    }

    if (rule.final) break;
  } // last ancestor is definde only if any children was added into children


  if (!resultComp.tag && lastAncestor) {
    // children is here always only one component - missing top component is replaced by only children
    resultComp = resultComp.children[0];
  } // if cannot translate original component to new one, return original component


  if (resultComp.tag) {
    // process children
    lastAncestor = lastAncestor || resultComp;
    lastAncestor.children = comp.childNodes.length ? DataConversion.parseHtmlNodeListToUu5stringObject(comp.childNodes, htmlMappings, stylesFilter, parentNode, trimSpaces) : undefined;

    for (var _propName in comp.props) {
      if (handledProps[_propName]) continue;
      resultComp.props.props.push({
        name: _propName,
        value: comp.props[_propName]
      });
    }

    return resultComp;
  } else {
    // return processed children
    return DataConversion.parseHtmlNodeListToUu5stringObject(comp.childNodes, htmlMappings, stylesFilter, parentNode, trimSpaces);
  }
};

var DataConversion = {
  editorStateToRaw: function editorStateToRaw(editorState) {
    return Object(draft_js__WEBPACK_IMPORTED_MODULE_1__["convertToRaw"])(editorState.getCurrentContent());
  },
  editorStateToUU5String: function editorStateToUU5String(editorState, getUU5Item, propsFormatterFn) {
    var propsFormatter = function propsFormatter(props) {
      if (!props) return undefined;

      if (propsFormatterFn) {
        return propsFormatterFn(JSON.parse(JSON.stringify(props))) || props;
      } else {
        return props;
      }
    };

    var content = editorState.getCurrentContent();
    var raw = Object(draft_js__WEBPACK_IMPORTED_MODULE_1__["convertToRaw"])(content); // check if editor is not empty

    var empty = true;

    for (var bi = 0; bi < raw.blocks.length; bi++) {
      var block = raw.blocks[bi];

      if (block.text) {
        empty = false;
        break;
      }
    }

    if (empty) return "";
    var uu5string = "<uu5string />";
    var wrappers = []; // hold wrapper element for each level

    var blockItems = [];
    var lastWhitespace = false; // indicate if last character in of the previous block was replaced by whitespace

    var blockDatas = [];

    for (var _bi = 0; _bi < raw.blocks.length; _bi++) {
      var _block = raw.blocks[_bi];
      var blockData = content.getBlockForKey(_block.key).getData().toJSON();

      if (blockData.artificial) {
        // remove artificial block meta information if is set on another block type then default or has set some props
        blockData.artificial = _block.type === "unstyled" && (!_block.data || !_block.data.props || !_block.data.props.size) && ( // preserve to remove div from two blocks right after each other
        _bi === 0 || !blockDatas[_bi - 1].artificial) && ( // next or previour blocks should not be <br /> (empty unstyled block)
        !raw.blocks[_bi + 1] || raw.blocks[_bi + 1].text && raw.blocks[_bi + 1].type === "unstyled") && (_bi === 0 || raw.blocks[_bi - 1].text && raw.blocks[_bi - 1].type === "unstyled");
      }

      blockDatas.push(blockData);
    }

    var _loop2 = function _loop2(_bi2) {
      var block = raw.blocks[_bi2];
      var nextBlock = _bi2 === raw.blocks.length - 1 ? null : raw.blocks[_bi2 + 1];
      var blockData = blockDatas[_bi2];
      var blockProps = blockData.props;
      var wrapper = wrappers.length > 0 && wrappers[wrappers.length - 1] || {};
      var uu5BlockItem = block.type === "error" ? {
        tag: null,
        opts: {
          preserveEnters: true
        }
      } : getUU5Item("block", block.type, blockProps, wrapper.tag, wrapper.props, !block.text);
      uu5BlockItem.opts = uu5BlockItem.opts || {}; // need to sort wrappers and blocks to correct end tags

      var toClose = []; // close all blocks with same or higher depth

      for (var _i4 = blockItems.length - 1; _i4 >= 0; _i4--) {
        var blockItem = blockItems[_i4];
        if (blockItem.depth < block.depth) break; // uu5string += printClosingTag(blockItems.pop().item.tag);

        blockItems.pop();
        toClose.push({
          tag: blockItem.item.tag,
          depth: blockItem.depth,
          blockData: blockItem.blockData
        });
      }

      var preserveWrapper = false;

      while (wrappers.length > 0 && wrappers[wrappers.length - 1].depth >= block.depth) {
        var _wrapper = wrappers.pop(); // do not print closing tag of wrapper


        if (_wrapper.depth === block.depth && _wrapper.tag === uu5BlockItem.wrapper) {
          preserveWrapper = true;
          wrappers.push(_wrapper);
          break;
        } // print closing wrapper tag
        // uu5string += printClosingTag(wrapper.tag);


        toClose.push({
          tag: _wrapper.tag,
          depth: _wrapper.depth - 0.5
        });
      } // sort toClose array by depth of tags


      toClose.sort(function (tag1, tag2) {
        return tag2.depth - tag1.depth;
      });

      for (var _i5 = 0; _i5 < toClose.length; _i5++) {
        uu5string += printClosingTag(toClose[_i5].tag, toClose[_i5].blockData);
      }

      if (uu5BlockItem.wrapper) {
        // add new wrapper if it is preserved
        if (!preserveWrapper) {
          // add wrapper to array
          wrappers.push({
            tag: uu5BlockItem.wrapper,
            props: blockData.wrapperProps,
            depth: block.depth
          }); // print opening wrapper tag

          uu5string += printOpeningTag(uu5BlockItem.wrapper, propsFormatter(uu5BlockItem.wrapperProps));
        }
      }

      if (!uu5BlockItem.tag) {
        // components only closed in uu5string block component
        uu5string += removeOutputSupportCharacters(block.text, _objectSpread({
          escapeXml: false
        }, uu5BlockItem.opts));
      } else if (uu5BlockItem.isSelfClosed || removeOutputSupportCharacters(block.text).length === 0 && (!nextBlock || nextBlock.depth <= block.depth) && (!block.entityRanges || block.entityRanges.length === 0)) {
        // print wrappers delimiter if block is wrapped
        // TODO
        // selfclosed block is defined as selfclosed or is empty and does not contain inner block
        blockData.isEmpty = true;
        uu5string += printOpeningTag(uu5BlockItem.tag, propsFormatter(uu5BlockItem.props), uu5BlockItem.isSelfClosed, blockData);
      } else {
        // print wrappers delimiter if block is wrapped
        // TODO
        // print opening tag and add block into blocks array
        uu5string += printOpeningTag(uu5BlockItem.tag, propsFormatter(uu5BlockItem.props), false, blockData);
        blockItems.push({
          depth: block.depth,
          item: uu5BlockItem,
          blockData: blockData
        }); // set inline styles into tags array

        var tags = [];
        var charUpdates = [];

        for (var _index = 0; _index < block.inlineStyleRanges.length; _index++) {
          var range = block.inlineStyleRanges[_index];
          var uu5InlineItem = getUU5Item("inline", range.style, null);

          if (!uu5InlineItem.tag) {
            if (uu5InlineItem.replaceChar) {
              var update = uu5InlineItem.replaceChar(block.text.substring(range.offset, range.offset + range.length));

              if (update) {
                update.offset += range.offset;
                update.length = range.length;
                charUpdates.push(update);
              }
            }

            continue;
          }

          var isSelfClosing = uu5InlineItem.isSelfClosed || removeOutputSupportCharacters(block.text.substr(range.offset, range.length)).length === 0;
          var tagIndex = tags.length; // opening tag

          tags.push({
            type: "opening",
            componentType: "style",
            offset: range.offset,
            startOffset: range.offset,
            endOffset: range.offset + range.length,
            name: uu5InlineItem.tag,
            props: uu5InlineItem.props,
            isSelfClosing: isSelfClosing,
            index: tagIndex,
            order: uu5InlineItem.order || DEFAULT_TAG_ORDER,
            getChildren: uu5InlineItem.fn
          }); // closing or selfclosing tag

          if (!isSelfClosing) {
            tags.push({
              type: "closing",
              componentType: "style",
              offset: range.offset + range.length,
              startOffset: range.offset,
              endOffset: range.offset + range.length,
              name: uu5InlineItem.tag,
              props: uu5InlineItem.props,
              index: tagIndex,
              order: uu5InlineItem.order || DEFAULT_TAG_ORDER
            });
          }
        } // set inline components(entities) into tags array


        for (var _index2 = 0; _index2 < block.entityRanges.length; _index2++) {
          var _range = block.entityRanges[_index2];
          var entity = raw.entityMap[_range.key]; // skip empty or removed entities

          if (!entity.type) continue;
          var uu5EntityItem = entity.type === "error" ? {
            tag: null,
            opts: {
              preserveEnters: true
            }
          } : getUU5Item("entity", entity.type, entity.data.props);

          var _isSelfClosing = uu5EntityItem.isSelfClosed || entity.data.useContent || removeOutputSupportCharacters(block.text.substr(_range.offset, _range.length)).length === 0;

          if (entity.data.useContent) {
            if (!uu5EntityItem.props) {
              uu5EntityItem.props = {
                content: block.text.substring(_range.offset, _range.length)
              };
            } else {
              uu5EntityItem.props.content = block.text.substring(_range.offset, _range.offset + _range.length);
            }
          }

          var _tagIndex = tags.length; // opening tag

          tags.push({
            type: "opening",
            componentType: "component",
            offset: _range.offset,
            startOffset: _range.offset,
            endOffset: _range.offset + _range.length,
            name: uu5EntityItem.tag,
            props: uu5EntityItem.props,
            isSelfClosing: _isSelfClosing,
            index: _tagIndex,
            order: uu5EntityItem.order || DEFAULT_TAG_ORDER,
            opts: uu5EntityItem.opts
          }); // closing or selfclosing tag

          if (!_isSelfClosing) {
            tags.push({
              type: "closing",
              componentType: "component",
              offset: _range.offset + _range.length,
              startOffset: _range.offset,
              endOffset: _range.offset + _range.length,
              name: uu5EntityItem.tag,
              props: uu5EntityItem.props,
              index: _tagIndex,
              order: uu5EntityItem.order || DEFAULT_TAG_ORDER,
              opts: uu5EntityItem.opts
            });
          }
        } // sort array of tags


        tags.sort(tagComparator); // sort update by index from the lowest

        charUpdates.sort(function (a, b) {
          return a.offset - b.offset;
        }); // remove spaces which are hidden and wasn't lead by showed space

        var last = lastWhitespace ? -1 : -2; // if last character of previous block wasnt replaced by whitespace, set unreachable index

        for (var spaceIndex = 0; spaceIndex < charUpdates.length; spaceIndex++) {
          var space = charUpdates[spaceIndex]; // if current space is hidden and there is no space right before it -> remove space

          if (space.hidden && space.offset !== last + 1) {
            // first node in the block - check ending of uu5string, because uu5string removes whitespace components
            if (space.offset === 0) {
              if (uu5string.match(/\s{2,}(<[^>]*>)*$/)) {
                // space is right after another big space
                space.hidden = false;
                last = space.offset;
              } else {
                space.replace = "";
              }
            } else {
              if (block.text.substring(0, space.offset).match(/\s{2,}(<[^>]*>)*$/)) {
                // space is right after another big space
                space.hidden = false;
                last = space.offset;
              } else {
                space.replace = "";
              }
            }
          } else {
            last = space.offset;
          }
        } // find last non hidden whitespace


        var textLength = block.text.length;

        for (var _i6 = charUpdates.length - 1; _i6 >= 0; _i6--) {
          var whitespace = charUpdates[_i6]; // shorten text about length of whitepsace elements

          textLength -= whitespace.length; // check if whitespace is at the end of the block's text

          lastWhitespace = whitespace.offset === textLength; // if whitespace is shown => return result (true or false)
          // if whitespace is not at the end of the text return false

          if (!whitespace.hidden || !lastWhitespace) {
            break;
          }
        }

        var updateIndex = 0;
        var allCharsUpdated = updateIndex === charUpdates.length; // print tags into string

        var opened = [];
        var text = block.text;
        var index = 0; // defines how many parent components disable escaping < and > characters - escaping xml is disabled by returning undefined tag - so any content is taken as components

        var escapeLevel = 0;
        tags.forEach(function (tag) {
          // print text
          var next = tag.offset;

          if (next !== index) {
            if (!allCharsUpdated && next > charUpdates[updateIndex].offset) {
              var offset = index; // print all character replaces and text between them

              while (!allCharsUpdated && offset < next) {
                // calculate offset of the next item
                var nextOffset = charUpdates[updateIndex].offset; // check if next replace should be done here

                if (nextOffset > next) break; // replace selected char

                uu5string += removeOutputSupportCharacters(text.substring(offset, nextOffset), _objectSpread({
                  escapeXml: escapeLevel === 0
                }, opened && opened.length > 0 ? opened[opened.length - 1].opts : uu5BlockItem.opts));
                uu5string += charUpdates[updateIndex].replace; // update offset and index

                offset = nextOffset + 1;
                updateIndex++;
                allCharsUpdated = charUpdates.length === updateIndex;
              } // print resting text


              uu5string += removeOutputSupportCharacters(text.substring(offset, next), _objectSpread({
                escapeXml: escapeLevel === 0
              }, opened && opened.length > 0 ? opened[opened.length - 1].opts : uu5BlockItem.opts));
            } else {
              uu5string += removeOutputSupportCharacters(text.substring(index, next), _objectSpread({
                escapeXml: escapeLevel === 0
              }, opened && opened.length > 0 ? opened[opened.length - 1].opts : uu5BlockItem.opts));
            }
          }

          index = next;

          if (tag.type === "opening") {
            if (!tag.name) escapeLevel++; // before print opening tag of component - close all styles

            var mustCloseStyles = tag.componentType === "component" && opened.length && !tag.isSelfClosing && tag.name || tag.componentType === "style" && opened.length && opened[opened.length - 1].componentType === "style" && opened[opened.length - 1].order < tag.order; // update index for self closing tags - they contain support characters

            if (tag.isSelfClosing) {
              index = tag.endOffset;
            }

            var temp;

            if (mustCloseStyles) {
              if (tag.componentType === "component") {
                temp = [].concat(opened).reverse();
              } else {
                temp = [];

                for (var styleIndex = opened.length - 1; styleIndex >= 0; styleIndex--) {
                  var style = opened[styleIndex];

                  if (style.componentType === "component" || style.order >= tag.order) {
                    break;
                  }

                  temp.push(style);
                }
              }

              temp.forEach(function (item) {
                uu5string += printClosingTag(item.name);
                item.offset = next;
                item.startOffset = next;
              }); // clear array of opened styles

              opened.splice(opened.length - temp.length, temp.length);
            } // print opening tag


            uu5string += printOpeningTag(tag.name, propsFormatter(tag.props), tag.isSelfClosing);

            if (!tag.isSelfClosing) {
              // add tag to stack
              opened.push(tag);
            } // reopen all styles


            if (mustCloseStyles) {
              temp.sort(tagComparator);
              temp.forEach(function (item) {
                uu5string += printOpeningTag(item.name, propsFormatter(item.props));
                opened.push(item);
              });
            }
          } else {
            if (tag.alreadyClosed) return; // this closing tag was already closed so simply skip to next tag

            if (!tag.name) escapeLevel--; // find index of opening tag in stack

            var openTagIndex = opened.length - 1;

            for (; openTagIndex >= 0; openTagIndex--) {
              var openedTag = opened[openTagIndex];

              if (openedTag.index === tag.index) {
                break;
              }
            }

            if (openTagIndex === opened.length - 1) {
              // print closing tag
              uu5string += printClosingTag(tag.name); // remove opening tag

              opened.pop();
            } else {
              var _loop3 = function _loop3(openedIndex) {
                var closingTag = opened[openedIndex];
                uu5string += printClosingTag(closingTag.name);

                if (closingTag.endOffset === tag.endOffset) {
                  // remove tags which should ends in same position as currently closed tag
                  opened.splice(openedIndex, 1);

                  var _closingTag = tags.find(function (tag) {
                    return tag.type === "closing" && tag.index === closingTag.index;
                  });

                  _closingTag.alreadyClosed = true;
                }
              };

              // fix crossing tags - close opened tags from last
              for (var openedIndex = opened.length - 1; openedIndex > openTagIndex; openedIndex--) {
                _loop3(openedIndex);
              } // print tag


              uu5string += printClosingTag(tag.name); // reopen crossing tags from first
              // reorder tags stack

              var openingTags = opened.slice(openTagIndex + 1);
              openingTags.forEach(function (item) {
                item.offset = next;
                item.startOffset = next;
              }); // tag which ending first must be ordered as last to minimalize crossing tags

              openingTags.sort(tagComparator);
              opened.splice.apply(opened, [openTagIndex + 1, openingTags.length].concat(_toConsumableArray(openingTags))); // print reordered tags

              for (var _index3 = openTagIndex + 1; _index3 < opened.length; _index3++) {
                var openingTag = opened[_index3];
                uu5string += printOpeningTag(openingTag.name, propsFormatter(openingTag.props));
              } // remove closed tag from stack
              // console.log(`Removing tag from opened: ${opened[openedIndex]}`);


              opened.splice(openTagIndex, 1);
            }
          }
        }); // print rest of the text
        // print all character replaces and text between them

        while (!allCharsUpdated) {
          // calculate offset of the next item
          var nextOffset = charUpdates[updateIndex].offset; // replace selected char

          uu5string += removeOutputSupportCharacters(text.substring(index, nextOffset), _objectSpread({
            escapeXml: escapeLevel === 0
          }, opened && opened.length > 0 ? opened[opened.length - 1].opts : uu5BlockItem.opts));
          uu5string += charUpdates[updateIndex].replace; // update offset and index
          // move index of printed text after last update

          index = nextOffset + 1;
          updateIndex++;
          allCharsUpdated = charUpdates.length === updateIndex;
        } // print rest of the text


        uu5string += removeOutputSupportCharacters(text.substring(index), _objectSpread({
          escapeXml: escapeLevel === 0
        }, uu5BlockItem.opts));
      }
    };

    for (var _bi2 = 0; _bi2 < raw.blocks.length; _bi2++) {
      _loop2(_bi2);
    } // sort unclosed blocks and wrappers


    var toClose = [];

    for (var i = 0; i < blockItems.length; i++) {
      toClose.push({
        depth: blockItems[i].depth,
        tag: blockItems[i].item.tag,
        blockData: blockItems[i].blockData
      });
    }

    for (var _i2 = 0; _i2 < wrappers.length; _i2++) {
      // lower depth of wrappers to ensure that wrapper is closer after block with the same depth
      toClose.push({
        depth: wrappers[_i2].depth - 0.5,
        tag: wrappers[_i2].tag
      });
    } // sort toClose array by depth of tags


    toClose.sort(function (tag1, tag2) {
      return tag2.depth - tag1.depth;
    }); // print wrapper's and block's end tags

    for (var _i3 = 0; _i3 < toClose.length; _i3++) {
      uu5string += printClosingTag(toClose[_i3].tag, toClose[_i3].blockData);
    }

    return uu5string;
  },
  uu5stringToRaw: function uu5stringToRaw(uu5string, blockDataMap, getEditorItem, propsFormatter) {
    if (!uu5string) {
      return getEmptyRaw();
    }

    var uu5stringObject;

    try {
      uu5stringObject = typeof uu5string === "string" ? uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].UU5String.parse(removeInputSupportCharacters(uu5string)) : uu5string;
    } catch (e) {
      return {
        blocks: [{
          type: "error",
          text: uu5string.replace(/^<uu5string\s*\/>/, ""),
          inlineStyleRanges: [],
          entityRanges: [],
          depth: 0,
          key: Object(draft_js__WEBPACK_IMPORTED_MODULE_1__["genKey"])()
        }],
        entityMap: {}
      };
    } // Experimentaly disabled removal of white spaces
    // uu5stringObject = removeWhiteSpace({ children: uu5stringObject }).children;
    // handle empty uu5string


    if (!uu5stringObject.length) {
      return getEmptyRaw();
    }

    var raw = {
      blocks: [],
      entityArray: []
    };
    uu5stringObject.forEach(function (block) {
      if (block.tag === "UU5.RichText.EndBlock") {
        // add special block to collect all inline styling and entities
        // consider to remove empty blocks after process all data
        raw.blocks.push({
          key: Object(draft_js__WEBPACK_IMPORTED_MODULE_1__["genKey"])(),
          text: "",
          type: "unstyled",
          depth: 0,
          inlineStyleRanges: [],
          entityRanges: [],
          _uu5richTextDataCollector: true // this means, that all inline sibling will be pleced inside this container like it is a parent

        });
        return;
      }

      processUU5StringObjectToRaw(raw, block, blockDataMap, getEditorItem, propsFormatter);
    }); // convert entityArray to entityMap

    raw.entityMap = {};
    raw.entityArray.forEach(function (item, index) {
      raw.entityMap[index] = item;
    });
    delete raw.entityArray;
    return raw;
  },
  uu5stringToEditorState: function uu5stringToEditorState(uu5string) {
    var customDecorators = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    var getEditorItem = arguments.length > 2 ? arguments[2] : undefined;
    var propsFormatterFn = arguments.length > 3 ? arguments[3] : undefined;
    // keep support for other draft default block types and add our myCustomBlock type
    var decorators = new draft_js__WEBPACK_IMPORTED_MODULE_1__["CompositeDecorator"](customDecorators); // uu5string = uu5string.replace(/(\s{2,})/g, '<UU5.RichText.Whitespace value="$1"> </UU5.RichText.Whitespace>');
    // create new state for editor from content

    var editorState;
    var isUU5String = uu5string && (_typeof(uu5string) === "object" || uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].REGEXP.uu5string.test(uu5string)); // go through all text nodes and replace whitepaces

    if (isUU5String) {
      // draft raw object cannot contain data for blocks, so we must save them separately and after creation of
      // editor state, we set them directly into state by block keys
      var blockDataMap = {};
      editorState = draft_js__WEBPACK_IMPORTED_MODULE_1__["EditorState"].createWithContent(Object(draft_js__WEBPACK_IMPORTED_MODULE_1__["convertFromRaw"])(DataConversion.uu5stringToRaw(uu5string, blockDataMap, getEditorItem, propsFormatterFn)), decorators); // set data into editor state

      for (var blockKey in blockDataMap) {
        var content = draft_js__WEBPACK_IMPORTED_MODULE_1__["Modifier"].setBlockData(editorState.getCurrentContent(), _bricks_selection_js__WEBPACK_IMPORTED_MODULE_3__["default"].modifySelection(editorState, {
          anchorKey: blockKey,
          focusKey: blockKey,
          anchorOffset: 0,
          focusOffset: 0
        }), blockDataMap[blockKey]);
        editorState = draft_js__WEBPACK_IMPORTED_MODULE_1__["EditorState"].push(editorState, content, "parse from uu5string");
      }
    } else if (uu5string) {
      editorState = draft_js__WEBPACK_IMPORTED_MODULE_1__["EditorState"].createWithContent(draft_js__WEBPACK_IMPORTED_MODULE_1__["ContentState"].createFromText(uu5string), decorators);
    } else {
      draft_js__WEBPACK_IMPORTED_MODULE_1__["EditorState"].createEmpty(decorators);
    } // create new content from uu5string


    return editorState;
  },
  parseHtmlNodeListToUu5stringObject: function parseHtmlNodeListToUu5stringObject(nodeList, htmlMappings, stylesFilter) {
    var parentBlock = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
    var trimWhiteSpaces = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;
    var dataModel = [];
    var cachedString = "";
    var trimLeft = !trimWhiteSpaces; // console.log(nodeList);

    nodeList.forEach(function (node, index) {
      var value;

      switch (node.nodeType) {
        case 1:
          // node
          // remove trailing line breaks to prevent duplication
          if (index === nodeList.length - 1 && node.tagName.toLowerCase() === "br") break; // add cached text into data model

          if (cachedString) {
            dataModel.push(cachedString);
            cachedString = "";
          } // handle node


          {
            var tagName = node.tagName.toLowerCase();
            value = translateComponents({
              tagName: tagName,
              props: nodeAttributesToProps(node.attributes),
              childNodes: node.childNodes
            }, htmlMappings, stylesFilter, true, false);
            trimLeft = trimLeft || !!value;

            if (!parentBlock && tagName === "div") {
              var blockEndingComponent = new uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].UU5String.Object();
              blockEndingComponent.tag = "UU5.RichText.EndBlock";
              dataModel.push(blockEndingComponent);
            }
          }
          break;

        case 3:
          // text
          value = node.textContent; // remove leading whitespaces

          if (!trimLeft) {
            value = value.replace(/^\s*/, "");
            trimLeft = !!value;
          } // cache string and add it to data model with next component - at the end remove ending whitespaces


          cachedString += value;
          value = null; // value = node.textContent.replace(/[\n\r]/g, "");

          break;
      }

      if (value) {
        if (Array.isArray(value)) {
          dataModel = dataModel.concat(value);
        } else {
          dataModel.push(value);
        }
      }
    });

    if (cachedString) {
      if (trimWhiteSpaces) {
        cachedString = cachedString.replace(/\s*$/, "");
      }

      dataModel.push(cachedString);
    }

    return dataModel;
  }
};
/* harmony default export */ __webpack_exports__["default"] = (DataConversion);

/***/ }),
/* 106 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _entity_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(91);
/* harmony import */ var _block_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(107);
/* harmony import */ var _environment_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(33);
/* harmony import */ var _plugins_uu5_unstyled_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(36);
/* harmony import */ var _plugins_uu5_error_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(51);
/* harmony import */ var _plugins_uu5_whitespace_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(54);







var REQUIRED_PLUGIN_MAP = {
  unstyled: _plugins_uu5_unstyled_js__WEBPACK_IMPORTED_MODULE_4__["default"],
  error: _plugins_uu5_error_js__WEBPACK_IMPORTED_MODULE_5__["default"],
  whitespace: _plugins_uu5_whitespace_js__WEBPACK_IMPORTED_MODULE_6__["default"]
};
var WEIGHTS = {
  tagName: 100,
  className: 10,
  style: 2,
  final: -1
};

var calculateWeight = function calculateWeight(mapping) {
  var weight = 0;

  if (mapping.tagName) {
    weight += WEIGHTS.tagName;
  }

  if (mapping.classNames) {
    if (Array.isArray(mapping.classNames)) {
      weight += WEIGHTS.className * mapping.classNames.length;
    } else {
      weight += WEIGHTS.className;
    }
  }

  if (mapping.style) {
    weight += Object.keys(mapping.style).length * WEIGHTS.style;
  }

  if (mapping.final) {
    weight += WEIGHTS.final;
  }

  return weight;
};

var sortMappings = function sortMappings(mapping1, mapping2) {
  var order1 = mapping1.order;

  if (!order1) {
    order1 = calculateWeight(mapping1);
    mapping1.order = order1;
  }

  var order2 = mapping2.order;

  if (!order2) {
    order2 = calculateWeight(mapping2);
    mapping2.order = order2;
  }

  return order2 - order1;
};

var Plugin = {
  processPlugins: function processPlugins(plugins) {
    var pluginExtensions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var blockRendererFnMap; // map of block render maps

    var result = {
      buttonMap: {},
      // map of button definitions fro toolbar
      htmlMappings: [],
      areaConfig: {
        commands: [],
        customStyleMap: {},
        // map of inline styles
        blockRenderMap: {},
        // map of block renderer functions
        getEditationFormMap: {},
        decorators: [],
        // set of decorators
        entityOptions: {}
      }
    }; // process plugins

    plugins.forEach(function (plugin) {
      // push commands to global array
      if (plugin.commands) {
        result.areaConfig.commands = result.areaConfig.commands.concat(plugin.commands);
      } // process all buttons - clone necesary properties and merge extensions into props


      if (plugin.buttonMap) {
        var buttonMap = plugin.buttonMap;
        var extension = pluginExtensions[plugin.name]; // process extension for this plugin

        if (extension) {
          for (var name in extension) {
            if (name === "buttonMap") {
              var extButtonMap = extension.buttonMap; // merge extensions to button

              for (var buttonName in extButtonMap) {
                if (!buttonMap[buttonName]) {
                  // there is posibility to create whole new button
                  continue;
                } // shallow clone button props to prevent changes in original button definition shared between more editors


                var button = buttonMap[buttonName];
                var resultButton = {};

                for (var key in button) {
                  resultButton[key] = button[key];
                }

                resultButton.props = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Tools.merge(resultButton.props, extButtonMap[buttonName]);
                buttonMap[buttonName] = resultButton;
              }

              continue;
            } // copy new value to plugin definition


            plugin[name] = extension[name];
          }
        } // bind all getProps methods to plugin


        for (var _buttonName in buttonMap) {
          var _button = buttonMap[_buttonName];

          if (_button.getProps) {
            _button.getProps = _button.getProps.bind(plugin);
          }
        }

        result.buttonMap = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Tools.merge(result.buttonMap, buttonMap);
      } // process all defined inline styles


      if (plugin.customStyleMap) {
        result.areaConfig.customStyleMap = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Tools.merge(result.areaConfig.customStyleMap, plugin.customStyleMap);
      } // process all blocks


      if (plugin.blockMap) {
        for (var blockName in plugin.blockMap) {
          var block = plugin.blockMap[blockName];

          if (block.rendererFn) {
            blockRendererFnMap = blockRendererFnMap || {}; // initialization

            blockRendererFnMap[blockName] = block.rendererFn;
          }

          if (block.renderMap) {
            result.areaConfig.blockRenderMap[blockName] = block.renderMap; // wrapper cannot be set directly due to contentMixin expandChildProps method
            // this method clone wrapper but we need to be able to have one instance of object in multiple wrappers

            if (block.renderMap.wrapperName) {
              result.areaConfig.blockRenderMap[blockName].wrapper = (_environment_js__WEBPACK_IMPORTED_MODULE_3__["default"].wrapperMap || {})[block.renderMap.wrapperName];
            }
          }
        }
      } // process editation forms


      if (plugin.getEditationFormMap) {
        for (var formName in plugin.getEditationFormMap) {
          result.areaConfig.getEditationFormMap[formName] = plugin.getEditationFormMap[formName];
        }
      } // process decorators


      if (plugin.entities) {
        // transform entities to array and then process all entities
        var entities = Array.isArray(plugin.entities) ? plugin.entities : [plugin.entities];
        entities.forEach(function (entity) {
          result.areaConfig.decorators.push({
            component: entity.component,
            strategy: entity.strategy || _entity_js__WEBPACK_IMPORTED_MODULE_1__["default"].getDefaultStrategy(entity.name || plugin.name)
          });
        });
      } // process entity options from toEditorItemDefs


      if (plugin.toEditorItemDefs) {
        plugin.toEditorItemDefs.forEach(function (item) {
          if (item.type === "entity") {
            // set only valid options - now is only option preserveEnters
            if (item.preserveEnters) {
              result.areaConfig.entityOptions[item.name] = {
                preserveEnters: item.preserveEnters
              };
            }
          }
        });
      } // process html mappings


      if (plugin.htmlMappings) {
        result.htmlMappings = result.htmlMappings.concat(Array.isArray(plugin.htmlMappings) ? plugin.htmlMappings : [plugin.htmlMappings]);
      }

      if (blockRendererFnMap) {
        result.areaConfig.blockRendererFn = _block_js__WEBPACK_IMPORTED_MODULE_2__["default"].createBlockRendererFn(blockRendererFnMap);
      }
    }); // sort mapping by order

    result.htmlMappings.sort(sortMappings);
    return result;
  },
  mergePlugins: function mergePlugins(props, pluginMap) {
    // merge plugins with existing plugins if props.plugins is set by an object, if plugins is set as an array, then replace all plugins by new one
    var result = [];
    var addedPlugins = {};
    var requiredPluginMap = {
      unstyled: false,
      error: false
    };

    if (props && props.plugins) {
      if (Array.isArray(props.plugins)) {
        props.plugins.forEach(function (plugin) {
          result.push(plugin);

          if (requiredPluginMap[plugin.name] === false) {
            requiredPluginMap[plugin.name] = true;
          }
        });

        for (var pluginName in requiredPluginMap) {
          if (requiredPluginMap[pluginName]) continue;
          result.push(pluginMap[pluginName] || REQUIRED_PLUGIN_MAP[pluginName]);
        }

        return result;
      } else {
        for (var _pluginName in props.plugins) {
          result.push(props.plugins[_pluginName]);
          addedPlugins[_pluginName] = true;
        }
      }
    }

    for (var _pluginName2 in pluginMap) {
      // do not add already added plugins
      if (addedPlugins[_pluginName2]) continue;
      result.push(pluginMap[_pluginName2]);
    } // for inline mode keep only inline plugins


    if (props.inline) {
      result = result.filter(function (p) {
        var pDef = p.toJSON();
        if (requiredPluginMap.hasOwnProperty(pDef.name)) return true;
        return pDef.type !== "block";
      });
    }

    return result;
  }
};
/* harmony default export */ __webpack_exports__["default"] = (Plugin);

/***/ }),
/* 107 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);

var Block = {
  createBlockRendererFn: function createBlockRendererFn(blockRenderFnMap) {
    return function (block) {
      var type = block.getType();
      var data = block.getData();
      var props = data.get("props");

      if (props) {
        // props is imutable map
        props = props.toJSON();
      } else {
        props = {};
      }

      var customBlock = blockRenderFnMap[type];

      if (typeof customBlock === "function") {
        return {
          component: customBlock,
          props: props
        };
      } else {
        return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Tools.merge({
          props: props
        }, customBlock);
      }
    };
  }
};
/* harmony default export */ __webpack_exports__["default"] = (Block);

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(109);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":false}

options.transform = transform
options.insertInto = function anonymous(
) {
return __webpack_require__(15)();
};

var update = __webpack_require__(16)(content, options);

if(content.locals) module.exports = content.locals;



/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(14)(false);
// Module
exports.push([module.i, ".uu5-richtext-editor {\n  position: relative;\n}\n.uu5-richtext-editor-transparent .public-DraftEditor-content {\n  background: transparent;\n}\n.uu5-richtext-editor .uu5-richtext-toolbar {\n  border: none;\n  border-radius: 0;\n  position: absolute;\n  top: 2px;\n  left: 2px;\n  right: 2px;\n  height: 33px;\n}\n.uu5-richtext-editor .uu5-richtext-toolbar > div::after {\n  content: \"\";\n  display: block;\n  height: 0;\n  position: absolute;\n  left: -2px;\n  width: calc(100% + 4px);\n  border-bottom: 1px solid #bdbdbd;\n}\n.uu5-richtext-editor .public-DraftEditor-content {\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n}\n.uu5-richtext-editor .public-DraftEditor-content .uu5-bricks-ul > .uu5-bricks-li > div {\n  display: inline-block;\n}\n", ""]);



/***/ }),
/* 110 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_0__);

var PLUGIN_NAME = "save";
var pluginDef = immutable__WEBPACK_IMPORTED_MODULE_0___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_0___default.a.fromJS({
  name: PLUGIN_NAME,
  type: "custom",
  commands: {
    keyCode: 83,
    // s
    fn: function fn() {
      // only log saving. There is no way how to call save on any component
      // eslint-disable-next-line no-console
      console.log("Save");
      return true;
    }
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (pluginDef);

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(112);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":false}

options.transform = transform
options.insertInto = function anonymous(
) {
return __webpack_require__(15)();
};

var update = __webpack_require__(16)(content, options);

if(content.locals) module.exports = content.locals;



/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(14)(false);
// Module
exports.push([module.i, ".uu5-richtext-block {\n  position: relative;\n  min-height: 32px;\n}\n.uu5-richtext-block .uu5-richtext-block-close-button {\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  z-index: 2;\n}\n.uu5-richtext-block .uu5-richtext-block-close-button:not(:active):not(:focus):not(:hover) {\n  background: #FFFFFF;\n}\n.uu5-richtext-block .uu5-richtext-toolbar {\n  padding-right: 32px;\n}\n.uu5-richtext-block .uu5-richtext-toolbar > div {\n  margin-right: -32px;\n  padding-right: 32px;\n}\n.uu5-richtext-block .uu5-richtext-large-screen-editor .uu5-richtext-toolbar {\n  padding-right: 120px;\n}\n.uu5-richtext-block .uu5-richtext-large-screen-editor .uu5-richtext-toolbar > div {\n  margin-right: -120px;\n  padding-right: 120px;\n}\n", ""]);



/***/ }),
/* 113 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditorLazy", function() { return EditorLazy; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _bricks_defaults_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(98);
/* harmony import */ var _internal_suspense_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(29);
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

//@@viewOn:imports



var Editor = Object(_internal_suspense_js__WEBPACK_IMPORTED_MODULE_2__["lazy"])(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(__webpack_require__(97));
  });
}); //@@viewOff:imports

var EditorLazy = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.VisualComponent.create({
  displayName: "UU5.RichText.EditorLazy",
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.BaseMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    getDerivedStateFromError: function getDerivedStateFromError(error) {
      return {
        error: error
      };
    },
    opt: {
      hoc: true
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  //@@viewOff:getDefaultProps
  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    return {
      error: null
    };
  },
  //@@viewOff:standardComponentLifeCycle
  //@@viewOn:interface
  //@@viewOff:interface
  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods
  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers
  //@@viewOn:render
  render: function render() {
    var error = this.state.error;
    return error ? uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Error, {
      error: error,
      content: "UU5.RichText.Editor failed to render.",
      moreInfo: true
    }) : uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(_internal_suspense_js__WEBPACK_IMPORTED_MODULE_2__["Suspense"], {
      fallback: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.Loading, null)
    }, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(Editor, this.props));
  } //@@viewOff:render

});

EditorLazy.isMultiline = function () {
  return false;
};

EditorLazy.buttons = _toConsumableArray(_bricks_defaults_js__WEBPACK_IMPORTED_MODULE_1__["EDITOR_BUTTONS"]);
/* harmony default export */ __webpack_exports__["default"] = (EditorLazy);

/***/ }),
/* 114 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditorContext", function() { return EditorContext; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(86);
//@@viewOn:imports

 //@@viewOff:imports

var EditorContext = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.BaseMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.ContentMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    tagName: "UU5.RichText.EditorContext"
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  propTypes: {
    value: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string,
    buttons: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.arrayOf(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string),
    plugins: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.arrayOf(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.object), uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.object]),
    readOnly: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.bool,
    onChange: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.func,
    onBlur: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.func,
    onFocus: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.func,
    handleKeyCommand: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.bool,
    getToolbar: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.func,
    placeholder: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string,
    forceRenderModal: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.bool,
    bgStyle: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOf(["outline", "transparent"]),
    animatedToolbar: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.bool,
    dynamicToolbar: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.bool,
    height: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.number, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string]),
    minHeight: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.number, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string]),
    maxHeight: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.number, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string])
  },
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  //@@viewOff:getDefaultProps
  //@@viewOn:reactLifeCycle
  //@@viewOff:reactLifeCycle
  //@@viewOn:interface
  //@@viewOff:interface
  //@@viewOn:overriding
  //@@viewOff:overriding
  //@@viewOn:private
  //@@viewOff:private
  //@@viewOn:render
  render: function render() {
    // eslint-disable-next-line react/prop-types, no-unused-vars
    var _this$props = this.props,
        value = _this$props.value,
        buttons = _this$props.buttons,
        plugins = _this$props.plugins,
        readOnly = _this$props.readOnly,
        onChange = _this$props.onChange,
        onBlur = _this$props.onBlur,
        onFocus = _this$props.onFocus,
        handleKeyCommand = _this$props.handleKeyCommand,
        getToolbar = _this$props.getToolbar,
        placeholder = _this$props.placeholder,
        forceRenderModal = _this$props.forceRenderModal,
        bgStyle = _this$props.bgStyle,
        animatedToolbar = _this$props.animatedToolbar,
        dynamicToolbar = _this$props.dynamicToolbar,
        height = _this$props.height,
        maxHeight = _this$props.maxHeight,
        minHeight = _this$props.minHeight;
    return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(_context_js__WEBPACK_IMPORTED_MODULE_1__["EditorContext"].Provider, {
      value: {
        value: value,
        buttons: buttons,
        plugins: plugins,
        readOnly: readOnly,
        onChange: onChange,
        onBlur: onBlur,
        onFocus: onFocus,
        handleKeyCommand: handleKeyCommand,
        getToolbar: getToolbar,
        placeholder: placeholder,
        forceRenderModal: forceRenderModal,
        bgStyle: bgStyle,
        animatedToolbar: animatedToolbar,
        dynamicToolbar: dynamicToolbar,
        height: height,
        maxHeight: maxHeight,
        minHeight: minHeight
      }
    }, this.getChildren());
  } //@@viewOff:render

});
/* harmony default export */ __webpack_exports__["default"] = (EditorContext);

/***/ }),
/* 115 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditorInputLazy", function() { return EditorInputLazy; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _internal_suspense_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(29);
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

//@@viewOn:imports


var EditorInputWrapper = Object(_internal_suspense_js__WEBPACK_IMPORTED_MODULE_1__["lazy"])(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(__webpack_require__(116));
  });
}); //@@viewOff:imports

var EditorInputLazy = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.VisualComponent.create({
  displayName: "UU5.RichText.EditorInputLazy",
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.BaseMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    tagName: "UU5.RichText.EditorInputLazy",
    getDerivedStateFromError: function getDerivedStateFromError(error) {
      return {
        error: error
      };
    },
    opt: {
      hoc: true
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  //@@viewOff:getDefaultProps
  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    return {
      error: null
    };
  },
  //@@viewOff:standardComponentLifeCycle
  //@@viewOn:interface
  //@@viewOff:interface
  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods
  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers
  //@@viewOn:render
  render: function render() {
    var error = this.state.error;
    return error ? uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Error, {
      error: error,
      content: "UU5.RichText.Editor failed to render.",
      moreInfo: true
    }) : uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(_internal_suspense_js__WEBPACK_IMPORTED_MODULE_1__["Suspense"], {
      fallback: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.Loading, null)
    }, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(EditorInputWrapper, this.props));
  } //@@viewOff:render

});
/* harmony default export */ __webpack_exports__["default"] = (EditorInputLazy);

/***/ }),
/* 116 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _editor_input_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(117);


var EditorInputWrapper = function EditorInputWrapper(props) {
  return UU5.Common.Element.create(_editor_input_js__WEBPACK_IMPORTED_MODULE_0__["default"], props);
};

/* harmony default export */ __webpack_exports__["default"] = (EditorInputWrapper);

/***/ }),
/* 117 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditorInput", function() { return EditorInput; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g04_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(39);
/* harmony import */ var uu5g04_forms__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g04_forms__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(89);
/* harmony import */ var _editor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(97);
/* harmony import */ var _internal_create_input_component_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(118);





var EditorInput = Object(_internal_create_input_component_js__WEBPACK_IMPORTED_MODULE_4__["default"])({
  Component: _editor_js__WEBPACK_IMPORTED_MODULE_3__["default"],
  lsi: function lsi() {
    return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Environment"].Lsi.RichText.editorInput;
  },
  tagName: _config_js__WEBPACK_IMPORTED_MODULE_2__["default"].TAG + "EditorInput",
  mainClassName: _config_js__WEBPACK_IMPORTED_MODULE_2__["default"].CSS + "editor-input"
});
/* harmony default export */ __webpack_exports__["default"] = (EditorInput);

/***/ }),
/* 118 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createInputComponent", function() { return createInputComponent; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g04_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(39);
/* harmony import */ var uu5g04_forms__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g04_forms__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(89);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n            ", "\n            position: relative;\n\n            &.uu5-common-disabled .public-DraftEditor-content {\n              border-color: rgba(189, 189, 189, .42);\n              background-color: rgba(245, 245, 245, .42);\n              color: rgba(0,0,0,.24);\n            }\n\n            &.uu5-richtext-elevation--1::after {\n              content: \"\";\n              position: absolute;\n              top: 0;\n              bottom: 0;\n              left: 0;\n              right: 0;\n              box-shadow: 0 0 0 0 transparent, inset 0 1px 5px 0 rgba(0,0,0,.14), inset 0 2px 4px 0 rgba(0,0,0,.3), inset 0 1px 5px 0 rgba(0,0,0,.15);\n              pointer-events: none;\n            }\n\n            &.uu5-forms-input .DraftEditor-root .uu5-bricks-button {\n              width: auto;\n              height: auto;\n            }\n\n            /* overwrite font-size defined by UU5.Forms.TextInputMixin - mixin defines font size for icons used for control inputs */\n            &.uu5-forms-input .DraftEditor-root .uu5-bricks-icon {\n              font-size: inherit;\n            }\n\n            .uu5-forms-input-wrapper {\n              .uu5-bricks-icon {\n                text-align: left;\n                position: static;\n                padding: 0;\n                right: auto;\n                height: auto;\n              }\n            }\n\n            .uu5-richtext-toolbar {\n              .uu5-bricks-icon {\n                position: static;\n                height: 100%;\n                font-size: 20px;\n              }\n            }\n\n            && > .uu5-bricks-button {\n              min-height: ", ";\n              width: ", ";\n              height: ", ";\n              padding: 0;\n\n              > .uu5-bricks-icon {\n                position: static;\n                width: auto;\n                padding: 0;\n                font-size: ", ";\n              }\n            }\n\n\n        "]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

//@@viewOn:imports


 //@@viewOff:imports

var ICON_FONT_SIZES = {
  s: "14px",
  m: "16px",
  l: "18px",
  xl: "20px"
};
var BUTTON_SIZES = {
  s: "20px",
  m: "24px",
  l: "26px",
  xl: "28px"
};
var createInputComponent = function createInputComponent(_ref) {
  var Component = _ref.Component,
      lsi = _ref.lsi,
      tagName = _ref.tagName,
      mainClassName = _ref.mainClassName;
  return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Forms.Context.withContext(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.VisualComponent.create({
    //@@viewOn:mixins
    mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.BaseMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.ElementaryMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Forms.TextInputMixin],
    //@@viewOff:mixins
    //@@viewOn:statics
    statics: {
      tagName: tagName,
      classNames: {
        main: function main(props, state) {
          return "".concat(mainClassName, " ").concat(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Css.css(_templateObject(), state.feedback === "loading" || state.disabled ? "pointer-events: none;" : "", BUTTON_SIZES[props.size], BUTTON_SIZES[props.size], BUTTON_SIZES[props.size], ICON_FONT_SIZES[props.size]));
        },
        negativeElevation: _config_js__WEBPACK_IMPORTED_MODULE_2__["default"].CSS + "elevation--1"
      },
      lsi: lsi
    },
    //@@viewOff:statics
    //@@viewOn:propTypes
    propTypes: {
      getToolbar: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.func,
      forceRenderModal: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.bool,
      plugins: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.object, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.array]),
      buttons: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.any
    },
    //@@viewOff:propTypes
    //@@viewOn:getDefaultProps
    getDefaultProps: function getDefaultProps() {
      return {
        getToolbar: undefined,
        forceRenderModal: undefined,
        plugins: undefined,
        buttons: undefined
      };
    },
    //@@viewOff:getDefaultProps
    //@@viewOn:reactLifeCycle
    getInitialState: function getInitialState() {
      this._resetValue = this.props.value;
      return {};
    },
    componentWillMount: function componentWillMount() {
      // props onValidate, feedback and message
      if (this.props.onValidate && typeof this.props.onValidate === "function") {
        this._validateOnChange({
          value: this.state.value,
          event: null,
          component: this
        });
      } else {
        this.setFeedback(this.props.feedback || "initial", this.props.message, this.state.value);
      }

      return this;
    },
    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
      // props controlled, required, value, requiredMessage, feedback, message
      if (this.props.controlled) {
        if (nextProps.required && (nextProps.value === "" || nextProps.value === null)) {
          this.setError(nextProps.requiredMessage);
        } else {
          this.setFeedback(nextProps.feedback, nextProps.message, nextProps.value);
        }
      }

      return this;
    },
    //@@viewOff:reactLifeCycle
    //@@viewOn:interface
    setCursorPosition: function setCursorPosition(cursorPosition) {
      return this._editor ? this._editor.setCursorPosition(cursorPosition) : null;
    },
    //@@viewOff:interface
    //@@viewOn:overriding
    setValue_: function setValue_(value, setStateCallback) {
      // props onValidate
      if (this._checkRequired({
        value: value
      })) {
        if (typeof this.props.onValidate === "function") {
          this._validateOnChange({
            value: value,
            event: null,
            component: this
          });
        } else {
          this.props.required ? this.setSuccess(null, value) : this.setInitial(null, value);
        }
      }

      this._editor.setValue(value, undefined, setStateCallback);

      return this;
    },
    getValue_: function getValue_(editorState) {
      return this._editor.getValue(editorState);
    },
    reset_: function reset_() {
      this.setValue(this._resetValue);
    },
    //@@viewOff:overriding
    //@@viewOn:private
    _validateOnChange: function _validateOnChange(opt) {
      // props onValidate
      var result = typeof this.props.onValidate === "function" ? this.props.onValidate(opt) : null;

      if (result) {
        if (_typeof(result) === "object") {
          if (result.feedback) {
            this.setFeedback(result.feedback, result.message, result.value);
          } else {
            this.setState({
              value: opt.value
            });
          }
        } else {
          this.showError("validateError", null, {
            context: {
              event: null,
              func: this.props.onValidate,
              result: result
            }
          });
        }
      }

      return this;
    },
    _onChange: function _onChange(e, editorState) {
      var opt = {
        value: this.getValue_(editorState),
        event: e,
        component: this
      }; // props onChange, validateOnChange

      if (!this.isDisabled() && !this.isReadOnly()) {
        if (typeof this.props.onChange === "function") {
          this.props.onChange(opt);
        } else if (this.props.validateOnChange) {
          this._validateOnChange(opt);
        } else {
          var result = this.getChangeFeedback(opt);
          var newState = {
            feedback: result.feedback,
            value: result.value
          };
          if (result.message) newState.message = result.message;
          this.setState(newState);
        }
      }

      this._hasFocus = false;
    },
    _onBlur: function _onBlur(e) {
      // props onBlur, validateOnChange, required
      var opt = {
        value: this.getValue(),
        event: e,
        component: this
      };

      if (typeof this.props.onBlur === "function") {
        this.props.onBlur(opt);
      } else {
        if (this._checkRequired({
          value: opt.value
        }) && !this.props.validateOnChange) {
          opt.required = this.props.required;
          var blurResult = this.getBlurFeedback(opt);

          this._setFeedback(blurResult.feedback, blurResult.message, blurResult.value);
        }
      }
    },
    _onFocus: function _onFocus(e) {
      // props onFocus
      var opt = {
        value: this.getValue(),
        event: e,
        component: this
      };

      if (typeof this.props.onFocus === "function") {
        this.props.onFocus(opt);
      } else {
        var result = this.getFocusFeedback(opt);
        result && this._setFeedback(result.feedback, result.message, result.value);
      }
    },
    _validateUu5String: function _validateUu5String(data) {
      var result;

      if (data.value && !uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.UU5String.isValid(data.value)) {
        result = {
          feedback: "error",
          message: this.getLsiComponent("invalidUu5String"),
          value: data.value
        };
      } else {
        result = {
          feedback: "success",
          message: null,
          value: data.value
        };
      }

      return result;
    },
    _registerEditor: function _registerEditor(editor) {
      this._editor = editor;
      this._textInput = editor.getArea();
    },
    _getBgStyle: function _getBgStyle() {
      if (this.props.bgStyle === "outline" || this.props.bgStyle === "transparent") {
        return this.props.bgStyle;
      }

      return undefined;
    },
    //@@viewOff:private
    //@@viewOn:render
    render: function render() {
      var inputId = this.getId() + "-uu5richtext-editor";

      var inputAttrs = this._getInputAttrs();

      var mainProps = this.getMainPropsToPass();

      if (this.props.elevation) {
        mainProps.className += " " + (this.props.elevation === -1 ? this.getClassName("negativeElevation") : uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.ClassNames.elevation + this.props.elevation);
      }

      return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create("div", inputAttrs, this.getLabel(inputId), this.getInputWrapper([uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(Component, _extends({}, this.props, mainProps, {
        hidden: this.isHidden(),
        key: "uu5richtext-expandable-editor",
        id: inputId,
        ref_: this._registerEditor,
        value: this.state.value,
        mainAttrs: this.props.inputAttrs,
        onChange: this._onChange,
        onBlur: this._onBlur,
        onFocus: this._onFocus,
        readOnly: this.isReadOnly() || this.isDisabled(),
        controlled: true,
        plugins: this.props.plugins,
        buttons: this.props.buttons,
        placeholder: this.props.placeholder || undefined,
        getToolbar: this.props.getToolbar,
        bgStyle: this._getBgStyle()
      }))]));
    } //@@viewOff:render

  }));
};
/* harmony default export */ __webpack_exports__["default"] = (createInputComponent);

/***/ }),
/* 119 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExpandableEditorInputLazy", function() { return ExpandableEditorInputLazy; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _internal_suspense_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(29);
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

//@@viewOn:imports


var ExpandableEditorInputWrapper = Object(_internal_suspense_js__WEBPACK_IMPORTED_MODULE_1__["lazy"])(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(__webpack_require__(120));
  });
}); //@@viewOff:imports

var ExpandableEditorInputLazy = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.BaseMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    tagName: "UU5.RichText.ExpandableEditorInputLazy",
    getDerivedStateFromError: function getDerivedStateFromError(error) {
      return {
        error: error
      };
    },
    opt: {
      hoc: true
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  //@@viewOff:getDefaultProps
  //@@viewOn:reactLifeCycle
  getInitialState: function getInitialState() {
    return {
      error: null
    };
  },
  //@@viewOff:reactLifeCycle
  //@@viewOn:interface
  //@@viewOff:interface
  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods
  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers
  //@@viewOn:render
  render: function render() {
    var error = this.state.error;
    return error ? uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Error, {
      error: error,
      content: "UU5.RichText.Editor failed to render.",
      moreInfo: true
    }) : uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(_internal_suspense_js__WEBPACK_IMPORTED_MODULE_1__["Suspense"], {
      fallback: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.Loading, null)
    }, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(ExpandableEditorInputWrapper, this.props));
  } //@@viewOff:render

});
/* harmony default export */ __webpack_exports__["default"] = (ExpandableEditorInputLazy);

/***/ }),
/* 120 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _expandable_editor_input_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(121);


var ExpandableEditorInputWrapper = function ExpandableEditorInputWrapper(props) {
  return UU5.Common.Element.create(_expandable_editor_input_js__WEBPACK_IMPORTED_MODULE_0__["default"], props);
};

/* harmony default export */ __webpack_exports__["default"] = (ExpandableEditorInputWrapper);

/***/ }),
/* 121 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExpandableEditorInput", function() { return ExpandableEditorInput; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g04_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(39);
/* harmony import */ var uu5g04_forms__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g04_forms__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(89);
/* harmony import */ var _expandable_editor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(122);
/* harmony import */ var _internal_create_input_component_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(118);





var ExpandableEditorInput = Object(_internal_create_input_component_js__WEBPACK_IMPORTED_MODULE_4__["default"])({
  Component: _expandable_editor_js__WEBPACK_IMPORTED_MODULE_3__["default"],
  lsi: function lsi() {
    return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Environment"].Lsi.RichText.editorInput;
  },
  tagName: _config_js__WEBPACK_IMPORTED_MODULE_2__["default"].TAG + "ExpandableEditorInput",
  mainClassName: _config_js__WEBPACK_IMPORTED_MODULE_2__["default"].CSS + "expandable-editor-input"
});
/* harmony default export */ __webpack_exports__["default"] = (ExpandableEditorInput);

/***/ }),
/* 122 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExpandableEditor", function() { return ExpandableEditor; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g04_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(39);
/* harmony import */ var uu5g04_forms__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g04_forms__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(89);
/* harmony import */ var _internal_suspense_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(29);
/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(86);
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

//@@viewOn:imports





var Editor = Object(_internal_suspense_js__WEBPACK_IMPORTED_MODULE_3__["lazy"])(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(__webpack_require__(97));
  });
}); //@@viewOff:imports

var IS_IE = navigator.userAgent.match("Trident");
var BUTTON_CANCEL_PROPS = {
  colorSchema: "default"
};
var ExpandableEditor = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.BaseMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    tagName: _config_js__WEBPACK_IMPORTED_MODULE_2__["default"].TAG + "ExpandableEditor",
    classNames: {
      main: function main(props, state) {
        return _config_js__WEBPACK_IMPORTED_MODULE_2__["default"].CSS + "expandable-editor " + uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Css.css("\n          ".concat(state.feedback === "loading" || state.disabled ? "pointer-events: none;" : "", "\n          position: relative;\n\n          :hover {\n            > .uu5-bricks-button {\n              opacity: 1;\n            }\n          }\n\n          > .uu5-richtext-editor {\n              .public-DraftEditorPlaceholder-root,\n              .public-DraftEditor-content {\n                padding: 4px;\n\n              }\n\n              .public-DraftEditor-content ").concat(IS_IE ? "" : " > div", " {\n                overflow: hidden;\n              }\n            }\n          }\n\n          > .uu5-bricks-button {\n            position: absolute;\n            right: 4px;\n            bottom: 4px;\n            opacity: 0;\n\n            &:not(:hover) {\n              background: #FFFFFF;\n            }\n          }\n        ")) + (props.width !== "auto" ? " " + uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Css.css("width: ".concat(typeof props.width === "string" ? props.width : props.width + "px")) : "");
      },
      modal: function modal(props) {
        return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Css.css("color: rgba(0,0,0,0.87);") + " " + (props.modalHeader ? "" : uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Css.css(".uu5-bricks-modal-body { padding-top: 16px;}"));
      },
      modalForm: function modalForm() {
        return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Css.css("&& { padding: 0; }");
      }
    },
    getDerivedStateFromError: function getDerivedStateFromError(error) {
      return {
        error: error
      };
    },
    opt: {
      hoc: true
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  propTypes: {
    width: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.number]),
    height: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.number]),
    minHeight: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.number]),
    maxHeight: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.number]),
    modalHeader: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.any,
    buttons: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.arrayOf(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string),
    onBlur: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.func,
    onFocus: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.func,
    readOnly: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.bool,
    ref_: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.func,
    getToolbar: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.func
  },
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      width: "auto",
      height: undefined,
      minHeight: 0,
      maxHeight: undefined,
      modalHeader: null
    };
  },
  //@@viewOff:getDefaultProps
  //@@viewOn:reactLifeCycle
  getInitialState: function getInitialState() {
    return {
      focus: this.props.focus || false,
      error: null
    }; // eslint-disable-line react/prop-types
  },
  //@@viewOff:reactLifeCycle
  //@@viewOn:interface
  //@@viewOff:interface
  //@@viewOn:overriding
  //@@viewOff:overriding
  //@@viewOn:private
  _onFocusHandler: function _onFocusHandler(onFocus) {
    if (typeof onFocus === "function") {
      for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        params[_key - 1] = arguments[_key];
      }

      onFocus.apply(void 0, params);
    }

    this.setState({
      focus: true
    });
  },
  _onBlurHandler: function _onBlurHandler(onBlur) {
    var domNode = this._editor.findDOMNode(); // eslint-disable-line react/no-find-dom-node


    domNode.scrollLeft = 0;
    domNode.scrollTop = 0;

    if (typeof onBlur === "function") {
      for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        params[_key2 - 1] = arguments[_key2];
      }

      onBlur.apply(void 0, params);
    }

    this.setState({
      focus: false
    });
  },
  _registerEditor: function _registerEditor(editor) {
    this._editor = editor;
    typeof this.props.ref_ === "function" && this.props.ref_(editor);
  },
  _registerModal: function _registerModal(modal) {
    this._modal = modal;
  },
  _registerModalEditor: function _registerModalEditor(editor) {
    this._modalEditor = editor;
  },
  _registerForm: function _registerForm(form) {
    this._form = form;
  },
  _getForm: function _getForm() {
    return this._form;
  },
  _openModal: function _openModal(e) {
    var _this = this;

    e.preventDefault();

    this._editor.getArea().setReadOnly(true, function () {
      _this._modal.open(undefined, function () {
        return (// modal has opening animation. Focus will be lost at the end of the animation.
          //Due to this set focus one frame (16ms ~ 1 frame) after end of the animation.
          setTimeout(function () {
            return _this._modalEditor.setValue(_this._editor.getValue(), true);
          }, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.Modal.defaults.animationDuration + 16)
        );
      });
    });
  },
  _closeModal: function _closeModal() {
    return this._closeModalWithCallback();
  },
  _closeModalWithCallback: function _closeModalWithCallback(callback) {
    var _this2 = this;

    this._modal.close(false);

    this._editor.getArea().setReadOnly(false, function () {
      _this2._editor.focus();

      typeof callback === "function" && callback();
    });
  },
  _saveValue: function _saveValue() {
    var _this3 = this;

    var value = this._modalEditor.getValue();

    this._closeModalWithCallback(function () {
      return _this3._editor.setValue(value, {
        focus: true
      });
    });
  },
  _getMockToolbar: function _getMockToolbar() {
    return null;
  },
  //@@viewOff:private
  //@@viewOn:render
  render: function render() {
    var _this4 = this;

    var error = this.state.error;
    return error ? uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Error, {
      error: error,
      content: "UU5.RichText.SingleLineEditor failed to render.",
      moreInfo: true
    }) : uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(_internal_suspense_js__WEBPACK_IMPORTED_MODULE_3__["Suspense"], {
      fallback: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.Loading, null)
    }, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(_context_js__WEBPACK_IMPORTED_MODULE_4__["EditorContext"].Consumer, null, function (context) {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.Div, _this4.getMainPropsToPass(), uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(Editor, _extends({}, context, _this4.props, {
        getToolbar: context.getToolbar || _this4.props.getToolbar || _this4._getMockToolbar,
        buttons: typeof context.getToolbar === "function" ? _this4.props.buttons || context.buttons : [] // eslint-disable-next-line react/jsx-no-bind
        ,
        onBlur: function onBlur() {
          for (var _len3 = arguments.length, params = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
            params[_key3] = arguments[_key3];
          }

          return _this4._onBlurHandler.apply(_this4, [_this4.props.onBlur || context.onBlur].concat(params));
        } // eslint-disable-next-line react/jsx-no-bind
        ,
        onFocus: function onFocus() {
          for (var _len4 = arguments.length, params = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
            params[_key4] = arguments[_key4];
          }

          return _this4._onFocusHandler.apply(_this4, [_this4.props.onFocus || context.onFocus].concat(params));
        },
        ref_: _this4._registerEditor
      })), uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.Button, {
        bgStyle: "transparent",
        size: "s",
        mainAttrs: {
          onMouseDown: _this4._openModal
        },
        hidden: _this4.props.readOnly,
        colorSchema: "default"
      }, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.Icon, {
        icon: "mdi-arrow-expand"
      })), uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.PortalModal, {
        ref_: _this4._registerModal,
        header: _this4.props.modalHeader,
        footer: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Forms.Controls, {
          getForm: _this4._getForm,
          buttonCancelProps: BUTTON_CANCEL_PROPS
        }),
        size: "max",
        onClose: _this4._closeModal,
        className: _this4.getClassName("modal"),
        mountContent: "onEachOpen",
        overflow: true,
        sticky: true,
        stickyBackground: true,
        controlled: false
      }, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Forms.Form, {
        ref_: _this4._registerForm,
        onCancel: _this4._closeModal,
        onSave: _this4._saveValue,
        className: _this4.getClassName("modalForm"),
        key: _this4.getId()
      }, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(Editor, _extends({}, context, _this4.props, {
        getToolbar: null,
        ref_: _this4._registerModalEditor,
        dynamicToolbar: false,
        animatedToolbar: false,
        height: 254,
        minHeight: undefined,
        maxHeight: undefined,
        onBlur: undefined,
        onFocus: undefined
      })))));
    }));
  } //@@viewOff:render

});
/* harmony default export */ __webpack_exports__["default"] = (ExpandableEditor);

/***/ }),
/* 123 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HtmlEditorLazy", function() { return HtmlEditorLazy; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _internal_suspense_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(29);
/* harmony import */ var _bricks_defaults_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(98);
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

//@@viewOn:imports



var HtmlEditor = Object(_internal_suspense_js__WEBPACK_IMPORTED_MODULE_1__["lazy"])(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(__webpack_require__(124));
  });
}); //@@viewOff:imports

var HtmlEditorLazy = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.VisualComponent.create({
  displayName: "UU5.RichText.HtmlEditorLazy",
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.BaseMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    tagName: "UU5.RichText.HtmlEditorLazy",
    getDerivedStateFromError: function getDerivedStateFromError(error) {
      return {
        error: error
      };
    },
    opt: {
      hoc: true
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  //@@viewOff:getDefaultProps
  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    return {
      error: null
    };
  },
  //@@viewOff:standardComponentLifeCycle
  //@@viewOn:interface
  //@@viewOff:interface
  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods
  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers
  //@@viewOn:render
  render: function render() {
    var error = this.state.error;
    return error ? uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Error, {
      error: error,
      content: "UU5.RichText.Area failed to render.",
      moreInfo: true
    }) : uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(_internal_suspense_js__WEBPACK_IMPORTED_MODULE_1__["Suspense"], {
      fallback: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.Loading, null)
    }, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(HtmlEditor, this.props));
  } //@@viewOff:render

});
HtmlEditorLazy.buttons = _toConsumableArray(_bricks_defaults_js__WEBPACK_IMPORTED_MODULE_2__["HTML_EDITOR_BUTTONS"]);
/* harmony default export */ __webpack_exports__["default"] = (HtmlEditorLazy);

/***/ }),
/* 124 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HtmlEditor", function() { return HtmlEditor; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(89);
/* harmony import */ var _bricks_plugin_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(106);
/* harmony import */ var _plugins_html_plugins_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(55);
/* harmony import */ var _editor_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(97);
/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(86);
/* harmony import */ var _bricks_defaults_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(98);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

//@@viewOn:imports






 //@@viewOff:imports

var withContext = function withContext(Component) {
  // disable context for jest tests - enzyme doesn't support React 16.3 Context API
  if (!uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Context.create || process.env.NODE_ENV === "test") return Component;
  var forwardRef = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Reference.forward(function (props, ref) {
    var definedProps = {};

    for (var propName in props) {
      if (props[propName] !== undefined) {
        definedProps[propName] = props[propName];
      }
    }

    return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(_context_js__WEBPACK_IMPORTED_MODULE_5__["HtmlEditorContext"].Consumer, null, function (context) {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(Component, _extends({
        ref: ref
      }, context, definedProps));
    });
  });
  forwardRef.isUu5PureComponent = true;
  forwardRef.displayName = "forwardRef(".concat(Component.displayName || Component.name || "Component", ")");
  forwardRef.tagName = Component.tagName;
  return forwardRef;
};

var HtmlEditor = withContext(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.BaseMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    tagName: _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].TAG + "HtmlEditor",
    classNames: {
      main: _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].CSS + "html-editor"
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  propTypes: {
    value: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string,
    plugins: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.arrayOf(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.object), uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.object]),
    buttons: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.arrayOf(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string),
    readOnly: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.bool,
    onChange: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.func,
    pluginExtensions: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.object,
    handleKeyCommand: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.bool,
    placeholder: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string,
    getToolbar: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.func,
    forceRenderModal: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.bool,
    bgStyle: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOf(["outline", "transparent"]),
    animatedToolbar: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.bool,
    dynamicToolbar: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.bool,
    height: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.number, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string]),
    minHeight: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.number, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string]),
    maxHeight: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.number, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string])
  },
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      value: "",
      onChange: null,
      buttons: undefined,
      plugins: null,
      readOnly: false,
      pluginExtensions: {},
      handleKeyCommand: true,
      placeholder: "",
      getToolbar: null,
      forceRenderModal: false,
      bgStyle: undefined,
      animatedToolbar: undefined,
      dynamicToolbar: undefined,
      height: undefined,
      minHeight: undefined,
      maxHeight: undefined
    };
  },
  //@@viewOff:getDefaultProps
  //@@viewOn:reactLifeCycle
  getInitialState: function getInitialState() {
    return {
      plugins: _bricks_plugin_js__WEBPACK_IMPORTED_MODULE_2__["default"].mergePlugins(this.props, _plugins_html_plugins_js__WEBPACK_IMPORTED_MODULE_3__["default"])
    };
  },
  //@@viewOff:reactLifeCycle
  //@@viewOn:interface
  setValue: function setValue(html) {
    var focus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    this._editor && this._editor.setValue(this._formatValueForUU5Editor(html), {
      focus: focus,
      propsFormatter: this._formatPropsToObject
    });
    return this;
  },
  getValue: function getValue(editorState) {
    return this._editor ? this._editor.getValue(editorState, this._formatPropsToString).replace(/^<uu5string\s*\/>/, "") : "";
  },
  getArea: function getArea() {
    return this._editor ? this._editor.getArea() : null;
  },
  setCursorPosition: function setCursorPosition(cursorPosition) {
    return this._editor ? this._editor.setCursorPosition(cursorPosition) : null;
  },
  //@@viewOff:interface
  //@@viewOn:overriding
  //@@viewOff:overriding
  //@@viewOn:private
  _registerEditor: function _registerEditor(editor) {
    this._editor = editor;

    if (this.props.value) {
      this.setValue(this.props.value);
    }
  },
  _onChange: function _onChange(editor, editorState) {
    if (typeof this.props.onChange === "function") {
      this.props.onChange(this, editorState);
    }
  },
  _formatPropsToString: function _formatPropsToString(props) {
    if (props.style) {
      var style = "";

      for (var name in props.style) {
        style += "".concat(name.replace(/[A-Z]/g, function ($1) {
          return "-" + $1.toLowerCase();
        }), ": ").concat(props.style[name], ";");
      }

      props.style = style;
    }

    return props;
  },
  _formatPropsToObject: function _formatPropsToObject(props) {
    for (var propName in props) {
      if (propName === "style") {
        var _ret = function () {
          var style = {};
          var cssRules = props.style.split(";");
          cssRules.forEach(function (rule) {
            if (!rule) return;
            var parts = rule.split(":");
            if (parts.length !== 2) return;
            var name = parts[0].replace(/-([a-z])/g, function (_, $1) {
              return $1.toUpperCase();
            }).trim();
            var value = parts[1].trim();
            style[name] = value;
          });
          props.style = style;
          return "break";
        }();

        if (_ret === "break") break;
      }
    }

    return props;
  },
  _formatValueForUU5Editor: function _formatValueForUU5Editor() {
    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.value;
    return value ? "<uu5string />" + value : null;
  },
  //@@viewOff:private
  //@@viewOn:render
  render: function render() {
    return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(_editor_js__WEBPACK_IMPORTED_MODULE_4__["default"], _extends({
      ref_: this._registerEditor
    }, this.getMainPropsToPass(), {
      plugins: this.state.plugins,
      buttons: this.props.buttons === undefined ? _bricks_defaults_js__WEBPACK_IMPORTED_MODULE_6__["HTML_EDITOR_BUTTONS"] : this.props.buttons,
      onChange: this._onChange,
      pluginExtensions: this.props.pluginExtensions,
      handleKeyCommand: this.props.handleKeyCommand,
      readOnly: this.props.readOnly,
      getToolbar: this.props.getToolbar,
      placeholder: this.props.placeholder,
      forceRenderModal: this.props.forceRenderModal,
      value: "",
      onFocus: null,
      onBlur: null,
      bgStyle: this.props.bgStyle,
      animatedToolbar: this.props.animatedToolbar,
      dynamicToolbar: this.props.dynamicToolbar,
      height: this.props.height,
      minHeight: this.props.minHeight,
      maxHeight: this.props.maxHeight
    }));
  } //@@viewOff:render

}));
/* harmony default export */ __webpack_exports__["default"] = (HtmlEditor);

/***/ }),
/* 125 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HtmlEditorContext", function() { return HtmlEditorContext; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(86);
//@@viewOn:imports

 //@@viewOff:imports

var HtmlEditorContext = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.BaseMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.ContentMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    tagName: "UU5.RichText.HtmlEditorContext"
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  propTypes: {
    value: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string,
    buttons: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.arrayOf(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string),
    plugins: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.arrayOf(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.object), uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.object]),
    readOnly: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.bool,
    onChange: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.func,
    handleKeyCommand: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.bool,
    getToolbar: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.func,
    placeholder: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string,
    bgStyle: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOf(["outline", "transparent"]),
    animatedToolbar: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.bool,
    dynamicToolbar: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.bool,
    height: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.number, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string]),
    minHeight: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.number, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string]),
    maxHeight: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.number, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string])
  },
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  //@@viewOff:getDefaultProps
  //@@viewOn:reactLifeCycle
  //@@viewOff:reactLifeCycle
  //@@viewOn:interface
  //@@viewOff:interface
  //@@viewOn:overriding
  //@@viewOff:overriding
  //@@viewOn:private
  //@@viewOff:private
  //@@viewOn:render
  render: function render() {
    var _this$props = this.props,
        value = _this$props.value,
        plugins = _this$props.plugins,
        buttons = _this$props.buttons,
        readOnly = _this$props.readOnly,
        onChange = _this$props.onChange,
        handleKeyCommand = _this$props.handleKeyCommand,
        placeholder = _this$props.placeholder,
        getToolbar = _this$props.getToolbar,
        bgStyle = _this$props.bgStyle,
        animatedToolbar = _this$props.animatedToolbar,
        dynamicToolbar = _this$props.dynamicToolbar,
        height = _this$props.height,
        maxHeight = _this$props.maxHeight,
        minHeight = _this$props.minHeight;
    return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(_context_js__WEBPACK_IMPORTED_MODULE_1__["HtmlEditorContext"].Provider, {
      value: {
        value: value,
        plugins: plugins,
        buttons: buttons,
        readOnly: readOnly,
        onChange: onChange,
        handleKeyCommand: handleKeyCommand,
        placeholder: placeholder,
        getToolbar: getToolbar,
        bgStyle: bgStyle,
        animatedToolbar: animatedToolbar,
        dynamicToolbar: dynamicToolbar,
        height: height,
        maxHeight: maxHeight,
        minHeight: minHeight
      }
    }, this.getChildren());
  } //@@viewOff:render

});
/* harmony default export */ __webpack_exports__["default"] = (HtmlEditorContext);

/***/ }),
/* 126 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ToolbarLazy", function() { return ToolbarLazy; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _internal_suspense_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(29);
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }



var Toolbar = Object(_internal_suspense_js__WEBPACK_IMPORTED_MODULE_1__["lazy"])(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(__webpack_require__(99));
  });
});
var ToolbarLazy = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.VisualComponent.create({
  displayName: "UU5.RichText.ToolbarLazy",
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.BaseMixin],
  //@@viewOff:mixins
  statics: {
    tagName: "UU5.RichText.ToolbarLazy",
    getDerivedStateFromError: function getDerivedStateFromError(error) {
      return {
        error: error
      };
    },
    opt: {
      hoc: true
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  //@@viewOff:getDefaultProps
  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    return {
      error: null
    };
  },
  //@@viewOff:standardComponentLifeCycle
  //@@viewOn:interface
  //@@viewOff:interface
  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods
  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers
  //@@viewOn:render
  render: function render() {
    var error = this.state.error;
    return error ? uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Error, {
      error: error,
      content: "UU5.RichText.Toolbar failed to render.",
      moreInfo: true
    }) : uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(_internal_suspense_js__WEBPACK_IMPORTED_MODULE_1__["Suspense"], {
      fallback: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create("div", null)
    }, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(Toolbar, this.props));
  } //@@viewOff:render

});
/* harmony default export */ __webpack_exports__["default"] = (ToolbarLazy);

/***/ }),
/* 127 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmptyPlugin", function() { return EmptyPlugin; });
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_0__);

var EmptyPlugin = immutable__WEBPACK_IMPORTED_MODULE_0___default.a.Map(immutable__WEBPACK_IMPORTED_MODULE_0___default.a.fromJS());
/* harmony default export */ __webpack_exports__["default"] = (EmptyPlugin);

/***/ }),
/* 128 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RichTextLsi", function() { return RichTextLsi; });
var RichTextLsi = {
  // components
  editor: {
    editorError: {
      cs: "Při běhu RichText editoru došlo k nečekané chybě. Aby bylo zabráněno ztrátě dat, poslední změna byla vrácena zpět.",
      en: "An unexpected error occurred while running the RichText editor. To prevent data loss, the last change was rolled back."
    },
    uu5stringToEditorError: {
      cs: "Nepodařilo se převést zadanou hodnotu do stavu editoru.",
      en: "Cannot parse value to editor state."
    },
    editorStateToUu5stringError: {
      cs: "Nepodařilo se převést stav editoru na data.",
      en: "Cannot get value from editor state."
    },
    htmlParseError: {
      cs: "Nepodařilo se zpracovat vložené HTML.",
      en: "Cannot parse pasted HTML."
    },
    mandatoryMethodParams: {
      cs: "Volání metody neobsahuje všechny povinné parametry.",
      en: "Method call does not have all mandatory parameters."
    }
  },
  editorInput: {
    invalidUu5String: {
      cs: "Zadaný uu5String není validní.",
      en: "Invalid uu5String.",
      sk: "Zadaný uu5String nie je validný."
    }
  },
  block: {
    saving: {
      cs: "Ukládám...",
      en: "Saving..."
    },
    endEditation: {
      cs: "Ukončit úpravy",
      en: "Stop editing"
    },
    modalHeader: {
      cs: "Editace textu",
      en: "Text editation"
    },
    modalInfo: {
      cs: "Některé komponenty definové v uu5Stringu nemusí být vyrenderovány kvůli jejich nestingLevelu.",
      en: "Note that some of the components, that are inserted in the uu5String, don't have to be rendered due to their and their parents' nestingLevel."
    },
    modalSubmitButton: {
      cs: "Uložit",
      en: "Save"
    },
    modalCancelButton: {
      cs: "Zrušit",
      en: "Cancel"
    }
  },
  // html plugins
  htmlPlugins: {
    image: {
      label: {
        cs: "Obrázek",
        en: "Image"
      }
    },
    link: {
      label: {
        cs: "Odkaz",
        en: "Link"
      },
      editationFormHeader: {
        cs: "Editace odkazu",
        en: "Edit Link"
      },
      addFormHeader: {
        cs: "Vložit odkaz",
        en: "Insert Link"
      }
    },
    linkForm: {
      additionalProps: {
        cs: "Doplňující vlastnosti",
        en: "Additional Props"
      },
      hrefAttributeMessage: {
        cs: "Uložení prázdné hodnoty způsobí ostranění komponenty.",
        en: "Submit empty value will cause to remove link component."
      }
    }
  },
  // plugins
  plugins: {
    blockIndent: {
      increaseIndentLabel: {
        cs: "Zvětšit odsazení",
        en: "Increase Indent"
      },
      decreaseIndentLabel: {
        cs: "Zmenšit odsazení",
        en: "Decrease Indent"
      }
    },
    blockquote: {
      label: {
        cs: "Citace",
        en: "Blockquote"
      }
    },
    bold: {
      label: {
        cs: "Tučné",
        en: "Bold"
      }
    },
    button: {
      label: {
        cs: "Tlačítko",
        en: "Button"
      }
    },
    code: {
      label: {
        cs: "Kód",
        en: "Code"
      }
    },
    color: {
      textColorLabel: {
        cs: "Barva textu",
        en: "Text Color"
      },
      backgroundColorLabel: {
        cs: "Barva pozadí",
        en: "Background Color"
      },
      defaultColor: {
        cs: "Výchozí barva",
        en: "Default Color"
      }
    },
    fontFamily: {
      label: {
        cs: "Písmo",
        en: "Font Family"
      }
    },
    fontSize: {
      default: {
        cs: " (výchozí)",
        en: " (default)"
      },
      label: {
        cs: "Velikost písma",
        en: "Font Size"
      }
    },
    icon: {
      label: {
        cs: "Ikona",
        en: "Icon"
      }
    },
    index: {
      subscriptLabel: {
        cs: "Dolní index",
        en: "Subscript"
      },
      superscriptLabel: {
        cs: "Horní index",
        en: "Superscript"
      }
    },
    italic: {
      label: {
        cs: "Kurzíva",
        en: "Italic"
      }
    },
    link: {
      label: {
        cs: "Odkaz",
        en: "Link"
      },
      editationFormHeader: {
        cs: "Editace odkazu",
        en: "Edit Link"
      },
      addFormHeader: {
        cs: "Vložit odkaz",
        en: "Insert Link"
      }
    },
    linkForm: {
      additionalProps: {
        cs: "Doplňující vlastnosti",
        en: "Additional Props"
      },
      hrefAttributeMessage: {
        cs: "Uložení prázdné hodnoty způsobí ostranění komponenty.",
        en: "Submit empty value will cause to remove link component."
      }
    },
    list: {
      orderedListLabel: {
        cs: "Číslovaný seznam",
        en: "Ordered List"
      },
      unorderedListLabel: {
        cs: "Odrážkový seznam",
        en: "Unordered List"
      }
    },
    p: {
      label: {
        cs: "Odstavec",
        en: "Paragraph"
      }
    },
    removeFormat: {
      label: {
        cs: "Odstranit formátování",
        en: "Remove Format"
      }
    },
    strike: {
      label: {
        cs: "Přeškrtnutí",
        en: "Strike"
      }
    },
    textAlign: {
      label: {
        center: {
          cs: "Zarovnat na střed",
          en: "Align Center"
        },
        left: {
          cs: "Zarovnat doleva",
          en: "Align Left"
        },
        right: {
          cs: "Zarovnat doprava",
          en: "Align Right"
        },
        all: {
          cs: "Zarovnání textu",
          en: "Text Align"
        }
      }
    },
    underline: {
      label: {
        cs: "Podtržení",
        en: "Underline"
      }
    }
  }
};
/* harmony default export */ __webpack_exports__["default"] = (RichTextLsi);

/***/ })
/******/ ]);