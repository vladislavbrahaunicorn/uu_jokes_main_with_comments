export const removeSpecialNodes = uu5stringObject => {
  if (uu5stringObject.tag === "UU5.RichText.Whitespace") {
    return uu5stringObject.props.props[0].value; // return value of props spaces - only property
  }

  // handle children
  if (uu5stringObject.children) {
    uu5stringObject.children = uu5stringObject.children.map(child => {
      if (typeof child === "string") {
        return child;
      }
      return removeSpecialNodes(child);
    });
  }

  // handle props content
  let contentProps = uu5stringObject.props && uu5stringObject.props.props.find(item => item.name === "content");
  if (contentProps && Array.isArray(contentProps.value)) {
    contentProps.value = contentProps.value.map(child => {
      if (typeof child === "string") {
        return child;
      }
      return removeSpecialNodes(child);
    });

    if (contentProps.value.every(item => typeof item === "string")) {
      contentProps.value = contentProps.value.join("");
    }
  }

  return uu5stringObject;
};

export default { removeSpecialNodes };
