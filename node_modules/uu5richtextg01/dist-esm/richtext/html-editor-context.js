//@@viewOn:imports
import UU5 from "uu5g04";
import { HtmlEditorContext as Context } from "./context.js";
//@@viewOff:imports

export const HtmlEditorContext = UU5.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ContentMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: "UU5.RichText.HtmlEditorContext"
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    value: UU5.PropTypes.string,
    buttons: UU5.PropTypes.arrayOf(UU5.PropTypes.string),
    plugins: UU5.PropTypes.oneOfType([UU5.PropTypes.arrayOf(UU5.PropTypes.object), UU5.PropTypes.object]),
    readOnly: UU5.PropTypes.bool,
    onChange: UU5.PropTypes.func,
    handleKeyCommand: UU5.PropTypes.bool,
    getToolbar: UU5.PropTypes.func,
    placeholder: UU5.PropTypes.string,
    bgStyle: UU5.PropTypes.oneOf(["outline", "transparent"]),
    animatedToolbar: UU5.PropTypes.bool,
    dynamicToolbar: UU5.PropTypes.bool,
    height: UU5.PropTypes.oneOfType([UU5.PropTypes.number, UU5.PropTypes.string]),
    minHeight: UU5.PropTypes.oneOfType([UU5.PropTypes.number, UU5.PropTypes.string]),
    maxHeight: UU5.PropTypes.oneOfType([UU5.PropTypes.number, UU5.PropTypes.string])
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  //@@viewOff:getDefaultProps

  //@@viewOn:reactLifeCycle
  //@@viewOff:reactLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overriding
  //@@viewOff:overriding

  //@@viewOn:private
  //@@viewOff:private

  //@@viewOn:render
  render() {
    const {
      value,
      plugins,
      buttons,
      readOnly,
      onChange,
      handleKeyCommand,
      placeholder,
      getToolbar,
      bgStyle,
      animatedToolbar,
      dynamicToolbar,
      height,
      maxHeight,
      minHeight
    } = this.props;
    return (
      <Context.Provider
        value={{
          value,
          plugins,
          buttons,
          readOnly,
          onChange,
          handleKeyCommand,
          placeholder,
          getToolbar,
          bgStyle,
          animatedToolbar,
          dynamicToolbar,
          height,
          maxHeight,
          minHeight
        }}
      >
        {this.getChildren()}
      </Context.Provider>
    );
  }
  //@@viewOff:render
});

export default HtmlEditorContext;
