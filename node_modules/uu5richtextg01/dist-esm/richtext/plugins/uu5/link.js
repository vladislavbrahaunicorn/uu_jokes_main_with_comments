import * as UU5 from "uu5g04";

import Immutable from "immutable";
import LinkForm from "./internal/link-form.js";

const PLUGIN_NAME = "link";

const pluginDef = Immutable.Map(
  Immutable.fromJS({
    name: PLUGIN_NAME,
    type: "entity",
    buttonDefs: {
      icon: "mdi-earth",
      label: () => UU5.Environment.Lsi.RichText.plugins.link.label
    },
    toEditorItemDefs: {
      tagName: "UU5.Bricks.Link",
      component: properties => {
        const dataProps = properties.contentState.getEntity(properties.entityKey).getData().props || {};
        return <UU5.Bricks.Link {...dataProps}>{properties.children}</UU5.Bricks.Link>;
      },
      htmlAliases: [{ tagName: "a" }],
      getEditationForm: (entityName, text, data, onSave, onCancel, isEdit) => {
        // plugin register only entity LINK so its not needed to check entity
        return {
          header: (
            <UU5.Bricks.Lsi
              lsi={UU5.Environment.Lsi.RichText.plugins.link[isEdit ? "editationFormHeader" : "addFormHeader"]}
            />
          ),
          content: <LinkForm data={data} text={text} onSave={onSave} onCancel={onCancel} />,
          disableBackdrop: true,
          isPopover: true
        };
      }
    }
  })
);

export default pluginDef;
