import UU5 from "uu5g04";

import Immutable from "immutable";
import ColorButton from "./internal/color-button.js";

const PLUGIN_NAME = "color";

const COLORS = [
  ["#3F51B5", "#2196F3", "#03A9F4", "#00BCD4", "#009688", "#4CAF50", "#8BC34A"],
  ["#CDDC39", "#FFEB3B", "#FFC107", "#FF9800", "#FF5722", "#F44336", "#E91E63"],
  ["#9C27B0", "#673AB7", "#795548", "#9E9E9E", "#607D8B", "#000000", "#FFFFFF"]
];

const COLOR_PREFIX = "TEXTCOLOR";
const BACKGROUND_COLOR_PREFIX = "BACKGROUNDCOLOR";

const getSelectedColorWithPrefix = (editorState, area, PREFIX) => {
  let selectedColors = editorState && area && area.getCurrentStylesWithPrefix(editorState, PREFIX);
  let selectedColorCode = selectedColors && selectedColors.length ? selectedColors[0].split(".")[1] : undefined;
  let selectedColorStyleParts = selectedColorCode && selectedColorCode.split(":");
  return selectedColorStyleParts ? selectedColorStyleParts[selectedColorStyleParts.length - 1] : undefined;
};

const getDefaultFontColor = area => {
  if (area) {
    const areaStyles = area.getStyles();
    if (areaStyles) {
      return areaStyles.color;
    }
  }

  return "#000000";
};

const getColorButtonProps = (editorState, getArea) => {
  const area = typeof getArea === "function" ? getArea() : undefined;
  return {
    selectedColor: getSelectedColorWithPrefix(editorState, area, COLOR_PREFIX),
    defaultColor: getDefaultFontColor(area)
  };
};

const getBackgroundButtonProps = (editorState, getArea) => {
  const area = typeof getArea === "function" ? getArea() : undefined;
  return {
    selectedColor: getSelectedColorWithPrefix(editorState, area, BACKGROUND_COLOR_PREFIX)
  };
};

const pluginDef = Immutable.Map(
  Immutable.fromJS({
    name: PLUGIN_NAME,
    type: "inline",
    buttonDefs: [
      {
        name: "textColor",
        button: ColorButton,
        props: {
          colors: COLORS,
          rulePrefix: COLOR_PREFIX
        },
        getProps: getColorButtonProps,
        label: () => UU5.Environment.Lsi.RichText.plugins.color.textColorLabel,
        preserveStyle: true
      },
      {
        name: "backgroundColor",
        button: ColorButton,
        props: {
          colors: COLORS,
          defaultColor: "#FFFFFF",
          styleName: "backgroundColor",
          rulePrefix: BACKGROUND_COLOR_PREFIX
        },
        getProps: getBackgroundButtonProps,
        label: () => UU5.Environment.Lsi.RichText.plugins.color.backgroundColorLabel,
        icon: "mdi-format-color-fill",
        preserveStyle: true
      }
    ],
    toEditorItemDefs: [
      {
        tagName: "UU5.Bricks.Span",
        htmlAliases: {
          tagName: "span",
          style: { color: true }
        },
        style: { color: true },
        prefix: COLOR_PREFIX
      },
      {
        tagName: "UU5.Bricks.Span",
        // disable pasting background style
        // htmlAliases: {
        //   tagName: "span",
        //   style: { backgroundColor: true }
        // },
        style: { backgroundColor: true },
        prefix: BACKGROUND_COLOR_PREFIX
      }
    ],
    toObjectDefs: [
      { prefix: COLOR_PREFIX, tagName: "UU5.Bricks.Span", style: { color: "${1}" }, order: 55 },
      { prefix: BACKGROUND_COLOR_PREFIX, tagName: "UU5.Bricks.Span", style: { backgroundColor: "${1}" } }
    ]
  })
);

export default pluginDef;
