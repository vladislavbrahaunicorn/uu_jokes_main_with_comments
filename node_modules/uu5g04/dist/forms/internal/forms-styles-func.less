@import "../forms-ns.less";
@import "../../tools.less";

.text-input (
  @color-schema, @border, @border-focus, @color-label, @placeholder-color, @placeholder-color-bg-filled,
  @placeholder-color-bg-outline, @placeholder-color-bg-underline, @placeholder-color-bg-transparent
) {
  .color-schema-@{color-schema} {
    & when (@color-schema = default) {
      .@{forms-name}-items-input,
      .@{forms-name}-input-form-item {

        &:focus, &.@{forms-name}-input-active {
          border-color: @border-focus;
          box-shadow: inset 0 0 0 1px @border-focus;
          .elevation-mixin(inset 0 0 0 1px @border-focus);

          &.uu5-common-bg-style-transparent {
            box-shadow: none;
            .elevation-mixin(inset 0 0 0 0 transparent);
          }

          &.uu5-common-bg-style-underline {
            box-shadow: none;
            .elevation-mixin(inset 0 0 0 0 transparent);
            background: linear-gradient(to right, @border-focus, @border-focus) 0 100% no-repeat;
            background-size: 100% 1px;
          }
        }
      }
    }

    & when (@color-schema = white) {
      .@{forms-name}-input:not([class*="color-schema-"]),
      &.@{forms-name}-input {
        .@{forms-name}-label {
          color: @color-label;
        }
      }
    }

    .@{forms-name}-text-input:not([class*="color-schema-"]),
    &.@{forms-name}-text-input {
      .@{forms-name}-input-form-item {
        &:not([class*="uu5-common-bg-style-"]) {
          & when (@color-schema = black) {
            background: transparent;
          }

          & when (@color-schema = white) {
            background: transparent;
            color: #FFFFFF;
          }
        }
        &::placeholder, .@{forms-name}-input-placeholder.@{forms-name}-input-placeholder {
          color: @placeholder-color;
        }

        // autoprefixer adds another colon when placed in one line with the previous rule which causes the rule to not work
        &:-ms-input-placeholder {
          color: @placeholder-color;
        }

        &.uu5-common-bg-style-filled {
          &::placeholder, .@{forms-name}-input-placeholder.@{forms-name}-input-placeholder {
            color: @placeholder-color-bg-filled;
          }

          // autoprefixer adds another colon when placed in one line with the previous rule which causes the rule to not work
          &:-ms-input-placeholder {
            color: @placeholder-color-bg-filled;
          }
        }

        &.uu5-common-bg-style-outline {
          &::placeholder, .@{forms-name}-input-placeholder.@{forms-name}-input-placeholder {
            color: @placeholder-color-bg-outline;
          }

          // autoprefixer adds another colon when placed in one line with the previous rule which causes the rule to not work
          &:-ms-input-placeholder {
            color: @placeholder-color-bg-outline;
          }
        }

        &.uu5-common-bg-style-underline {
          &::placeholder, .@{forms-name}-input-placeholder.@{forms-name}-input-placeholder {
            color: @placeholder-color-bg-underline;
          }

          // autoprefixer adds another colon when placed in one line with the previous rule which causes the rule to not work
          &:-ms-input-placeholder {
            color: @placeholder-color-bg-underline;
          }
        }

        &.uu5-common-bg-style-transparent {
          &::placeholder, .@{forms-name}-input-placeholder.@{forms-name}-input-placeholder {
            color: @placeholder-color-bg-transparent;
          }

          // autoprefixer adds another colon when placed in one line with the previous rule which causes the rule to not work
          &:-ms-input-placeholder {
            color: @placeholder-color-bg-transparent;
          }
        }
      }

      .@{forms-name}-input-form-item:focus, .@{forms-name}-input-active {
        border-color: @border-focus;
        .box-shadow(inset 0 0 0 1px @border-focus);
        .elevation-mixin(inset 0 0 0 1px @border-focus);

        &.uu5-common-bg-style-transparent {
          box-shadow: none;
          .elevation-mixin(inset 0 0 0 0 transparent);
        }

        &.uu5-common-bg-style-underline {
          box-shadow: none;
          .elevation-mixin(inset 0 0 0 0 transparent);
          background: linear-gradient(to right, @border-focus, @border-focus) 0 100% no-repeat;
          background-size: 100% 1px;
        }
      }

      .@{name}-text-icon-link:focus > .uu5-bricks-icon {
        .box-shadow(inset 0 0 0 2px @border-focus);
      }
    }

    .@{forms-name}-items-input:not([class*="color-schema-"]),
    &.@{forms-name}-items-input {
      &:not([class*="uu5-common-bg-style-"]) {
        & when (@color-schema = black) {
          background: transparent;
        }

        & when (@color-schema = white) {
          background: transparent;
          color: #FFFFFF;
        }
      }

      &:focus, &.@{forms-name}-items-input-open, &.@{forms-name}-input-active {
        border-color: @border-focus;
        box-shadow: inset 0 0 0 1px @border-focus;
        .elevation-mixin(inset 0 0 0 1px @border-focus);

        &.uu5-common-bg-style-transparent {
          box-shadow: none;
          .elevation-mixin(inset 0 0 0 0 transparent);
        }

        &.uu5-common-bg-style-underline {
          box-shadow: none;
          .elevation-mixin(inset 0 0 0 0 transparent);
          background: linear-gradient(to right, @border-focus, @border-focus) 0 100% no-repeat;
          background-size: 100% 1px;
        }
      }

      .@{forms-name}-input-placeholder.@{forms-name}-input-placeholder {
        color: @placeholder-color;
      }

      &.uu5-common-bg-style-filled {
        .@{forms-name}-input-placeholder.@{forms-name}-input-placeholder {
          color: @placeholder-color-bg-filled;
        }
      }

      &.uu5-common-bg-style-outline {
        .@{forms-name}-input-placeholder.@{forms-name}-input-placeholder {
          color: @placeholder-color-bg-outline;
        }
      }

      &.uu5-common-bg-style-underline {
        .@{forms-name}-input-placeholder.@{forms-name}-input-placeholder {
          color: @placeholder-color-bg-underline;
        }
      }

      &.uu5-common-bg-style-transparent {
        .@{forms-name}-input-placeholder.@{forms-name}-input-placeholder {
          color: @placeholder-color-bg-transparent;
        }
      }
    }

    .error-input(@selector) {
      .error-input-styles() {
        .box-shadow(inset 0 0 0 1px @border-focus);

        &.uu5-common-bg-style-filled {
          border-color: @border;
          box-shadow: none;
          .elevation-mixin(inset 0 0 0 1px @border-focus);

          &:focus {
            border-color: @border;
          }
        }

        &.uu5-common-bg-style-outline {
          .box-shadow(inset 0 0 0 1px @border-focus);
          .elevation-mixin(inset 0 0 0 1px @border-focus);
        }

        &.uu5-common-bg-style-underline {
          background: linear-gradient(to right, @border-focus, @border-focus) 0 100% no-repeat;
          background-size: 100% 1px;
          box-shadow: none;
          .elevation-mixin(inset 0 0 0 0 transparent);
        }

        &.uu5-common-bg-style-transparent {
          background: linear-gradient(to right, @border-focus, @border-focus) 0 100% no-repeat;
          background-size: 100% 1px;
          box-shadow: none;
          .elevation-mixin(inset 0 0 0 0 transparent);
        }
      }

      &@{selector} {
        & when (@selector = ~".@{forms-name}-text-input") {
          .@{forms-name}-input-error {
            .error-input-styles();
          }
        }

        & when (@selector = ~".@{forms-name}-items-input") {
          &.@{forms-name}-input-error {
            .error-input-styles();
          }
        }
      }
    }

    .error-input(~".@{forms-name}-text-input");
    .error-input(~".@{forms-name}-items-input");

    &.@{forms-name}-text-input {
      .@{forms-name}-input-form-item {
        &.uu5-common-bg-style-outline, &.uu5-common-bg-style-underline {
          border-color: @border;
        }
      }
    }

    &.uu5-common-bg-style-underline, &.uu5-common-bg-style-outline {
      &.@{forms-name}-items-input {
        border-color: @border;
      }
    }
  }

  // TODO for what?
  .color-schema-@{color-schema} .@{forms-name}-items-input-item-link .@{forms-name}-items-input-item-icon {
    color: #ccc;
  }

  .@{forms-name}-select-multiple {
    .@{forms-name}-input-form-item.color-schema-@{color-schema} {
      background-color: #F5F5F5;
      color: rgba(0, 0, 0, 0.87);
      border: none;
      width: auto;
      font-family: ClearSans-medium;

      .@{forms-name}-items-input-item-link {
        display: inline-block;
      }
      .uu5-bricks-icon {
        color: rgba(0, 0, 0, 0.54);
        padding: 0;
        height: auto;
        font-size: 16px;
      }
    }

    .@{forms-name}-items-input.uu5-common-disabled .@{forms-name}-input-form-item {
      background-color: #E0E0E0;
    }
  }
}
