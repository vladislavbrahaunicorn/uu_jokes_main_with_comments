let instances = {};

const InstanceCounter = {
  getInstances(tagName) {
    return instances[tagName] || [];
  },

  Mixin: {
    componentDidMount() {
      let compInstances = instances[this.getTagName()];
      if (!compInstances) compInstances = instances[this.getTagName()] = [];
      compInstances.push(this);
    },
    componentWillUnmount() {
      let compInstances = instances[this.getTagName()];
      if (compInstances) {
        let idx = compInstances.indexOf(this);
        if (idx != -1) compInstances.splice(idx, 1);
      }
    }
  }
};

export const FilePasteHandlerMixin = {
  mixins: [InstanceCounter.Mixin],
  componentDidMount() {
    if (!this.pasteFiles_) throw new Error("FilePasteHandler requires method pasteFiles_(blobs) to be defined.");
    if (InstanceCounter.getInstances("Plus4U5.Files.FileManager").length === 1) {
      document.addEventListener("paste", handleDocumentPaste);
    }
  },
  componentWillUnmount() {
    if (InstanceCounter.getInstances("Plus4U5.Files.FileManager").length === 0) {
      document.removeEventListener("paste", handleDocumentPaste);
    }
  }
};

// NOTE This method must not be instance method (or mount/unmount listener registering would have to change).
function handleDocumentPaste(e) {
  if (e.repeat !== true) {
    // find out how many instances of Input / UploadInput components are present & visible
    let instances = InstanceCounter.getInstances("Plus4U5.Files.FileManager");
    let pastableInstances = instances.filter(it => {
      let result = false;
      if (!it.props.ignorePaste) {
        let domNode = it.findDOMNode(); // eslint-disable-line
        if (domNode) {
          let computedStyle = getComputedStyle(domNode);
          if (computedStyle.visibility !== "hidden" && computedStyle.display !== "none") result = true;
        }
      }
      return result;
    });

    if (pastableInstances.length === 1) {
      // paste files to the component
      let items = (e.clipboardData || e.originalEvent.clipboardData || {}).items;
      let blobs = [];
      for (let index in items) {
        let item = items[index];
        if (item.kind === "file") {
          let blob = item.getAsFile();
          blobs.push(blob);
        }
      }
      if (blobs.length > 0) {
        let component = pastableInstances[0];
        component.pasteFiles_(blobs);
      }
    }
  }
}

export default FilePasteHandlerMixin;
