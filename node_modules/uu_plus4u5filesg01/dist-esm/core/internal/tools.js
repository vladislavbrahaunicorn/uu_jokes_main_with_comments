export const normalizeTagsValue = function(value) {
  return value
    .split(",")
    .filter(item => !item.match(/^\s*$/))
    .map(item => item.trim());
};

export const parseScreenSizeProp = (value, defaultValue, process) => {
  let result = {};

  // value should be a string like "xs-value s-value ..." or an object like {xs: value, s: value, ...}
  if (typeof value === "string") {
    value.split(" ").forEach(value => {
      let valueParts = value.split("-");
      result[valueParts[0]] = valueParts[1];
    });
  } else {
    result = { ...value };
  }

  let lastValue = defaultValue;
  ["xs", "s", "m", "l", "xl"].forEach(size => {
    lastValue = result[size] || lastValue;
    result[size] = typeof process === "function" ? process(lastValue) : lastValue;
  });

  return result;
};

const Tools = {
  normalizeTagsValue,
  parseScreenSizeProp
};

export default Tools;
