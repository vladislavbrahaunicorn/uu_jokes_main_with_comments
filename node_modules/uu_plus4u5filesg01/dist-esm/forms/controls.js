import * as UU5 from "uu5g04";
import Config from "../config/config.js";

import Lsi from "../config/lsi.js";
import LsiHelper from "../helpers/lsi-helper.js";

import "./controls.less";

const Controls = UU5.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: Config.TAG + "Controls",
    classNames: {
      main: Config.CSS + "controls",
      codeButtons: Config.CSS + "controls-code-buttons"
    },
    opt: {
      nestingLevelWrapper: true
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    formComponent: UU5.PropTypes.func,
    hasDelete: UU5.PropTypes.bool,
    label: UU5.PropTypes.oneOfType([UU5.PropTypes.string, UU5.PropTypes.object])
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      hasDelete: false
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState() {
    return {
      disabledButton: false
    };
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  setDisabledButton(b) {
    this.setState({ disabledButton: b });
  },
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _save(e) {
    if (
      this.props.formComponent() &&
      this.props.formComponent().getForm() &&
      this.props
        .formComponent()
        .getForm()
        .isValid()
    ) {
      this.props.formComponent() &&
        this.props.formComponent().getForm() &&
        this.props
          .formComponent()
          .getForm()
          .save();
    }
    return this;
  },

  _getMainPropsToPass() {
    let props = this.getMainPropsToPass();
    props.disabled = false;
    return props;
  },

  _getButtons() {
    let buttonCancelComp = (
      <UU5.Bricks.Button
        onClick={() =>
          this.props.formComponent().getForm() &&
          this.props
            .formComponent()
            .getForm()
            .cancel()
        }
        content={LsiHelper.getLsiComponent(Lsi.LSI_LABEL_BUTTON_CANCEL)}
        disabled={this.isDisabled()}
        key="Cancel"
      />
    );
    let buttonOkComp = (
      <UU5.Bricks.Button
        colorSchema={this.props.hasDelete ? "danger" : "primary"}
        onClick={this._save}
        content={LsiHelper.getLsiComponent(
          this.props.label
            ? this.props.label
            : this.props.hasDelete
              ? Lsi.LSI_LABEL_BUTTON_DELETE
              : Lsi.LSI_LABEL_BUTTON_SAVE
        )}
        disabled={this.isDisabled() || this.state.disabledButton}
        key="Submit"
      />
    );
    return [buttonCancelComp, buttonOkComp];
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render() {
    return <UU5.Common.Div {...this._getMainPropsToPass()}>{this._getButtons()}</UU5.Common.Div>;
  }
  //@@viewOff:render
});

export default Controls;
