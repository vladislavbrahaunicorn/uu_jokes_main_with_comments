"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var UU5 = _interopRequireWildcard(require("uu5g04"));

var _config = _interopRequireDefault(require("../config/config.js"));

var _lsi = _interopRequireDefault(require("../config/lsi.js"));

var _lsiHelper = _interopRequireDefault(require("../helpers/lsi-helper.js"));

var _tagsSelect = _interopRequireDefault(require("./tags-select.js"));

var _css = _interopRequireDefault(require("../helpers/css.js"));

var _file = require("../helpers/file.js");

require("./dnd-form.less");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n        &&& {\n          margin: 8px 0 0;\n        }\n      "]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n        padding: 24px 0;\n      "]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var DnDBinaryForm = UU5.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    tagName: _config.default.TAG + "DnDBinaryForm",
    classNames: {
      main: _config.default.CSS + "dnd-form",
      row: _config.default.CSS + "dnd-form-row " + _css.default.css(_templateObject()),
      rowLabel: _config.default.CSS + "dnd-form-row-label",
      rowLabelRequired: _config.default.CSS + "dnd-form-row-label-required",
      formItem: _css.default.css(_templateObject2())
    },
    opt: {
      nestingLevelWrapper: true
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  propTypes: {
    done: UU5.PropTypes.func,
    onSuccess: UU5.PropTypes.func,
    onCancel: UU5.PropTypes.func,
    fileList: UU5.PropTypes.oneOfType([UU5.PropTypes.object, UU5.PropTypes.array]),
    lsiLabels: UU5.PropTypes.object,
    customCodesEnabled: UU5.PropTypes.bool,
    customCodesRequired: UU5.PropTypes.bool,
    ignoreTags: UU5.PropTypes.arrayOf(UU5.PropTypes.string),
    availableTags: UU5.PropTypes.arrayOf(UU5.PropTypes.string),
    allowCustomTags: UU5.PropTypes.bool,
    onTagCreate: UU5.PropTypes.func
  },
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {};
  },
  //@@viewOff:getDefaultProps
  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    return {
      feedbacks: {},
      messages: {},
      files: this.props.fileList.map(function (file) {
        return {
          file: file,
          feedback: "initial",
          message: undefined
        };
      })
    };
  },
  componentDidMount: function componentDidMount() {
    var _this = this;

    setTimeout(function () {
      return _this._first && _this._first.focus();
    }, 200); // TODO Remove / lower timeout when UU5 fixes animation of modal.
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    if (this.props.fileList !== nextProps.fileList) {
      this.setState({
        files: nextProps.fileList.map(function (file) {
          return {
            file: file,
            feedback: "initial",
            message: undefined
          };
        })
      });
    }
  },
  //@@viewOff:standardComponentLifeCycle
  //@@viewOn:interface
  getForm: function getForm() {
    return this._form;
  },
  //@@viewOff:interface
  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods
  //@@viewOn:componentSpecificHelpers
  _registerFileInput: function _registerFileInput(key, value) {
    this._validateFileSize(key, value);
  },
  _validateFileSize: function _validateFileSize(key, file) {
    var _this2 = this;

    if (file) {
      // check file size after adjustment
      (0, _file.adjustFile)(file, this.props).then(function (adjustedFile) {
        var stateObject = _objectSpread({}, _this2.state.files[key]);

        var newFiles = _toConsumableArray(_this2.state.files);

        if (adjustedFile && adjustedFile.size > (0, _file.getMaxFileSize)(_this2.props.sizeLimit) * 1024) {
          stateObject.feedback = "error";
          stateObject.message = _lsiHelper.default.getLsiComponent(_this2.props.lsiLabels.fileSizeExceededError, {
            maxSize: (0, _file.getMaxFileSize)(_this2.props.sizeLimit) + "KB"
          });
          stateObject.file = adjustedFile;
          newFiles[key] = stateObject;

          _this2.setState({
            files: newFiles
          });
        } else {
          stateObject.feedback = "initial";
          stateObject.message = undefined;
          stateObject.file = adjustedFile;
          newFiles[key] = stateObject;

          _this2.setState({
            files: newFiles
          });
        }
      });
    } else {
      var stateObject = _objectSpread({}, this.state.files[key]);

      var newFiles = _toConsumableArray(this.state.files);

      stateObject.feedback = "initial";
      stateObject.message = undefined;
      stateObject.file = file;
      newFiles[key] = stateObject;
      this.setState({
        files: newFiles
      });
    }
  },
  _onSave: function _onSave() {
    var values = this._form.getValues();

    var codes = [];
    var tags = [];

    for (var i = 0; i < this.props.fileList.length; i++) {
      codes.push(values["code" + i]);
      tags.push(values["tag" + i]);
    }

    this.props.done(codes, tags);
    this.props.onCancel();
  },
  _validateCode: function _validateCode(opt) {
    if (opt.value && !opt.value.match(/^([a-zA-Z0-9_]){3,64}$/g)) {
      return {
        feedback: "error",
        message: _lsiHelper.default.getLsiComponent(_lsi.default.LSI_INVALID_CODE),
        value: opt.value
      };
    }
  },
  _getRow: function _getRow(fileState, key) {
    var _this3 = this;

    var showTags = this.props.availableTags || this.props.allowCustomTags;
    return UU5.Common.Element.create(UU5.Bricks.Row, {
      key: "row" + key,
      className: this.getClassName("row")
    }, this.props.customCodesEnabled ? UU5.Common.Element.create(UU5.Forms.Text, {
      label: _lsiHelper.default.getLsiComponent(_lsi.default.LSI_LABEL_ADD_BINARY_CODE),
      inputColWidth: "s-12 m-7",
      labelColWidth: "s-12 m-5",
      className: this.getClassName("formItem"),
      name: "code" + key,
      ref_: function ref_(r) {
        key === 0 && (_this3._first = r);
      },
      inputAttrs: {
        autoComplete: "off"
      },
      onValidate: this._validateCode,
      required: this.props.customCodesRequired,
      requiredMessage: this.props.customCodesRequired && _lsiHelper.default.getLsiComponent(_lsi.default.LSI_LABEL_ADD_BINARY_CODE_REQUIRED),
      controlled: false
    }) : null, showTags ? UU5.Common.Element.create(_tagsSelect.default, {
      label: _lsiHelper.default.getLsiComponent(_lsi.default.LSI_LABEL_ADD_TAGS),
      inputColWidth: "s-12 m-7",
      labelColWidth: "s-12 m-5",
      className: this.getClassName("formItem"),
      availableTags: this.props.availableTags,
      ignoreTags: this.props.ignoreTags,
      allowCustomTags: this.props.allowCustomTags,
      name: "tag" + key,
      displayHint: false,
      controlled: false
    }) : null, UU5.Common.Element.create(UU5.Forms.File, {
      ref_: function ref_() {
        return _this3._registerFileInput(key, fileState.file);
      },
      label: _lsiHelper.default.getLsiComponent(this.props.lsiLabels.addBinaryFormFile),
      inputColWidth: "s-12 m-7",
      labelColWidth: "s-12 m-5",
      className: this.getClassName("formItem"),
      name: "file" + key,
      value: fileState.file,
      feedback: fileState.feedback,
      message: fileState.message,
      onChange: function onChange(_ref) {
        var value = _ref.value;
        return _this3._validateFileSize(key, value);
      },
      required: true
    }));
  },
  _getRows: function _getRows() {
    var rows = [];

    for (var i = 0; i < this.state.files.length; i++) {
      rows.push(this._getRow(this.state.files[i], i));
    }

    return rows;
  },
  _getChild: function _getChild() {
    var _this4 = this;

    return UU5.Common.Element.create(UU5.Forms.Form, _extends({}, this.getMainPropsToPass(), {
      onSave: function onSave(_ref2) {
        var component = _ref2.component,
            values = _ref2.values;
        return _this4._onSave(component, values);
      },
      onCancel: this.props.onCancel,
      ref_: function ref_(form) {
        return _this4._form = form;
      }
    }), this._getRows());
  },
  //@@viewOff:componentSpecificHelpers
  //@@viewOn:render
  render: function render() {
    return this._getChild();
  } //@@viewOff:render

});
var _default = DnDBinaryForm;
exports.default = _default;