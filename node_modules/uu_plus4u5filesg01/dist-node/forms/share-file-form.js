"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ShareFileForm = void 0;

var UU5 = _interopRequireWildcard(require("uu5g04"));

var _config = _interopRequireDefault(require("../config/config.js"));

var _lsi = _interopRequireDefault(require("../config/lsi.js"));

var _lsiHelper = _interopRequireDefault(require("../helpers/lsi-helper.js"));

require("./share-file-form.less");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var ShareFileForm = UU5.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin, UU5.Common.CcrReaderMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    tagName: _config.default.TAG + "ShareFileForm",
    classNames: {
      main: _config.default.CSS + "share-file-form",
      radioLabel: _config.default.CSS + "share-file-form-radio-label"
    },
    opt: {
      nestingLevelWrapper: true
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  propTypes: {
    binary: UU5.PropTypes.object,
    done: UU5.PropTypes.func,
    onCancel: UU5.PropTypes.func,
    settings: UU5.PropTypes.array
  },
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {};
  },
  //@@viewOff:getDefaultProps
  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    return {
      option: "1"
    };
  },
  //@@viewOff:standardComponentLifeCycle
  //@@viewOn:interface
  getForm: function getForm() {
    return this._form;
  },
  hasUnsavedChanges: function hasUnsavedChanges() {
    return false;
  },
  //@@viewOff:interface
  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods
  //@@viewOn:componentSpecificHelpers
  _copyToClipboard: function _copyToClipboard(text) {
    var textArea = document.createElement("textarea");
    textArea.value = text;
    document.body.appendChild(textArea);
    textArea.select();

    try {
      document.execCommand("copy");
    } catch (err) {
      UU5.Common.Tools.warning("Oops, unable to copy", err);
    }

    document.body.removeChild(textArea);
  },
  _onSave: function _onSave() {
    var _this = this;

    this._embeddedText && this._copyToClipboard(this._embeddedText.getValue());
    this.props.done && this.props.done();
    this.getCcrComponentByKey(UU5.Environment.CCRKEY_PAGE).getAlertBus().clearAlerts(function () {
      _this.getCcrComponentByKey(UU5.Environment.CCRKEY_PAGE) && _this.getCcrComponentByKey(UU5.Environment.CCRKEY_PAGE).getAlertBus && _this.getCcrComponentByKey(UU5.Environment.CCRKEY_PAGE).getAlertBus() && _this.getCcrComponentByKey(UU5.Environment.CCRKEY_PAGE).getAlertBus().setAlert({
        content: _lsiHelper.default.getLsiComponent(_lsi.default.LSI_LABEL_SHARE_BINARY_SUCCESS_CONFIRM_MSG),
        colorSchema: "success",
        closeTimer: 3000
      });
    });
  },
  _getOutput: function _getOutput() {
    var output = this.props.settings[parseInt(this.state.option) - 1].value;
    var varScan = output.match(/\${[^(})]*}/g);

    if (varScan) {
      for (var i = 0; i < varScan.length; i++) {
        var attribute = varScan[i].substr(2, varScan[i].length - 3);
        var value = attribute.split(".").reduce(this._getVarOnKey, this.props.binary);
        output = output.replace(varScan[i], value !== undefined && value !== null ? value : "");
      }
    }

    return output;
  },
  _getVarOnKey: function _getVarOnKey(obj, i) {
    return obj[i];
  },
  _getChild: function _getChild() {
    var _this2 = this;

    var embeddedText = UU5.Common.Tools.findComponent("UuApp.DesignKit.EmbeddedText", {
      ref_: function ref_(r) {
        _this2._embeddedText = r;
      },
      header: _lsiHelper.default.getLsiComponent(_lsi.default.LSI_LABEL_FILE_MANAGER_SHARE_TEXT),
      level: 6,
      showCopyButton: false,
      codeStyle: this.props.settings[parseInt(this.state.option) - 1].codeStyle || "text",
      content: this._getOutput()
    });
    var radioValues = [];

    for (var i = 0; i < this.props.settings.length; i++) {
      radioValues.push({
        label: _lsiHelper.default.getLsiComponent(this.props.settings[i].label),
        name: (i + 1).toString(),
        value: this.state.option === (i + 1).toString()
      });
    }

    return UU5.Common.Element.create(UU5.Forms.Form, _extends({}, this.getMainPropsToPass(), {
      onSave: function onSave(_ref) {
        var component = _ref.component,
            values = _ref.values;
        return _this2._onSave(component, values);
      },
      onCancel: this.props.onCancel,
      ref_: function ref_(form) {
        return _this2._form = form;
      }
    }), UU5.Common.Element.create(UU5.Bricks.Div, null, UU5.Common.Element.create(UU5.Bricks.Div, {
      content: _lsiHelper.default.getLsiComponent(_lsi.default.LSI_LABEL_FILE_MANAGER_SHARE_RADIO_LABEL),
      className: this.getClassName("radioLabel")
    }), UU5.Common.Element.create(UU5.Forms.Radios, {
      value: radioValues,
      onChange: function onChange(opt) {
        _this2.setState({
          option: opt.value
        });
      }
    }), embeddedText));
  },
  //@@viewOff:componentSpecificHelpers
  //@@viewOn:render
  render: function render() {
    return this._getChild();
  } //@@viewOff:render

});
exports.ShareFileForm = ShareFileForm;
var _default = ShareFileForm;
exports.default = _default;