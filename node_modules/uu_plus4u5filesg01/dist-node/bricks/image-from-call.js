"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ImageFromCall = void 0;

var _uu5g = _interopRequireWildcard(require("uu5g04"));

var _config = _interopRequireDefault(require("../config/config.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

//@@viewOff:imports
var STATICS = {
  //@@viewOn:statics
  displayName: _config.default.TAG + "ImageFromCall" //@@viewOff:statics

};
var ImageFromCall = (0, _uu5g.createComponent)(_objectSpread({}, STATICS, {
  //@@viewOn:mixins
  //@@viewOff:mixins
  //@@viewOn:propTypes
  propTypes: {
    srcMeta: _uu5g.default.PropTypes.shape({
      data: _uu5g.default.PropTypes.any,
      uuCmd: _uu5g.default.PropTypes.oneOfType([_uu5g.default.PropTypes.func, _uu5g.default.PropTypes.string]),
      stringSrc: _uu5g.default.PropTypes.string,
      callback: _uu5g.default.PropTypes.func
    }).isRequired,
    srcReadyKey: _uu5g.default.PropTypes.string,
    onSrcReady: _uu5g.default.PropTypes.func
  },
  //@@viewOff:propTypes
  //@@viewOn:defaultProps
  defaultProps: {
    srcMeta: undefined
  },
  //@@viewOff:defaultProps
  //@@viewOn:reactLifeCycle
  getInitialState: function getInitialState() {
    // TODO Don't eagerly prepare "src" if thumbnail is set (currently it is required
    // because UU5.Imaging.Image requires both of them set).
    return {
      src: this._updateSrc("src", this.props.srcMeta),
      thumbSrc: this._updateSrc("thumbSrc", this.props.thumbSrcMeta)
    };
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    var newState = {};

    if (!_uu5g.default.Common.Tools.deepEqual(this.props.srcMeta, nextProps.srcMeta)) {
      newState.src = this._updateSrc("src", nextProps.srcMeta);
    }

    if (!_uu5g.default.Common.Tools.deepEqual(this.props.thumbSrcMeta, nextProps.thumbSrcMeta)) {
      newState.thumbSrc = this._updateSrc("thumbSrc", nextProps.thumbSrcMeta);
    }

    if (Object.keys(newState).length > 0) {
      this.setState(newState);
    }
  },
  componentDidMount: function componentDidMount() {
    this._checkSrcReady();
  },
  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {
    this._checkSrcReady();
  },
  componentWillUnmount: function componentWillUnmount() {
    this._unmounted = true;
  },
  //@@viewOff:reactLifeCycle
  //@@viewOn:interface
  //@@viewOff:interface
  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods
  //@@viewOn:private
  _checkSrcReady: function _checkSrcReady() {
    if (this._id_src === this._id_srcFinished && this._id_thumbSrc === this._id_thumbSrcFinished && this._lastReportedId !== this._id_src + " " + this._id_thumbSrc + " " + this.props.srcReadyKey) {
      this._lastReportedId = this._id_src + " " + this._id_thumbSrc + " " + this.props.srcReadyKey;

      if (typeof this.props.onSrcReady === "function") {
        this.props.onSrcReady({
          src: this.state.src,
          thumbSrc: this.state.thumbSrc
        });
      }
    }
  },
  _updateSrc: function _updateSrc(stateName, settings) {
    var _this = this;

    if (!settings) return null;

    var id = this["_id_" + stateName] = _uu5g.default.Common.Tools.generateUUID();

    var data = settings.data,
        uuCmd = settings.uuCmd,
        stringSrc = settings.stringSrc,
        callback = settings.callback;

    if (!stringSrc && typeof uuCmd === "function") {
      uuCmd(data).then(function (dataOut) {
        return _this._updateSrcDone(id, dataOut, stateName, callback);
      }, function (dataOut) {
        return _this._updateSrcFail(id, dataOut, stateName, callback);
      });
      return undefined;
    } else {
      this._updateSrcDone(id, stringSrc, stateName, callback);

      return stringSrc;
    }
  },
  _updateSrcDone: function _updateSrcDone(id, data, stateName, callback) {
    var _this2 = this;

    if (this._unmounted) return; // called synchonously from initialiation

    if (this["_id_" + stateName] === id) {
      this["_id_" + stateName + "Finished"] = id;

      if (this.state) {
        this.setState(function (state) {
          if (state[stateName] && state[stateName].match(/^blob:/)) {
            // release old image url
            window.URL.revokeObjectURL(state[stateName]);
          } // create new url to blob


          var result = {};
          result[stateName] = typeof data === "string" ? data : window.URL.createObjectURL(data);
          return result;
        }, function () {
          if (typeof callack === "function") callback(_this2.state);
        });
      }
    }
  },
  _updateSrcFail: function _updateSrcFail(id, error, stateName, callback) {
    var _this3 = this;

    if (this._unmounted) return;

    if (this["_id_" + stateName] === id) {
      this["_id_" + stateName + "Finished"] = id;

      if (this.state) {
        var result = {};
        result[stateName] = null;
        console.log(error);
        this.setState(result, function () {
          if (typeof callack === "function") callback(_this3.state);
        });
      }
    }
  },
  //@@viewOff:private
  //@@viewOn:render
  render: function render() {
    var _this$props = this.props,
        imageComponent = _this$props.imageComponent,
        srcMeta = _this$props.srcMeta,
        thumbSrcMeta = _this$props.thumbSrcMeta,
        onSrcReady = _this$props.onSrcReady,
        restProps = _objectWithoutProperties(_this$props, ["imageComponent", "srcMeta", "thumbSrcMeta", "onSrcReady"]);

    var _this$state = this.state,
        src = _this$state.src,
        thumbSrc = _this$state.thumbSrc;
    var ImageComponent = imageComponent || _uu5g.default.Bricks.Image;
    var isReadyToRender = src !== undefined && (thumbSrcMeta ? thumbSrc !== undefined : true);
    var renderAsImage = isReadyToRender && src;
    return renderAsImage ? _uu5g.default.Common.Element.create(ImageComponent, _extends({}, restProps, {
      src: src || undefined,
      thumbSrc: thumbSrc || undefined
    })) : null;
  } //@@viewOff:render

}));
exports.ImageFromCall = ImageFromCall;
var _default = ImageFromCall;
exports.default = _default;