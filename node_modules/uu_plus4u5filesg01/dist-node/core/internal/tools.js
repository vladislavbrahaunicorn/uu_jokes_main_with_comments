"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.parseScreenSizeProp = exports.normalizeTagsValue = void 0;

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var normalizeTagsValue = function normalizeTagsValue(value) {
  return value.split(",").filter(function (item) {
    return !item.match(/^\s*$/);
  }).map(function (item) {
    return item.trim();
  });
};

exports.normalizeTagsValue = normalizeTagsValue;

var parseScreenSizeProp = function parseScreenSizeProp(value, defaultValue, process) {
  var result = {}; // value should be a string like "xs-value s-value ..." or an object like {xs: value, s: value, ...}

  if (typeof value === "string") {
    value.split(" ").forEach(function (value) {
      var valueParts = value.split("-");
      result[valueParts[0]] = valueParts[1];
    });
  } else {
    result = _objectSpread({}, value);
  }

  var lastValue = defaultValue;
  ["xs", "s", "m", "l", "xl"].forEach(function (size) {
    lastValue = result[size] || lastValue;
    result[size] = typeof process === "function" ? process(lastValue) : lastValue;
  });
  return result;
};

exports.parseScreenSizeProp = parseScreenSizeProp;
var Tools = {
  normalizeTagsValue: normalizeTagsValue,
  parseScreenSizeProp: parseScreenSizeProp
};
var _default = Tools;
exports.default = _default;